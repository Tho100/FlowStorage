<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.Compression.Portable</name>
    </assembly>
    <members>
        <member name="P:Syncfusion.Drawing.Font.Unit">
            New Property
        </member>
        <member name="P:Syncfusion.Drawing.Font.FontFamilyName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Drawing.Font.SizeInPoints">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Drawing.Font.Bold">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Drawing.Font.Italic">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Drawing.Font.Strikeout">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Drawing.Font.UnderlineStyle">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Drawing.Font.#ctor(System.String,System.Single,Syncfusion.Drawing.FontStyle,Syncfusion.Drawing.GraphicsUnit)">
            New Constructor
        </member>
        <member name="P:Syncfusion.Drawing.Font.GdiCharSet">
            New Property
        </member>
        <member name="P:Syncfusion.Drawing.Font.GdiVerticalFont">
            New Property
        </member>
        <member name="M:Syncfusion.Drawing.Font.#ctor(System.String,System.Single,Syncfusion.Drawing.FontStyle,Syncfusion.Drawing.GraphicsUnit,System.Byte,System.Boolean)">
            New Constructor
        </member>
        <member name="M:Syncfusion.Drawing.Font.Clone">
            <summary>
             Creates a new object that is a copy of the current instance.
            </summary>
            <returns> A new object that is a copy of this instance.</returns>        
        </member>
        <member name="T:Syncfusion.Drawing.KnownColorTable">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Drawing.ColorConverter.Colors">
            <!-- Failed to insert some or all of included XML --><include file="doc\ColorConverter.uex" path="docs/doc[@for=&quot;ColorConverter.Colors&quot;]/*" />
            <devdoc>
                 Hashtable of color / value pairs (color name is key)
                 for standard colors.
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.ColorConverter.SystemColors">
            <!-- Failed to insert some or all of included XML --><include file="doc\ColorConverter.uex" path="docs/doc[@for=&quot;ColorConverter.SystemColors&quot;]/*" />
            <devdoc>
                 Hashtable of color / value pairs (color name is key)
                 for system colors.
            </devdoc>
        </member>
        <member name="M:Syncfusion.Drawing.ColorConverter.FromKnownColor(Syncfusion.Drawing.KnownColor)">
            <summary>
            
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Drawing.ColorConverter.FromKnownColor(System.String)">
            <summary>
            
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Drawing.ColorConverter.FillConstants(System.Collections.Generic.Dictionary{System.String,System.Object},System.Type)">
            <!-- Failed to insert some or all of included XML --><include file="doc\ColorConverter.uex" path="docs/doc[@for=&quot;ColorConverter.FillConstants&quot;]/*" />
            <devdoc>
                 Fills the given hashtable with field name / value pairs.  It walks all public static
                 properties of enumType that have a property type of Color.
            </devdoc>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Syncfusion.Drawing.ColorTranslator" -->
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.Drawing.ColorTranslator.ToWin32(Syncfusion.Drawing.Color)" -->
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.Drawing.ColorTranslator.ToOle(Syncfusion.Drawing.Color)" -->
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.Drawing.ColorTranslator.FromOle(System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.Drawing.ColorTranslator.FromWin32(System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.Drawing.ColorTranslator.FromHtml(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.Drawing.ColorTranslator.ToHtml(Syncfusion.Drawing.Color)" -->
        <member name="T:Syncfusion.Drawing.SystemColors">
            <!-- Failed to insert some or all of included XML --><include file="doc\SystemColors.uex" path="docs/doc[@for=&quot;SystemColors&quot;]/*" />
            <devdoc>
                Windows system-wide colors.  Whenever possible, try to use
                SystemPens and SystemBrushes rather than SystemColors.
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.SystemColors.ActiveBorder">
            <!-- Failed to insert some or all of included XML --><include file="doc\SystemColors.uex" path="docs/doc[@for=&quot;SystemColors.ActiveBorder&quot;]/*" />
            <devdoc>
                The color of the filled area of an active window border.
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.SystemColors.ActiveCaption">
            <!-- Failed to insert some or all of included XML --><include file="doc\SystemColors.uex" path="docs/doc[@for=&quot;SystemColors.ActiveCaption&quot;]/*" />
            <devdoc>
                The color of the background of an active title bar caption.
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.SystemColors.ActiveCaptionText">
            <!-- Failed to insert some or all of included XML --><include file="doc\SystemColors.uex" path="docs/doc[@for=&quot;SystemColors.ActiveCaptionText&quot;]/*" />
            <devdoc>
                The color of the text of an active title bar caption.
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.SystemColors.AppWorkspace">
            <!-- Failed to insert some or all of included XML --><include file="doc\SystemColors.uex" path="docs/doc[@for=&quot;SystemColors.AppWorkspace&quot;]/*" />
            <devdoc>
                The color of the application workspace.  The application workspace
                is the area in a multiple document view that is not being occupied
                by documents.
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.SystemColors.ButtonFace">
            <!-- Failed to insert some or all of included XML --><include file="doc\SystemColors.uex" path="docs/doc[@for=&quot;SystemColors.ButtonFace&quot;]/*" />
            <devdoc>
                Face color for three-dimensional display elements and for dialog box backgrounds.
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.SystemColors.ButtonHighlight">
            <!-- Failed to insert some or all of included XML --><include file="doc\SystemColors.uex" path="docs/doc[@for=&quot;SystemColors.ButtonHighlight&quot;]/*" />
            <devdoc>
                Highlight color for three-dimensional display elements (for edges facing the light source.)
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.SystemColors.ButtonShadow">
            <!-- Failed to insert some or all of included XML --><include file="doc\SystemColors.uex" path="docs/doc[@for=&quot;SystemColors.ButtonShadow&quot;]/*" />
            <devdoc>
                Shadow color for three-dimensional display elements (for edges facing away from the light source.)
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.SystemColors.Control">
            <!-- Failed to insert some or all of included XML --><include file="doc\SystemColors.uex" path="docs/doc[@for=&quot;SystemColors.Control&quot;]/*" />
            <devdoc>
                The color of the background of push buttons and other 3D objects.
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.SystemColors.ControlDark">
            <!-- Failed to insert some or all of included XML --><include file="doc\SystemColors.uex" path="docs/doc[@for=&quot;SystemColors.ControlDark&quot;]/*" />
            <devdoc>
                The color of shadows on 3D objects.
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.SystemColors.ControlDarkDark">
            <!-- Failed to insert some or all of included XML --><include file="doc\SystemColors.uex" path="docs/doc[@for=&quot;SystemColors.ControlDarkDark&quot;]/*" />
            <devdoc>
                The color of very dark shadows on 3D objects.
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.SystemColors.ControlLight">
            <!-- Failed to insert some or all of included XML --><include file="doc\SystemColors.uex" path="docs/doc[@for=&quot;SystemColors.ControlLight&quot;]/*" />
            <devdoc>
                The color of highlights on 3D objects.
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.SystemColors.ControlLightLight">
            <!-- Failed to insert some or all of included XML --><include file="doc\SystemColors.uex" path="docs/doc[@for=&quot;SystemColors.ControlLightLight&quot;]/*" />
            <devdoc>
                The color of very light highlights on 3D objects.
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.SystemColors.ControlText">
            <!-- Failed to insert some or all of included XML --><include file="doc\SystemColors.uex" path="docs/doc[@for=&quot;SystemColors.ControlText&quot;]/*" />
            <devdoc>
                The color of the text of push buttons and other 3D objects
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.SystemColors.Desktop">
            <!-- Failed to insert some or all of included XML --><include file="doc\SystemColors.uex" path="docs/doc[@for=&quot;SystemColors.Desktop&quot;]/*" />
            <devdoc>
                This color is the user-defined color of the Windows desktop.
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.SystemColors.GradientActiveCaption">
            <!-- Failed to insert some or all of included XML --><include file="doc\SystemColors.uex" path="docs/doc[@for=&quot;SystemColors.GradientActiveCaption&quot;]/*" />
            <devdoc>
                Right side color in the color gradient of an active window's title bar. 
                The ActiveCaption Color specifies the left side color.
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.SystemColors.GradientInactiveCaption">
            <!-- Failed to insert some or all of included XML --><include file="doc\SystemColors.uex" path="docs/doc[@for=&quot;SystemColors.GradientInactiveCaption&quot;]/*" />
            <devdoc>
                Right side color in the color gradient of an inactive window's title bar. 
                The InactiveCaption Color specifies the left side color.
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.SystemColors.GrayText">
            <!-- Failed to insert some or all of included XML --><include file="doc\SystemColors.uex" path="docs/doc[@for=&quot;SystemColors.GrayText&quot;]/*" />
            <devdoc>
                The color of text that is being shown in a disabled, or grayed-out
                state.
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.SystemColors.Highlight">
            <!-- Failed to insert some or all of included XML --><include file="doc\SystemColors.uex" path="docs/doc[@for=&quot;SystemColors.Highlight&quot;]/*" />
            <devdoc>
                The color of the background of highlighted text.  This includes
                selected menu items as well as selected text.
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.SystemColors.HighlightText">
            <!-- Failed to insert some or all of included XML --><include file="doc\SystemColors.uex" path="docs/doc[@for=&quot;SystemColors.HighlightText&quot;]/*" />
            <devdoc>
                The color of the text of highlighted text.  This includes
                selected menu items as well as selected text.
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.SystemColors.HotTrack">
            <!-- Failed to insert some or all of included XML --><include file="doc\SystemColors.uex" path="docs/doc[@for=&quot;SystemColors.HotTrack&quot;]/*" />
            <devdoc>
                The hot track color.
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.SystemColors.InactiveBorder">
            <!-- Failed to insert some or all of included XML --><include file="doc\SystemColors.uex" path="docs/doc[@for=&quot;SystemColors.InactiveBorder&quot;]/*" />
            <devdoc>
                The color of the filled area of an inactive window border.
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.SystemColors.InactiveCaption">
            <!-- Failed to insert some or all of included XML --><include file="doc\SystemColors.uex" path="docs/doc[@for=&quot;SystemColors.InactiveCaption&quot;]/*" />
            <devdoc>
                The color of the background of an inactive title bar caption.
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.SystemColors.InactiveCaptionText">
            <!-- Failed to insert some or all of included XML --><include file="doc\SystemColors.uex" path="docs/doc[@for=&quot;SystemColors.InactiveCaptionText&quot;]/*" />
            <devdoc>
                The color of the text of an inactive title bar caption.
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.SystemColors.Info">
            <!-- Failed to insert some or all of included XML --><include file="doc\SystemColors.uex" path="docs/doc[@for=&quot;SystemColors.Info&quot;]/*" />
            <devdoc>
                The color of the info/tool tip background.
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.SystemColors.InfoText">
            <!-- Failed to insert some or all of included XML --><include file="doc\SystemColors.uex" path="docs/doc[@for=&quot;SystemColors.InfoText&quot;]/*" />
            <devdoc>
                The color of the info/tool tip text.
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.SystemColors.Menu">
            <!-- Failed to insert some or all of included XML --><include file="doc\SystemColors.uex" path="docs/doc[@for=&quot;SystemColors.Menu&quot;]/*" />
            <devdoc>
                The color of the background of a menu.
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.SystemColors.MenuBar">
            <!-- Failed to insert some or all of included XML --><include file="doc\SystemColors.uex" path="docs/doc[@for=&quot;SystemColors.MenuBar&quot;]/*" />
            <devdoc>
                The color of the background of a menu bar.
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.SystemColors.MenuHighlight">
            <!-- Failed to insert some or all of included XML --><include file="doc\SystemColors.uex" path="docs/doc[@for=&quot;SystemColors.MenuHighlight&quot;]/*" />
            <devdoc>
                The color used to highlight menu items when the menu appears as a flat menu. 
                The highlighted menu item is outlined with the Highlight Color.
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.SystemColors.MenuText">
            <!-- Failed to insert some or all of included XML --><include file="doc\SystemColors.uex" path="docs/doc[@for=&quot;SystemColors.MenuText&quot;]/*" />
            <devdoc>
                The color of the text on a menu.
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.SystemColors.ScrollBar">
            <!-- Failed to insert some or all of included XML --><include file="doc\SystemColors.uex" path="docs/doc[@for=&quot;SystemColors.ScrollBar&quot;]/*" />
            <devdoc>
                The color of the scroll bar area that is not being used by the
                thumb button.
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.SystemColors.Window">
            <!-- Failed to insert some or all of included XML --><include file="doc\SystemColors.uex" path="docs/doc[@for=&quot;SystemColors.Window&quot;]/*" />
            <devdoc>
                The color of the client area of a window.
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.SystemColors.WindowFrame">
            <!-- Failed to insert some or all of included XML --><include file="doc\SystemColors.uex" path="docs/doc[@for=&quot;SystemColors.WindowFrame&quot;]/*" />
            <devdoc>
                The color of the thin frame drawn around a window.
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.SystemColors.WindowText">
            <!-- Failed to insert some or all of included XML --><include file="doc\SystemColors.uex" path="docs/doc[@for=&quot;SystemColors.WindowText&quot;]/*" />
            <devdoc>
                The color of the text in the client area of a window.
            </devdoc>
        </member>
        <member name="M:Syncfusion.Drawing.Matrix.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Drawing.Matrix"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Drawing.Matrix.#ctor(Syncfusion.Drawing.RectangleF,Syncfusion.Drawing.PointF[])">
            New Constructor
        </member>
        <member name="M:Syncfusion.Drawing.Matrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Drawing.Matrix"/> class.
            </summary>
            <param name="m11">The M11.</param>
            <param name="m12">The M12.</param>
            <param name="m21">The M21.</param>
            <param name="m22">The M22.</param>
            <param name="dx">The dx.</param>
            <param name="dy">The dy.</param>
        </member>
        <member name="M:Syncfusion.Drawing.Matrix.#ctor(System.Single[])">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Drawing.Matrix"/> class.
            </summary>
            <param name="elements">The elements.</param>
        </member>
        <member name="P:Syncfusion.Drawing.Matrix.Elements">
            <summary>
            Gets the elements.
            </summary>
            <value>The elements.</value>
        </member>
        <member name="P:Syncfusion.Drawing.Matrix.OffsetX">
            <summary>
            Gets the off set X.
            </summary>
            <value>The off set X.</value>
        </member>
        <member name="P:Syncfusion.Drawing.Matrix.OffsetY">
            <summary>
            Gets the off set Y.
            </summary>
            <value>The off set Y.</value>
        </member>
        <member name="M:Syncfusion.Drawing.Matrix.Translate(System.Single,System.Single)">
            <summary>
            Translates the specified offset X.
            </summary>
            <param name="offsetX">The offset X.</param>
            <param name="offsetY">The offset Y.</param>
        </member>
        <member name="M:Syncfusion.Drawing.Matrix.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="F:Syncfusion.Drawing.Color.Empty">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Empty&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Transparent">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Transparent&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.AliceBlue">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.AliceBlue&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.AntiqueWhite">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.AntiqueWhite&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Aqua">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Aqua&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Aquamarine">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Aquamarine&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Azure">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Azure&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Beige">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Beige&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Bisque">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Bisque&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Black">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Black&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.BlanchedAlmond">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.BlanchedAlmond&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Blue">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Blue&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.BlueViolet">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.BlueViolet&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Brown">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Brown&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.BurlyWood">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.BurlyWood&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.CadetBlue">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.CadetBlue&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Chartreuse">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Chartreuse&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Chocolate">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Chocolate&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Coral">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Coral&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.CornflowerBlue">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.CornflowerBlue&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Cornsilk">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Cornsilk&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Crimson">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Crimson&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Cyan">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Cyan&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.DarkBlue">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.DarkBlue&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.DarkCyan">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.DarkCyan&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.DarkGoldenrod">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.DarkGoldenrod&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.DarkGray">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.DarkGray&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.DarkGreen">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.DarkGreen&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.DarkKhaki">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.DarkKhaki&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.DarkMagenta">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.DarkMagenta&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.DarkOliveGreen">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.DarkOliveGreen&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.DarkOrange">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.DarkOrange&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.DarkOrchid">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.DarkOrchid&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.DarkRed">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.DarkRed&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.DarkSalmon">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.DarkSalmon&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.DarkSeaGreen">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.DarkSeaGreen&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.DarkSlateBlue">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.DarkSlateBlue&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.DarkSlateGray">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.DarkSlateGray&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.DarkTurquoise">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.DarkTurquoise&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.DarkViolet">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.DarkViolet&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.DeepPink">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.DeepPink&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.DeepSkyBlue">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.DeepSkyBlue&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.DimGray">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.DimGray&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.DodgerBlue">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.DodgerBlue&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Firebrick">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Firebrick&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.FloralWhite">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.FloralWhite&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.ForestGreen">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.ForestGreen&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Fuchsia">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Fuchsia&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Gainsboro">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Gainsboro&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.GhostWhite">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.GhostWhite&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Gold">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Gold&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Goldenrod">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Goldenrod&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Gray">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Gray&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Green">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Green&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.GreenYellow">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.GreenYellow&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Honeydew">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Honeydew&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.HotPink">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.HotPink&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.IndianRed">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.IndianRed&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Indigo">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Indigo&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Ivory">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Ivory&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Khaki">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Khaki&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Lavender">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Lavender&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.LavenderBlush">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.LavenderBlush&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.LawnGreen">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.LawnGreen&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.LemonChiffon">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.LemonChiffon&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.LightBlue">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.LightBlue&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.LightCoral">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.LightCoral&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.LightCyan">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.LightCyan&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.LightGoldenrodYellow">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.LightGoldenrodYellow&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.LightGreen">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.LightGreen&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.LightGray">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.LightGray&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.LightPink">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.LightPink&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.LightSalmon">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.LightSalmon&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.LightSeaGreen">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.LightSeaGreen&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.LightSkyBlue">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.LightSkyBlue&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.LightSlateGray">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.LightSlateGray&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.LightSteelBlue">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.LightSteelBlue&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.LightYellow">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.LightYellow&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Lime">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Lime&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.LimeGreen">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.LimeGreen&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Linen">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Linen&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Magenta">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Magenta&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Maroon">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Maroon&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.MediumAquamarine">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.MediumAquamarine&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.MediumBlue">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.MediumBlue&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.MediumOrchid">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.MediumOrchid&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.MediumPurple">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.MediumPurple&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.MediumSeaGreen">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.MediumSeaGreen&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.MediumSlateBlue">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.MediumSlateBlue&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.MediumSpringGreen">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.MediumSpringGreen&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.MediumTurquoise">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.MediumTurquoise&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.MediumVioletRed">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.MediumVioletRed&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.MidnightBlue">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.MidnightBlue&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.MintCream">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.MintCream&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.MistyRose">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.MistyRose&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Moccasin">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Moccasin&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.NavajoWhite">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.NavajoWhite&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Navy">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Navy&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.OldLace">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.OldLace&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Olive">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Olive&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.OliveDrab">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.OliveDrab&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Orange">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Orange&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.OrangeRed">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.OrangeRed&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Orchid">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Orchid&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.PaleGoldenrod">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.PaleGoldenrod&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.PaleGreen">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.PaleGreen&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.PaleTurquoise">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.PaleTurquoise&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.PaleVioletRed">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.PaleVioletRed&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.PapayaWhip">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.PapayaWhip&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.PeachPuff">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.PeachPuff&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Peru">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Peru&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Pink">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Pink&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Plum">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Plum&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.PowderBlue">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.PowderBlue&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Purple">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Purple&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Red">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Red&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.RosyBrown">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.RosyBrown&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.RoyalBlue">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.RoyalBlue&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.SaddleBrown">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.SaddleBrown&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Salmon">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Salmon&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.SandyBrown">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.SandyBrown&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.SeaGreen">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.SeaGreen&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.SeaShell">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.SeaShell&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Sienna">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Sienna&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Silver">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Silver&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.SkyBlue">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.SkyBlue&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.SlateBlue">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.SlateBlue&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.SlateGray">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.SlateGray&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Snow">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Snow&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.SpringGreen">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.SpringGreen&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.SteelBlue">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.SteelBlue&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Tan">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Tan&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Teal">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Teal&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Thistle">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Thistle&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Tomato">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Tomato&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Turquoise">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Turquoise&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Violet">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Violet&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Wheat">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Wheat&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.White">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.White&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.WhiteSmoke">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.WhiteSmoke&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Yellow">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Yellow&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.YellowGreen">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.YellowGreen&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="F:Syncfusion.Drawing.Color.ARGBAlphaShift">
            Shift count and bit mask for A, R, G, B components in ARGB mode!
        </member>
        <member name="F:Syncfusion.Drawing.Color.name">
               WARNING!!! WARNING!!! WARNING!!! WARNING!!! 
               WARNING!!! WARNING!!! WARNING!!! WARNING!!!
               We can never change the layout of this class (adding or removing or changing the 
               order of member variables) if you want to be compatible v1.0 version of the runtime.
               This is so that we can push into the runtime a custom marshaller for OLE_COLOR to Color.
        </member>
        <member name="P:Syncfusion.Drawing.Color.R">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.R&quot;]/*" />
            <devdoc>
               Gets the red component value for this <see cref="T:System.Drawing.Color" />.
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.G">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.G&quot;]/*" />
            <devdoc>
               Gets the green component value for this <see cref="T:System.Drawing.Color" />.
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.B">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.B&quot;]/*" />
            <devdoc>
               <para>
                  Gets the blue component value for this <see cref="T:System.Drawing.Color" />.
               </para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.A">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.A&quot;]/*" />
            <devdoc>
               <para>
                  Gets the alpha component value for this <see cref="T:System.Drawing.Color" />.
               </para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.IsKnownColor">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.IsKnownColor&quot;]/*" />
            <devdoc>
               <para>
                  Specifies whether this <see cref="T:System.Drawing.Color" /> is a known (predefined) color.
                  Predefined colors are defined in the <see cref="!:System.Drawing.KnownColor" />
                  enum.
               </para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.IsEmpty">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.IsEmpty&quot;]/*" />
            <devdoc>
               Specifies whether this <see cref="T:System.Drawing.Color" /> is uninitialized.
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.IsNamedColor">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.IsNamedColor&quot;]/*" />
            <devdoc>
               Specifies whether this <see cref="T:System.Drawing.Color" /> has a name or is a <see cref="!:System.Drawing.KnownColor" />.
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.IsSystemColor">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.IsSystemColor&quot;]/*" />
            <devdoc>
                Determines if this color is a system color.
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Name">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Name&quot;]/*" />
            <devdoc>
               <para>
                  Gets the name of this <see cref="T:System.Drawing.Color" /> . This will either return the user
                  defined name of the color, if the color was created from a name, or
                  the name of the known color. For custom colors, the RGB value will
                  be returned.
               </para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.Drawing.Color.Value">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Value&quot;]/*" />
            <devdoc>
                Actual color to be rendered.
            </devdoc>
        </member>
        <member name="M:Syncfusion.Drawing.Color.MakeArgb(System.Byte,System.Byte,System.Byte,System.Byte)">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.MakeArgb&quot;]/*" />
            <devdoc>
                Encodes the four values into ARGB (32 bit) format.
            </devdoc>
        </member>
        <member name="M:Syncfusion.Drawing.Color.FromArgb(System.Int32)">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.FromArgb&quot;]/*" />
            <devdoc>
               <para>
                  Creates a Color from its 32-bit component
                  (alpha, red, green, and blue) values.
               </para>
            </devdoc>
        </member>
        <member name="M:Syncfusion.Drawing.Color.FromArgb(System.Int32,System.Int32,System.Int32,System.Int32)">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.FromArgb1&quot;]/*" />
            <devdoc>
               <para>
                  Creates a Color from its 32-bit component (alpha, red,
                  green, and blue) values.
               </para>
            </devdoc>
        </member>
        <member name="M:Syncfusion.Drawing.Color.FromArgb(System.Int32,Syncfusion.Drawing.Color)">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.FromArgb2&quot;]/*" />
            <devdoc>
               <para>
                  Creates a new <see cref="T:System.Drawing.Color" /> from the specified <see cref="T:System.Drawing.Color" />, but with
                  the new specified alpha value.
               </para>
            </devdoc>
        </member>
        <member name="M:Syncfusion.Drawing.Color.FromArgb(System.Int32,System.Int32,System.Int32)">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.FromArgb3&quot;]/*" />
            <devdoc>
               <para>
                  Creates a <see cref="T:System.Drawing.Color" /> from the specified red, green, and
                  blue values.
               </para>
            </devdoc>
        </member>
        <member name="M:Syncfusion.Drawing.Color.FromKnownColor(Syncfusion.Drawing.KnownColor)">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.FromKnownColor&quot;]/*" />
            <devdoc>
               <para>
                  Creates a <see cref="T:System.Drawing.Color" /> from the specified <see cref="!:System.Drawing.KnownColor" /> .
               </para>
            </devdoc>
        </member>
        <member name="M:Syncfusion.Drawing.Color.FromName(System.String)">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.FromName&quot;]/*" />
            <devdoc>
               <para>
                  Creates a <see cref="T:System.Drawing.Color" /> with the specified name.
               </para>
            </devdoc>
        </member>
        <member name="M:Syncfusion.Drawing.Color.GetBrightness">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.GetBrightness&quot;]/*" />
            <devdoc>
               <para>
                  Returns the Hue-Saturation-Brightness (HSB) brightness
                  for this <see cref="T:System.Drawing.Color" /> .
               </para>
            </devdoc>
        </member>
        <member name="M:Syncfusion.Drawing.Color.GetHue">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.GetHue&quot;]/*" />
            <devdoc>
               <para>
                  Returns the Hue-Saturation-Brightness (HSB) hue
                  value, in degrees, for this <see cref="T:System.Drawing.Color" /> .  
                  If R == G == B, the hue is meaningless, and the return value is 0.
               </para>
            </devdoc>
        </member>
        <member name="M:Syncfusion.Drawing.Color.GetSaturation">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.GetSaturation&quot;]/*" />
            <devdoc>
               <para>
                  The Hue-Saturation-Brightness (HSB) saturation for this
               <see cref="T:System.Drawing.Color" />
               .
            </para>
            </devdoc>
        </member>
        <member name="M:Syncfusion.Drawing.Color.ToArgb">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.ToArgb&quot;]/*" />
            <devdoc>
               <para>
                  Returns the ARGB value of this <see cref="T:System.Drawing.Color" /> .
               </para>
            </devdoc>
        </member>
        <member name="M:Syncfusion.Drawing.Color.ToKnownColor">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.ToKnownColor&quot;]/*" />
            <devdoc>
               <para>
                  Returns the <see cref="!:System.Drawing.KnownColor" /> value for this color, if it is
                  based on a <see cref="!:System.Drawing.KnownColor" /> .
               </para>
            </devdoc>
        </member>
        <member name="M:Syncfusion.Drawing.Color.ToString">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.ToString&quot;]/*" />
            <devdoc>
               Converts this <see cref="T:System.Drawing.Color" /> to a human-readable
               string.
            </devdoc>
        </member>
        <member name="M:Syncfusion.Drawing.Color.op_Equality(Syncfusion.Drawing.Color,Syncfusion.Drawing.Color)">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.operator==&quot;]/*" />
            <devdoc>
               <para>
                  Tests whether two specified <see cref="T:System.Drawing.Color" /> objects
                  are equivalent.
               </para>
            </devdoc>
        </member>
        <member name="M:Syncfusion.Drawing.Color.op_Inequality(Syncfusion.Drawing.Color,Syncfusion.Drawing.Color)">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.operator!=&quot;]/*" />
            <devdoc>
               <para>
                  Tests whether two specified <see cref="T:System.Drawing.Color" /> objects
                  are equivalent.
               </para>
            </devdoc>
        </member>
        <member name="M:Syncfusion.Drawing.Color.Equals(System.Object)">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.Equals&quot;]/*" />
            <devdoc>
               Tests whether the specified object is a
            <see cref="T:System.Drawing.Color" /> 
            and is equivalent to this <see cref="T:System.Drawing.Color" />.
            </devdoc>
        </member>
        <member name="M:Syncfusion.Drawing.Color.GetHashCode">
            <!-- Failed to insert some or all of included XML --><include file="doc\Color.uex" path="docs/doc[@for=&quot;Color.GetHashCode&quot;]/*" />
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Syncfusion.Drawing.PointF.#cctor">
            <summary>
            Initializes the <see cref="T:Syncfusion.Drawing.PointF"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Drawing.PointF.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Drawing.PointF"/> class.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
        </member>
        <member name="P:Syncfusion.Drawing.PointF.X">
            <summary>
            Gets or sets the X.
            </summary>
            <value>The X.</value>
        </member>
        <member name="P:Syncfusion.Drawing.PointF.Y">
            <summary>
            Gets or sets the Y.
            </summary>
            <value>The Y.</value>
        </member>
        <member name="M:Syncfusion.Drawing.PointF.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <exception cref="T:System.NullReferenceException">The <paramref name="obj"/> parameter is null.</exception>
        </member>
        <member name="M:Syncfusion.Drawing.PointF.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Syncfusion.Drawing.PointF.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Syncfusion.Drawing.RectangleF.#cctor">
            <summary>
            Initializes the <see cref="T:Syncfusion.Drawing.RectangleF"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Drawing.RectangleF.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Drawing.RectangleF"/> class.
            </summary>
            <param name="x">The horizontal location to get the starting point</param>
            <param name="y">The vertical location to get the starting point</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Syncfusion.Drawing.RectangleF.#ctor(Syncfusion.Drawing.PointF,Syncfusion.Drawing.SizeF)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Drawing.RectangleF"/> class.
            </summary>
            <param name="location">The location.</param>
            <param name="size">The size.</param>
        </member>
        <member name="P:Syncfusion.Drawing.RectangleF.X">
            <summary>
            Gets or sets the X.
            </summary>
            <value>The X.</value>
        </member>
        <member name="P:Syncfusion.Drawing.RectangleF.Y">
            <summary>
            Gets or sets the Y.
            </summary>
            <value>The Y.</value>
        </member>
        <member name="P:Syncfusion.Drawing.RectangleF.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Syncfusion.Drawing.RectangleF.Height">
            <summary>
            Gets or sets the height.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:Syncfusion.Drawing.RectangleF.Location">
            <summary>
            Gets or sets the location.
            </summary>
            <value>The location.</value>
        </member>
        <member name="P:Syncfusion.Drawing.RectangleF.Size">
            <summary>
            Gets or sets the size.
            </summary>
            <value>The size.</value>
        </member>
        <member name="P:Syncfusion.Drawing.RectangleF.Left">
            <summary>
            Gets the left.
            </summary>
            <value>The left.</value>
        </member>
        <member name="P:Syncfusion.Drawing.RectangleF.Top">
            <summary>
            Gets the top.
            </summary>
            <value>The top.</value>
        </member>
        <member name="P:Syncfusion.Drawing.RectangleF.Right">
            <summary>
            Gets the right.
            </summary>
            <value>The right.</value>
        </member>
        <member name="P:Syncfusion.Drawing.RectangleF.Bottom">
            <summary>
            Gets the bottom.
            </summary>
            <value>The bottom.</value>
        </member>
        <member name="M:Syncfusion.Drawing.RectangleF.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <exception cref="T:System.NullReferenceException">The <paramref name="obj"/> parameter is null.</exception>
        </member>
        <member name="M:Syncfusion.Drawing.RectangleF.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Syncfusion.Drawing.RectangleF.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Syncfusion.Drawing.RectangleF.FromLTRB(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Froms the LTRB.
            </summary>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
            <param name="right">The right.</param>
            <param name="bottom">The bottom.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Drawing.RectangleF.Contains(System.Single,System.Single)">
            <summary>
            Determines whether given X and Y position is exists with in the bounds.
            </summary>
            <param name="x">Position of the X</param>
            <param name="y">Position of the Y</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Drawing.RectangleF.Contains(Syncfusion.Drawing.PointF)">
            <summary>
            Determines whether given PointF is exists with in the bounds.
            </summary>
            <param name="pt">Represents the point</param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Drawing.MatrixOrder">
            <summary>
             Specifies the order for matrix transform operations.
            </summary>
        </member>
        <member name="T:Syncfusion.Drawing.StringFormatFlags">
            <summary>
            Specifies the display and layout information for text strings.
            </summary>
        </member>
        <member name="T:Syncfusion.Drawing.StringTrimming">
            <summary>
             Specifies how to trim characters from a string that does not completely fit
                into a layout shape.
            </summary>
        </member>
        <member name="T:Syncfusion.Drawing.StringAlignment">
            <summary>
            Specifies the alignment of a text string relative to its layout rectangle.
            </summary>
        </member>
        <member name="T:Syncfusion.Drawing.StringFormat">
            <summary>
             Encapsulates text layout information (such as alignment, orientation and
                tab stops) display manipulations (such as ellipsis insertion and national
               digit substitution) and OpenType features. This class cannot be inherited.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.Drawing.StringFormat.Dispose" -->
        <member name="M:Syncfusion.Drawing.StringFormat.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns> A new object that is a copy of this instance.</returns>
        </member>
        <member name="T:Syncfusion.Drawing.InterpolationMode">
            <summary>
            Specifies the algorithm that is used when images are scaled or rotated.
            </summary>
        </member>
        <member name="T:Syncfusion.Drawing.TextRenderingHint">
            <summary>
            Specifies the quality of text rendering.
            </summary>
        </member>
        <member name="T:Syncfusion.Drawing.SmoothingMode">
            <summary>
            Specifies whether smoothing (antialiasing) is applied to lines and curves
                and the edges of filled areas.
            </summary>
        </member>
        <member name="T:Syncfusion.Drawing.UnderlineStyle">
            <summary>
            Specifies style of the underline.
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.UnderlineStyle.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.UnderlineStyle.Single">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.UnderlineStyle.Words">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.UnderlineStyle.Double">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.UnderlineStyle.Dotted">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.UnderlineStyle.DotDot">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.UnderlineStyle.Thick">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.UnderlineStyle.Dash">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.UnderlineStyle.DashLong">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.UnderlineStyle.DotDash">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.UnderlineStyle.DotDotDash">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.UnderlineStyle.Wavy">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.UnderlineStyle.DottedHeavy">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.UnderlineStyle.DashHeavy">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.UnderlineStyle.DashLongHeavy">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.UnderlineStyle.DotDashHeavy">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.UnderlineStyle.DotDotDashHeavy">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.UnderlineStyle.WavyHeavy">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.UnderlineStyle.WavyDouble">
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.Drawing.DashStyle">
            <summary>
            Specifies the style of dashed lines drawn with a Pen object.
            </summary>
        </member>
        <member name="T:Syncfusion.Drawing.PenAlignment">
            <summary>
            Specifies the alignment of a Pen object in relation to the theoretical, zero-width line.
            </summary>
        </member>
        <member name="T:Syncfusion.Drawing.ColorAdjustType">
            <summary>
            Specifies which GDI+ objects use color adjustment information.
            </summary>
        </member>
        <member name="T:Syncfusion.Drawing.ColorMatrixFlag">
            <summary>
            Specifies the types of images and colors that will be affected by the color and grayscale adjustment settings of an ImageAttributes.
            </summary>
        </member>
        <member name="T:Syncfusion.Drawing.LineJoin">
            <summary>
            Specifies how to join consecutive line or curve segments in a figure (subpath) contained in a GraphicsPath object.
            </summary>
        </member>
        <member name="T:Syncfusion.Drawing.LineCap">
            <summary>
            Specifies the available cap styles with which a Pen object can end a line.
            </summary>
        </member>
        <member name="T:Syncfusion.Drawing.DashCap">
            <summary>
            Specifies the type of graphic shape to use on both ends of each dash in a dashed line.
            </summary>
        </member>
        <member name="T:Syncfusion.Drawing.HatchStyle">
            <summary>
            Enumeration of Patterns available in Excel.
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.HatchStyle.None">
            <summary>
            No pattern.
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.HatchStyle.Solid">
            <summary>
            Represents the Solid pattern.
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.HatchStyle.Percent50">
            <summary>
            Represents the Percent50 pattern.
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.HatchStyle.Percent70">
            <summary>
            Represents the Percent70 pattern.
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.HatchStyle.Percent25">
            <summary>
            Represents the Percent25 pattern.
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.HatchStyle.DarkHorizontal">
            <summary>
            Represents the DarkHorizontal pattern.
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.HatchStyle.DarkVertical">
            <summary>
            Represents the DarkVertical pattern.
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.HatchStyle.DarkDownwardDiagonal">
            <summary>
            Represents the DarkDownwardDiagonal pattern.
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.HatchStyle.DarkUpwardDiagonal">
            <summary>
            Represents the DarkUpwardDiagonal pattern.
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.HatchStyle.ForwardDiagonal">
            <summary>
            Represents the ForwardDiagonal pattern.
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.HatchStyle.Percent75">
            <summary>
            Represents the Percent75 pattern.
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.HatchStyle.Horizontal">
            <summary>
            Represents the Horizontal pattern.
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.HatchStyle.Vertical">
            <summary>
            Represents the Vertical pattern.
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.HatchStyle.LightDownwardDiagonal">
            <summary>
            Represents the LightDownwardDiagonal pattern.
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.HatchStyle.LightUpwardDiagonal">
            <summary>
            Represents the LightUpwardDiagonal pattern.
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.HatchStyle.Angle">
            <summary>
            Represents the Angle pattern.
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.HatchStyle.Percent60">
            <summary>
            Represents the Percent60 pattern.
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.HatchStyle.Percent10">
            <summary>
            Represents the Percent10 pattern.
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.HatchStyle.Percent05">
            <summary>
            Represents the Percent05 pattern.
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.HatchStyle.Percent50Gray">
            <summary>
            Represents the Percent50Gray pattern.
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.HatchStyle.Percent75Gray">
            <summary>
            Represents the Percent75Gray pattern.
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.HatchStyle.Percent25Gray">
            <summary>
            Represents the Percent25Gray pattern.
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.HatchStyle.HorizontalStripe">
            <summary>
            Represents the HorizontalStripe pattern.
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.HatchStyle.VerticalStripe">
            <summary>
            Represents the VerticalStripe pattern.
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.HatchStyle.ReverseDiagonalStripe">
            <summary>
            Represents the ReverseDiagonalStripe pattern.
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.HatchStyle.DiagonalStripe">
            <summary>
            Represents the DiagonalStripe pattern.
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.HatchStyle.DiagonalCross">
            <summary>
            Represents the DiagonalCrosshatch pattern.
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.HatchStyle.ThickDiagonalCrosshatch">
            <summary>
            Represents the ThickDiagonalCrosshatch pattern.
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.HatchStyle.LightHorizontal">
            <summary>
            Represents the ThinHorizontalStripe pattern.
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.HatchStyle.LightVertical">
            <summary>
            Represents the ThinVerticalStripe pattern.
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.HatchStyle.ThinReverseDeagonalStripe">
            <summary>
            Represents the ThinReverseDeagonalStripe pattern.
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.HatchStyle.ThinDiagonalStripe">
            <summary>
            Represents the ThinDiagonalStripe pattern.
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.HatchStyle.SmallGrid">
            <summary>
            Represents the ThinHorizontalCrosshatch pattern.
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.HatchStyle.ThinDiagonalCrosshatch">
            <summary>
            Represents the ThinDiagonalCrosshatch pattern.
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.HatchStyle.Percent125Gray">
            <summary>
            Represents the Percent125Gray pattern.
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.HatchStyle.Percent625Gray">
            <summary>
            Represents the Percent625Gray pattern.
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.HatchStyle.Cross">
            <summary>
            Represents the Cross pattern.
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.HatchStyle.Gradient">
            <summary>
            Represent Gradient pattern.
            </summary>
        </member>
        <member name="T:Syncfusion.Drawing.DocIOHelper.IGraphics">
            <summary>
            Encapsulates a GDI+ drawing surface.
            </summary>
            <remarks>Used to map a SkiaSharp graphics API with GDI+ API.</remarks>
        </member>
        <member name="T:Syncfusion.Drawing.DocIOHelper.IBitmap">
            <summary>
            Encapsulates a GDI+ bitmap, which consists of the pixel data for a graphics image and its attributes. 
            A Bitmap is an object used to work with images defined by pixel data.
            </summary>
            <remarks>Used to map a SkiaSharp graphics API with GDI+ API.</remarks>
        </member>
        <member name="T:Syncfusion.Drawing.DocIOHelper.IImage">
            <summary>
            An Base base class that provides functionality for the Bitmap and Metafile descended classes.
            </summary>
            <remarks>Used to map a SkiaSharp graphics API with GDI+ API.</remarks>
        </member>
        <member name="T:Syncfusion.Drawing.DocIOHelper.IFontExtension">
            <summary>
            Extension class of Font.
            </summary>
        </member>
        <member name="T:Syncfusion.Drawing.DocIOHelper.IPen">
            <summary>
            Defines an object used to draw lines and curves. This class cannot be inherited.
            </summary>
            <remarks>Used to map a SkiaSharp graphics API with GDI+ API.</remarks>
        </member>
        <member name="T:Syncfusion.Drawing.DocIOHelper.IBrush">
            <summary>
            Defines objects used to fill the interiors of graphical shapes such as rectangles, ellipses, pies, polygons, and paths.
            </summary>
            <remarks>Used to map a SkiaSharp graphics API with GDI+ API.</remarks>
        </member>
        <member name="T:Syncfusion.Drawing.DocIOHelper.ISolidBrush">
            <summary>
            Defines a brush of a single color. 
            Brushes are used to fill graphics shapes, such as rectangles, ellipses, pies, polygons, and paths. This class cannot be inherited.
            </summary>
            <remarks>Used to map a SkiaSharp graphics API with GDI+ API.</remarks>
        </member>
        <member name="T:Syncfusion.Drawing.DocIOHelper.IHatchBrush">
            <summary>
            Defines a rectangular brush with a hatch style, a foreground color, and a background color. This class cannot be inherited.
            </summary>
            <remarks>Used to map a SkiaSharp graphics API with GDI+ API.</remarks>
        </member>
        <member name="T:Syncfusion.Drawing.DocIOHelper.IColorMatrix">
            <summary>
            Defines a 5 x 5 matrix that contains the coordinates for the RGBAW space. 
            Several methods of the ImageAttributes class adjust image colors by using a color matrix. This class cannot be inherited.
            </summary>
            <remarks>Used to map a SkiaSharp graphics API with GDI+ API.</remarks>
        </member>
        <member name="T:Syncfusion.Drawing.DocIOHelper.IImageAttributes">
            <summary>
            Contains information about how bitmap and metafile colors are manipulated during rendering.
            </summary>
            <remarks>Used to map a SkiaSharp graphics API with GDI+ API.</remarks>
        </member>
        <member name="T:Syncfusion.Drawing.DocIOHelper.IGraphicsPath">
            <summary>
            Represents a series of connected lines and curves.
            </summary>
            <remarks>Used to map a SkiaSharp graphics API with GDI+ API.</remarks>
        </member>
        <member name="T:Syncfusion.Drawing.NamespaceDoc">
            <summary>
            Provides access to the types used to create and manipulate images in PowerPoint Presentations.
            <exclude/>
            </summary>
        </member>
        <member name="T:Syncfusion.Drawing.ImageFormat">
            <summary>
            Specifies the file format of the image.
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.ImageFormat.Unknown">
            <summary>
            Specifies the image format is unknown
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.ImageFormat.Bmp">
            <summary>
            Specifies the image format is BMP
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.ImageFormat.Emf">
            <summary>
            Specifies the image format is EMF
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.ImageFormat.Gif">
            <summary>
            Specifies the image format is GIF
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.ImageFormat.Jpeg">
            <summary>
            Specifies the image format is JPEG
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.ImageFormat.Png">
            <summary>
            Specifies the image format is PNG
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.ImageFormat.Wmf">
            <summary>
            Specifies the image format is WMF
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.ImageFormat.Icon">
            <summary>
            Specifies the image format is icon
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.ImageFormat.Exif">
            <summary>
            Specifies the image format is exif
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.ImageFormat.MemoryBmp">
            <summary>
            Specifies the image format is memory BMP
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.ImageFormat.Tiff">
            <summary>
            Specifies the image format is tiff
            </summary>
        </member>
        <member name="T:Syncfusion.Drawing.ImageType">
            <summary>
            Specifies the type of the image.
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.ImageType.Metafile">
            <summary>
            Specifies the ImageType is metafile
            </summary>
        </member>
        <member name="F:Syncfusion.Drawing.ImageType.Bitmap">
            <summary>
            Specifies the ImageType is bitmap
            </summary>
        </member>
        <member name="T:Syncfusion.Drawing.PixelFormat">
            <summary>
            Specifies the format of the color data for each pixel in the image.
            </summary>    
        </member>
        <member name="T:Syncfusion.Drawing.Image">
            <summary>
            Represents the functionalities for using images in presentation
            </summary>
        </member>
        <member name="P:Syncfusion.Drawing.Image.Format">
             <summary>
             Gets the image format. Read-only.
             </summary>
             <value>The image format.</value>
             <example>
             <code lang="CS">
             //Create an instance of PowerPoint presentation
             IPresentation presentation = Presentation.Create();
             //Add a slide to the presentation
             ISlide slide = presentation.Slides.Add(SlideLayoutType.Blank);
             //Create an instance for image as stream
             Stream imageStream = File.Open("Image.gif", FileMode.Open);
             //Get the image from file path
             Image image = Image.FromStream(imageStream);
             //Get the image format, read only
             ImageFormat imageFormat = image.Format;
             //Add the image to the slide by specifying position and size
             slide.Pictures.AddPicture(new MemoryStream(image.ImageData), 300, 270, 410, 250);
             //Save the presentation
             presentation.Save("Output.pptx");
             //close the presentation
             presentation.Close();
            </code>
            <code lang="VB.NET">
            'Create an instance of PowerPoint presentation
            Dim presentation As IPresentation = Presentation.Create()
            'Add a slide to the presentation
            Dim slide As ISlide = presentation.Slides.Add(SlideLayoutType.Blank)
            'Create an instance for image as stream
            Dim imageStream As Stream = File.Open("Image.gif", FileMode.Open)
            'Get the image from file path
            Dim image As Image = Image.FromStream(imageStream)
            'Get the image format, read only
            Dim imageFormat As ImageFormat = image.Format
            'Add the image to the slide by specifying position and size
            slide.Pictures.AddPicture(New MemoryStream(image.ImageData), 300, 270, 410, 250)
            'Save the presentation
            presentation.Save("Output.pptx")
            'close the presentation
            presentation.Close()
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.Drawing.Image.Height">
             <summary>
             Gets the height of the Image. Read-only.
             </summary>
             <value>The height.</value>
             <example>
             <code lang="CS">
             //Create an instance of PowerPoint presentation
             IPresentation presentation = Presentation.Create();
             //Add a slide to the presentation
             ISlide slide = presentation.Slides.Add(SlideLayoutType.Blank);
             //Create an instance for image as stream
             Stream imageStream = File.Open("Image.gif", FileMode.Open);
             //Get the image from file path
             Image image = Image.FromStream(imageStream);
             //Get the size of image, it is read only
             int Height = image.Height;
             int width = image.Width;
             //Add the image to the slide by specifying position and size
             slide.Pictures.AddPicture(new MemoryStream(image.ImageData), 300, 270, 410, 250);
             //Save the presentation
             presentation.Save("Output.pptx");
             //close the presentation
             presentation.Close();
            </code>
            <code lang="VB.NET">
            'Create an instance of PowerPoint presentation
            Dim presentation As IPresentation = Presentation.Create()
            'Add a slide to the presentation
            Dim slide As ISlide = presentation.Slides.Add(SlideLayoutType.Blank)
            'Create an instance for image as stream
            Dim imageStream As Stream = File.Open("Image.gif", FileMode.Open)
            'Get the image from file path
            Dim image As Image = Image.FromStream(imageStream)
            'Get the size of image, it is read only
            Dim Height As Integer = image.Height
            Dim width As Integer = image.Width
            'Add the image to the slide by specifying position and size
            slide.Pictures.AddPicture(New MemoryStream(image.ImageData), 300, 270, 410, 250)
            'Save the presentation
            presentation.Save("Output.pptx")
            'close the presentation
            presentation.Close()
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.Drawing.Image.ImageData">
             <summary>
             Gets the image data as byte array. Read-only.
             </summary>
             <value>The image data.</value>
             <example>
             <code lang="CS">
             //Create an instance of PowerPoint presentation
             IPresentation presentation = Presentation.Create();
             //Add a slide to the presentation
             ISlide slide = presentation.Slides.Add(SlideLayoutType.Blank);
             //Create an instance for image as stream
             Stream imageStream = File.Open("Image.gif", FileMode.Open);
             //Get the image from file path
             Image image = Image.FromStream(imageStream);
             //Get the image data of image
             byte[] imageData = image.ImageData;
             //Add the image to the slide by specifying position and size
             slide.Pictures.AddPicture(new MemoryStream(imageData), 300, 270, 410, 250);
             //Save the presentation
             presentation.Save("Output.pptx");
             //close the presentation
             presentation.Close();
            </code>
            <code lang="VB.NET">
            'Create an instance of PowerPoint presentation
            Dim presentation As IPresentation = Presentation.Create()
            'Add a slide to the presentation
            Dim slide As ISlide = presentation.Slides.Add(SlideLayoutType.Blank)
            'Create an instance for image as stream
            Dim imageStream As Stream = File.Open("Image.gif", FileMode.Open)
            'Get the image from file path
            Dim image As Image = Image.FromStream(imageStream)
            'Get the image data of image
            Dim imageData As Byte() = image.ImageData
            'Add the image to the slide by specifying position and size
            slide.Pictures.AddPicture(New MemoryStream(imageData), 300, 270, 410, 250)
            'Save the presentation
            presentation.Save("Output.pptx")
            'close the presentation
            presentation.Close()
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.Drawing.Image.RawFormat">
             <summary>
             Gets the file format of the Image. Read-only.
             </summary>
             <value>The image format.</value>
             <example>
             <code lang="CS">
             //Create an instance of PowerPoint presentation
             IPresentation presentation = Presentation.Create();
             //Add a slide to the presentation
             ISlide slide = presentation.Slides.Add(SlideLayoutType.Blank);
             //Create an instance for image as stream
             Stream imageStream = File.Open("Image.gif", FileMode.Open);
             //Get the image from file path
             Image image = Image.FromStream(imageStream);
             //Get the image format, read only
             ImageFormat imageFormat = image.RawFormat;     
             //Add the image to the slide by specifying position and size
             slide.Pictures.AddPicture(new MemoryStream(image.ImageData), 300, 270, 410, 250);
             //Save the presentation
             presentation.Save("Output.pptx");
             //close the presentation
             presentation.Close();
            </code>
            <code lang="VB.NET">
            'Create an instance of PowerPoint presentation
            Dim presentation As IPresentation = Presentation.Create()
            'Add a slide to the presentation
            Dim slide As ISlide = presentation.Slides.Add(SlideLayoutType.Blank)
            'Create an instance for image as stream
            Dim imageStream As Stream = File.Open("Image.gif", FileMode.Open)
            'Get the image from file path
            Dim image As Image = Image.FromStream(imageStream)
            'Get the image format, read only
            Dim imageFormat As ImageFormat = image.RawFormat
            'Add the image to the slide by specifying position and size
            slide.Pictures.AddPicture(New MemoryStream(image.ImageData), 300, 270, 410, 250)
            'Save the presentation
            presentation.Save("Output.pptx")
            'close the presentation
            presentation.Close()
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.Drawing.Image.Size">
             <summary>
             Gets the width and height of the image. Read-only.
             </summary>
             <value>The size.</value>
             <example>
             <code lang="CS">
             //Create an instance of PowerPoint presentation
             IPresentation presentation = Presentation.Create();
             //Add a slide to the presentation
             ISlide slide = presentation.Slides.Add(SlideLayoutType.Blank);
             //Create an instance for image as stream
             Stream imageStream = File.Open("Image.gif", FileMode.Open);
             //Get the image from file path
             Image image = Image.FromStream(imageStream);
             //Get the size of image, it is read only
             System.Drawing.Size size = image.Size;
             //Set the width and height of the image
             size.Width = 300;
             size.Width = 200;
             //Add the image to the slide by specifying position and size
             slide.Pictures.AddPicture(new MemoryStream(image.ImageData), 120,100,size.Width,size.Height);
             //Save the presentation
             presentation.Save("Output.pptx");
             //close the presentation
             presentation.Close();
            </code>
            <code lang="VB.NET">
            'Create an instance of PowerPoint presentation
            Dim presentation As IPresentation = Presentation.Create()
            'Add a slide to the presentation
            Dim slide As ISlide = presentation.Slides.Add(SlideLayoutType.Blank)
            'Create an instance for image as stream
            Dim imageStream As Stream = File.Open("Image.gif", FileMode.Open)
            'Get the image from file path
            Dim image As Image = Image.FromStream(imageStream)
            'Get the size of image, it is read only
            Dim size As System.Drawing.Size = image.Size
            'Set the width and height of the image
            size.Width = 300
            size.Width = 200
            'Add the image to the slide by specifying position and size
            slide.Pictures.AddPicture(New MemoryStream(image.ImageData), 120, 100, size.Width, size.Height)
            'Save the presentation
            presentation.Save("Output.pptx")
            'close the presentation
            presentation.Close()
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.Drawing.Image.Width">
             <summary>
             Gets the width of the Image. Read-only.
             </summary>
             <value>The width.</value>
             <example>
             <code lang="CS">
             //Create an instance of PowerPoint presentation
             IPresentation presentation = Presentation.Create();
             //Add a slide to the presentation
             ISlide slide = presentation.Slides.Add(SlideLayoutType.Blank);
             //Create an instance for image as stream
             Stream imageStream = File.Open("Image.gif", FileMode.Open);
             //Get the image from file path
             Image image = Image.FromStream(imageStream);
             //Get the size of image, it is read only
             int Height = image.Height;
             int width = image.Width;
             // Add the image to the slide by specifying position and size
             slide.Pictures.AddPicture(new MemoryStream(image.ImageData), 300, 270, 410, 250);
             //Save the presentation
             presentation.Save("Output.pptx");
             //close the presentation
             presentation.Close();
            </code>
            <code lang="VB.NET">
            'Create an instance of PowerPoint presentation
            Dim presentation As IPresentation = Presentation.Create()
            'Add a slide to the presentation
            Dim slide As ISlide = presentation.Slides.Add(SlideLayoutType.Blank)
            'Create an instance for image as stream
            Dim imageStream As Stream = File.Open("Image.gif", FileMode.Open)
            'Get the image from file path
            Dim image As Image = Image.FromStream(imageStream)
            'Get the size of image, it is read only
            Dim Height As Integer = image.Height
            Dim width As Integer = image.Width
            ' Add the image to the slide by specifying position and size
            slide.Pictures.AddPicture(New MemoryStream(image.ImageData), 300, 270, 410, 250)
            'Save the presentation
            presentation.Save("Output.pptx")
            'close the presentation
            presentation.Close()
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Drawing.Image.#ctor(System.IO.Stream)">
             <summary>
             Initializes a new instance of the <see cref="T:Syncfusion.Drawing.Image"/> class with the specified image stream.
             </summary>
             <param name="stream">The <see cref="T:System.IO.Stream"/> instance of the image.</param>
             <example>
             <code lang="CS">
             //Create an instance of PowerPoint presentation
             IPresentation presentation = Presentation.Create();
             //Add a slide to the presentation
             ISlide slide = presentation.Slides.Add(SlideLayoutType.Blank);
             //Create an instance for image as stream
             Stream imageStream = File.Open("Image.gif", FileMode.Open);
             //Get the image from file path
             Image image = new Image(imageStream);
             // Add the image to the slide by specifying position and size
             slide.Pictures.AddPicture(new MemoryStream(image.ImageData), 120,100,290,200);
             //Save the presentation
             presentation.Save("Output.pptx");
             //close the presentation
             presentation.Close();
            </code>
            <code lang="VB.NET">
            'Create an instance of PowerPoint presentation
            Dim presentation As IPresentation = Presentation.Create()
            'Add a slide to the presentation
            Dim slide As ISlide = presentation.Slides.Add(SlideLayoutType.Blank)
            'Create an instance for image as stream
            Dim imageStream As Stream = File.Open("Image.gif", FileMode.Open)
            'Get the image from file path
            Dim image As New Image(imageStream)
            ' Add the image to the slide by specifying position and size
            slide.Pictures.AddPicture(New MemoryStream(image.ImageData), 120, 100, 290, 200)
            'Save the presentation
            presentation.Save("Output.pptx")
            'close the presentation
            presentation.Close()
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Drawing.Image.CheckIfBmp">
            <summary>
            Checks if Bmp.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Drawing.Image.CheckIfEmfOrWmf">
            <summary>
            Checks if EMF or WMF.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Drawing.Image.CheckIfGif">
            <summary>
            Checks if GIF.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Drawing.Image.CheckIfIcon">
            <summary>
            Checks if icon.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Drawing.Image.CheckIfJpeg">
            <summary>
            Checks if JPEG.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Drawing.Image.CheckIfPng">
            <summary>
            Checks if PNG.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Drawing.Image.Initialize">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.Drawing.Image.ParseBmpImage">
            <summary>
            Parses the GIF image.
            </summary>
        </member>
        <member name="M:Syncfusion.Drawing.Image.ParseEmfOrWmfImage">
            <summary>
            Parses the EMF or WMF image.
            </summary>
        </member>
        <member name="M:Syncfusion.Drawing.Image.ParseGifImage">
            <summary>
            Parses the GIF image.
            </summary>
        </member>
        <member name="M:Syncfusion.Drawing.Image.ParseIconImage">
            <summary>
            Parses the icon image.
            </summary>
        </member>
        <member name="M:Syncfusion.Drawing.Image.ParseJpegImage">
            <summary>
            Parses the JPEG image.
            </summary>
        </member>
        <member name="M:Syncfusion.Drawing.Image.ParsePngImage">
            <summary>
            Parses the PNG image.
            </summary>
        </member>
        <member name="M:Syncfusion.Drawing.Image.ReadInt16">
            <summary>
            Reads the int16.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Drawing.Image.ReadInt32">
            <summary>
            Reads the int32.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Drawing.Image.ReadShortLe">
            <summary>
            Reads the short LE.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Drawing.Image.ReadString(System.Int32)">
            <summary>
            Reads the string.
            </summary>
            <param name="len">The len.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Drawing.Image.ReadUInt32">
            <summary>
            Reads the Uint32.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Drawing.Image.ReadWord">
            <summary>
            Reads the word.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Drawing.Image.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.Drawing.Image.Close">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Syncfusion.Drawing.Image.FromStream(System.IO.Stream)">
             <summary>
             Creates an <see cref="T:Syncfusion.Drawing.Image"/> from the specified stream.
             </summary>
             <param name="stream">A <see cref="T:System.IO.Stream"/> that contains the data for this <see cref="T:Syncfusion.Drawing.Image"/>.</param>
             <returns>Returns the <see cref="T:Syncfusion.Drawing.Image"/> this method creates.</returns>
             <example>
             <code lang="CS">
             //Create an instance of PowerPoint presentation
             IPresentation presentation = Presentation.Create();
             //Add a slide to the presentation
             ISlide slide = presentation.Slides.Add(SlideLayoutType.Blank);
             //Create an instance for image as stream
             Stream imageStream = File.Open("Image.gif", FileMode.Open);
             //Get the image from file path
             Image image = Image.FromStream(imageStream);
             // Add the image to the slide by specifying position and size
             slide.Pictures.AddPicture(new MemoryStream(image.ImageData), 300, 270, 410, 250);
             //Save the presentation
             presentation.Save("Image.pptx");
             //close the presentation
             presentation.Close();
            </code>
            <code lang="VB.NET">
            'Create an instance of PowerPoint presentation
            Dim presentation As IPresentation = Presentation.Create()
            'Add a slide to the presentation
            Dim slide As ISlide = presentation.Slides.Add(SlideLayoutType.Blank)
            'Create an instance for image as stream
            Dim imageStream As Stream = File.Open("Image.gif", FileMode.Open)
            'Get the image from file path
            Dim image As Image = Image.FromStream(imageStream)
            ' Add the image to the slide by specifying position and size
            slide.Pictures.AddPicture(New MemoryStream(image.ImageData), 300, 270, 410, 250)
            'Save the presentation
            presentation.Save("Image.pptx")
            'close the presentation
            presentation.Close()
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Drawing.Image.Clone">
             <summary>
             Creates an independent copy of the specified image.
             </summary>
             <returns>The <see cref="T:Syncfusion.Drawing.Image"/> this method creates.</returns>
             <example>
             <code lang="CS">
             //Create an instance of PowerPoint presentation
             IPresentation presentation = Presentation.Create();
             //Add a slide to the presentation
             ISlide slide = presentation.Slides.Add(SlideLayoutType.Blank);
             //Create an instance for image as stream
             Stream imageStream = File.Open("Image.gif", FileMode.Open);
             //Get the image from file path
             Image image = Image.FromStream(imageStream);
             //Clone the image
             Image clonedImage = image.Clone();
             // Add the image to the slide by specifying position and size
             slide.Pictures.AddPicture(new MemoryStream(clonedImage.ImageData), 300, 270, 410, 250);
             //Save the presentation
             presentation.Save("Image.pptx");
             //close the presentation
             presentation.Close();        
             </code>
             <code lang="VB.NET">
            'Create an instance of PowerPoint presentation
            Dim presentation As IPresentation = Presentation.Create()
            'Add a slide to the presentation
            Dim slide As ISlide = presentation.Slides.Add(SlideLayoutType.Blank)
            'Create an instance for image as stream
            Dim imageStream As Stream = File.Open("Image.gif", FileMode.Open)
            'Get the image from file path
            Dim image As Image = Image.FromStream(imageStream)
            'Clone the image
            Dim clonedImage As Image = image.Clone()
            ' Add the image to the slide by specifying position and size
            slide.Pictures.AddPicture(New MemoryStream(clonedImage.ImageData), 300, 270, 410, 250)
            'Save the presentation
            presentation.Save("Image.pptx")
            'close the presentation
            presentation.Close()
            </code>
            </example>
        </member>
        <member name="T:Syncfusion.Compression.LatinEncoding">
            <summary>
            This class emulates latin1 encoding based on Unicode encoding.
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.LatinEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
            <summary>
            Calculates the number of bytes produced by encoding a set of characters. 
            </summary>
            <param name="chars">The character array containing the set of characters to encode.</param>
            <param name="index">The index of the first character to encode.</param>
            <param name="count">The number of characters to encode.</param>
            <returns>The number of bytes produced by encoding the specified characters.</returns>
        </member>
        <member name="M:Syncfusion.Compression.LatinEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Encodes a set of characters from the specified character array into the specified byte array.
            </summary>
            <param name="chars">The character array containing the set of characters to encode.</param>
            <param name="charIndex">The index of the first character to encode.</param>
            <param name="charCount">The number of characters to encode.</param>
            <param name="bytes">The byte array to contain the resulting sequence of bytes.</param>
            <param name="byteIndex">The index at which to start writing the resulting sequence of bytes.</param>
            <returns>The actual number of bytes written into bytes.</returns>
        </member>
        <member name="M:Syncfusion.Compression.LatinEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.
            </summary>
            <param name="bytes">The byte array containing the sequence of bytes to decode.</param>
            <param name="index">The index of the first byte to decode.</param>
            <param name="count">The number of bytes to decode.</param>
            <returns>The number of characters produced by decoding the specified sequence of bytes.</returns>
        </member>
        <member name="M:Syncfusion.Compression.LatinEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
            <summary>
            Decodes a sequence of bytes from the specified byte array into the specified character array.
            </summary>
            <param name="bytes">The byte array containing the sequence of bytes to decode.</param>
            <param name="byteIndex">The index of the first byte to decode.</param>
            <param name="byteCount">The number of bytes to decode.</param>
            <param name="chars">The character array to contain the resulting set of characters.</param>
            <param name="charIndex">The index at which to start writing the resulting set of characters.</param>
            <returns>The actual number of characters written into chars</returns>
        </member>
        <member name="M:Syncfusion.Compression.LatinEncoding.GetMaxByteCount(System.Int32)">
            <summary>
            Calculates the maximum number of bytes produced by encoding the specified number of characters.
            </summary>
            <param name="charCount">The number of characters to encode.</param>
            <returns>The maximum number of bytes produced by encoding the specified number of characters.</returns>
        </member>
        <member name="M:Syncfusion.Compression.LatinEncoding.GetMaxCharCount(System.Int32)">
            <summary>
            Calculates the maximum number of characters produced by decoding the specified number of bytes.
            </summary>
            <param name="byteCount">The number of bytes to decode.</param>
            <returns>The maximum number of characters produced by decoding the specified number of bytes.</returns>
        </member>
        <member name="T:Syncfusion.Compression.ChecksumCalculator">
            <summary>
            Checksum calculator, based on Adler32 algorithm.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.ChecksumCalculator.DEF_CHECKSUM_BIT_OFFSET">
            <summary>
            Bits offset, used in adler checksum calculation.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.ChecksumCalculator.DEF_CHECKSUM_BASE">
            <summary>
            Lagrest prime, less than 65535
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.ChecksumCalculator.DEF_CHECKSUM_ITERATIONSCOUNT">
            <summary>
            Count of iteration used in calculated of the adler checksumm.
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.ChecksumCalculator.ChecksumUpdate(System.Int64@,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Updates checksum by calculating checksum of the 
            given buffer and adding it to current value.
            </summary>
            <param name="checksum">Current checksum.</param>
            <param name="buffer">Data byte array.</param>
            <param name="offset">Offset in the buffer.</param>
            <param name="length">Length of data to be used from the stream.</param>
        </member>
        <member name="M:Syncfusion.Compression.ChecksumCalculator.ChecksumGenerate(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Generates checksum by calculating checksum of the 
            given buffer.
            </summary>
            <param name="buffer">Data byte array.</param>
            <param name="offset">Offset in the buffer.</param>
            <param name="length">Length of data to be used from the stream.</param>
        </member>
        <member name="T:Syncfusion.Compression.CompressedStreamReader">
            <summary>
            Reader, that reads stream with compressed data
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamReader.DEF_HEADER_METHOD_MASK">
            <summary>
            Mask for compression method to be decoded from 16-bit header.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamReader.DEF_HEADER_INFO_MASK">
            <summary>
            Mask for compression info to be decoded from 16-bit header.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamReader.DEF_HEADER_FLAGS_FCHECK">
            <summary>
            Mask for check bits to be decoded from 16-bit header.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamReader.DEF_HEADER_FLAGS_FDICT">
            <summary>
            Mask for dictionary presence to be decoded from 16-bit header.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamReader.DEF_HEADER_FLAGS_FLEVEL">
            <summary>
            Mask for compression level to be decoded from 16-bit header.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamReader.DEF_HUFFMAN_DYNTREE_REPEAT_MINIMUMS">
            <summary>
            Minimum count of repetions.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamReader.DEF_HUFFMAN_DYNTREE_REPEAT_BITS">
            <summary>
            Bits, that responds for different repetion modes.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamReader.DEF_MAX_WINDOW_SIZE">
            <summary>
            Maximum size of the data window.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamReader.DEF_HUFFMAN_REPEAT_LENGTH_BASE">
            <summary>
            Length bases.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamReader.DEF_HUFFMAN_REPEAT_LENGTH_EXTENSION">
            <summary>
            Length extended bits count.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamReader.DEF_HUFFMAN_REPEAT_DISTANCE_BASE">
            <summary>
            Distance bases.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamReader.DEF_HUFFMAN_REPEAT_DISTANCE_EXTENSION">
            <summary>
            Distance extanded bits count.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamReader.DEF_HUFFMAN_REPEATE_MAX">
            <summary>
            Maximum length of the repeatable block.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamReader.DEF_HUFFMAN_END_BLOCK">
            <summary>
            End of the block sign.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamReader.DEF_HUFFMAN_LENGTH_MINIMUM_CODE">
            <summary>
            Minimal length code.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamReader.DEF_HUFFMAN_LENGTH_MAXIMUM_CODE">
            <summary>
            Maximal length code.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamReader.DEF_HUFFMAN_DISTANCE_MAXIMUM_CODE">
            <summary>
            Maximal distance code.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamReader.m_InputStream">
            <summary>
            Input stream.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamReader.m_CheckSum">
            <summary>
            Currently calculated checksum, 
            based on Adler32 algorithm.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamReader.m_Buffer">
            <summary>
            Currently read 4 bytes.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamReader.m_BufferedBits">
            <summary>
            Count of bits that are in buffer.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamReader.m_temp_buffer">
            <summary>
            Temporary buffer.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamReader.m_Block_Buffer">
            <summary>
            32k buffer for unpacked data.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamReader.m_bNoWrap">
            <summary>
            No wrap mode.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamReader.m_WindowSize">
            <summary>
            Window size, can not be larger than 32k.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamReader.m_CurrentPosition">
            <summary>
            Current position in output stream.
            Current in-block position can be extracted by applying Int16.MaxValue mask.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamReader.m_DataLength">
            <summary>
            Data length.
            Current in-block position can be extracted by applying Int16.MaxValue mask.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamReader.m_bReadingUncompressed">
            <summary>
            Sign of uncompressed data reading.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamReader.m_UncompressedDataLength">
            <summary>
            Size of the block with uncompressed data.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamReader.m_bCanReadNextBlock">
            <summary>
            Specifies wheather next block can to be read.
            Reading can be denied because the header of the last block have been read.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamReader.m_bCanReadMoreData">
            <summary>
            Specifies wheather user can read more data from stream.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamReader.m_CurrentLengthTree">
            <summary>
            Current lengths huffman tree.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamReader.m_CurrentDistanceTree">
            <summary>
            Current distances huffman tree.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamReader.m_bCheckSumRead">
            <summary>
            Specifies wheather checksum has been read.
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamReader.#ctor(System.IO.Stream)">
            <summary>
            TODO: place correct comment here
            </summary>
            <param name="stream"/>
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamReader.#ctor(System.IO.Stream,System.Boolean)">
            <summary>
            Creates new reader for streams with compressed data.
            </summary>
            <param name="stream"></param>
            <param name="bNoWrap"></param>
        </member>
        <member name="P:Syncfusion.Compression.CompressedStreamReader.AvailableBits">
            <summary>
            GET count of bits available
            </summary>
        </member>
        <member name="P:Syncfusion.Compression.CompressedStreamReader.AvailableBytes">
            <summary>
            Get count of full bytes available.
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamReader.ChecksumReset">
            <summary>
            Resets current checksum to 1.
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamReader.ChecksumUpdate(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Updates checksum by calculating checksum of the 
            given buffer and adding it to current value.
            </summary>
            <param name="buffer">Data byte array.</param>
            <param name="offset">Offset in the buffer.</param>
            <param name="length">Length of data to be used from the stream.</param>
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamReader.SkipToBoundary">
            <summary>
            Discards left-most partially used byte.
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamReader.ReadPackedBytes(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads array of bytes.
            </summary>
            <param name="buffer">Output buffer.</param>
            <param name="offset">Offset in output buffer.</param>
            <param name="length">Length of the data to be read.</param>
            <returns>Count of bytes actually read to the buffer.</returns>
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamReader.FillBuffer">
            <summary>
            Fill`s empty parts of the buffer.
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamReader.PeekBits(System.Int32)">
            <summary>
            Reads specified count of bits without adjusting position.
            </summary>
            <param name="count">Count of bits to be read.</param>
            <returns>Read value.</returns>
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamReader.SkipBits(System.Int32)">
            <summary>
            Skips specified count of bits.
            </summary>
            <param name="count">Count of bits to be skipped.</param>
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamReader.ReadBits(System.Int32)">
            <summary>
            Reads specified count of bits from stream.
            </summary>
            <param name="count">Count of bits to be read.</param>
            <returns>
            TODO: place correct comment here
            </returns>
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamReader.ReadInt16">
            <summary>
            TODO: place correct comment here
            </summary>
            <returns>
            TODO: place correct comment here
            </returns>
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamReader.ReadInt16Inverted">
            <summary>
            TODO: place correct comment here
            </summary>
            <returns>
            TODO: place correct comment here
            </returns>
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamReader.ReadInt32">
            <summary>
            TODO: place correct comment here
            </summary>
            <returns>
            TODO: place correct comment here
            </returns>
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamReader.ReadZLibHeader">
            <summary>
            Reads ZLib header with compression method and flags.
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamReader.BitsToString(System.Int32,System.Int32)">
            <summary>
            TODO: place correct comment here
            </summary>
            <returns>
            TODO: place correct comment here
            </returns>
            <param name="bits"/>
            <param name="count"/>
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamReader.DecodeDynHeader(Syncfusion.Compression.DecompressorHuffmanTree@,Syncfusion.Compression.DecompressorHuffmanTree@)">
            <summary>
            Reades dynamic huffman codes from block header.
            </summary>
            <param name="lengthTree">Literals/Lengths tree.</param>
            <param name="distanceTree">Distances tree.</param>
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamReader.DecodeBlockHeader">
            <summary>
            Reads and decodes block of data.
            </summary>
            <returns>True if buffer was empty and new data was read, otherwise - False.</returns>
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamReader.ReadHuffman">
            <summary>
            Decodes huffman codes.
            </summary>
            <returns>True if some data was read.</returns>
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamReader.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads data to buffer.
            </summary>
            <param name="buffer">Output buffer for data.</param>
            <param name="offset">Offset in output data.</param>
            <param name="length">Length of the data to be read.</param>
            <returns>Count of bytes actually read.</returns>
        </member>
        <member name="T:Syncfusion.Compression.CompressionLevel">
            <summary>
            Compression level.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressionLevel.NoCompression">
            <summary>
            Pack without compression
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressionLevel.BestSpeed">
            <summary>
            Use high speed compression, reduce of data size is low
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressionLevel.BelowNormal">
            <summary>
            Something middle between normal and BestSpeed compressions
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressionLevel.Normal">
            <summary>
            Use normal compression, middle between speed and size
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressionLevel.AboveNormal">
            <summary>
            Pack better but require a little more time
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressionLevel.Best">
            <summary>
            Use best compression, slow enough
            </summary>
        </member>
        <member name="T:Syncfusion.Compression.CompressedStreamWriter">
            <summary>
            Represents the compressed stream writer
            </summary>
        </member>
        <member name="T:Syncfusion.Compression.CompressedStreamWriter.BlockType">
            <summary>
            Type of the block.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.BlockType.Stored">
            <summary>
            Data simply stored as is
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.BlockType.FixedHuffmanCodes">
            <summary>
            An option to use Fixed Huffman tree codes
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.BlockType.DynamicHuffmanCodes">
            <summary>
            An option to use Dynamically built Huffman codes
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.DEF_ZLIB_HEADER_TEMPLATE">
            <summary>
            Start template of the zlib header.
            </summary>                               
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.DEFAULT_MEM_LEVEL">
            <summary>
            Memory usage level.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.DEF_PENDING_BUFFER_SIZE">
            <summary>
            Size of the pending buffer.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.DEF_HUFFMAN_BUFFER_SIZE">
            <summary>
            Size of the buffer for the huffman encoding.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.DEF_HUFFMAN_LITERAL_ALPHABET_LENGTH">
            <summary>
            Length of the literal alphabet(literal+lengths).
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.DEF_HUFFMAN_DISTANCES_ALPHABET_LENGTH">
            <summary>
            Distances alphabet length.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.DEF_HUFFMAN_BITLEN_TREE_LENGTH">
            <summary>
            Length of the code-lengths tree.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.DEF_HUFFMAN_ENDBLOCK_SYMBOL">
            <summary>
            Code of the symbol, than means the end of the block.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.WSIZE">
            <summary>
            Maximum window size.
            </summary>		
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.WMASK">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.HASH_BITS">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.HASH_SIZE">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.HASH_MASK">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.MAX_MATCH">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.MIN_MATCH">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.HASH_SHIFT">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.MIN_LOOKAHEAD">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.MAX_DIST">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.GOOD_LENGTH">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.MAX_LAZY">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.NICE_LENGTH">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.MAX_CHAIN">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.COMPR_FUNC">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.MAX_BLOCK_SIZE">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.m_stream">
            <summary>
            Output stream.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.m_PendingBuffer">
            <summary>
            Pending buffer for writing.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.m_PendingBufferLength">
            <summary>
            Length of the unflushed data.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.m_PendingBufferBitsCache">
            <summary>
            Bits cache for pending buffer.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.m_PendingBufferBitsInCache">
            <summary>
            Count of bits in pending buffer cache.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.m_bNoWrap">
            <summary>
            If true, no zlib header will be written to the stream.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.m_CheckSum">
            <summary>
            Current checksum.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.m_Level">
            <summary>
            Current compression level.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.m_treeLiteral">
            <summary>
            Current tree for literals.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.m_treeDistances">
            <summary>
            Current tree for distances.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.m_treeCodeLengths">
            <summary>
            Current tree for code lengths.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.m_iBufferPosition">
            <summary>
            Current position in literals and distances buffer.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.m_arrLiteralsBuffer">
            <summary>
            Recorded literals buffer.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.m_arrDistancesBuffer">
            <summary>
            Recorded distances buffer.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.m_iExtraBits">
            <summary>
            Count of the extra bits.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.m_arrLiteralCodes">
            <summary>
            Static array of the literal codes.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.m_arrLiteralLengths">
            <summary>
            Static array of the lengths of the literal codes.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.m_arrDistanceCodes">
            <summary>
            Static array of the distance codes.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.m_arrDistanceLengths">
            <summary>
            Static array of the lengths of the distance codes.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.m_bStreamClosed">
            <summary>
            If true, no futher writings can be performed.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.m_CurrentHash">
            <summary>
            Current hash.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.m_HashHead">
            <summary>
            Hash m_HashHead.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.m_HashPrevious">
            <summary>
            Previous hashes.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.m_MatchStart">
            <summary>
            Start of the matched part.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.m_MatchLength">
            <summary>
            Length of the matched part.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.m_MatchPreviousAvailable">
            <summary>
            Previous match available.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.m_BlockStart">
            <summary>
            Start of the data window.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.m_StringStart">
            <summary>
            String start in data window.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.m_LookAhead">
            <summary>
            Lookahead.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.m_DataWindow">
            <summary>
            Data window.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.m_MaximumChainLength">
            <summary>
            Maximum chain length.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.m_MaximumLazySearch">
            <summary>
            Maximum distance of the search with "lazy" algotithm.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.m_NiceLength">
            <summary>
            Nice length of the block.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.m_GoodLength">
            <summary>
            Good length of the block.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.m_CompressionFunction">
            <summary>
            Current compression function.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.m_InputBuffer">
            <summary>
            Current block of the data to be compressed.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.m_TotalBytesIn">
            <summary>
            Total count of bytes, that were compressed.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.m_InputOffset">
            <summary>
            Offset in the input buffer, where input starts.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.m_InputEnd">
            <summary>
            Offset in the input buffer, where input ends.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressedStreamWriter.m_bCloseStream">
            <summary>
            If true, stream will be closed after the last block.
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamWriter.#cctor">
            <summary>
            Initializes statical data for huffman compression.
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamWriter.#ctor(System.IO.Stream,System.Boolean,Syncfusion.Compression.CompressionLevel,System.Boolean)">
            <summary>
            Initializes compressor and writes ZLib header if needed.
            </summary>
            <param name="outputStream">Output stream.</param>
            <param name="bNoWrap">If true, ZLib header and checksum will not be written.</param>
            <param name="level">Compression level.</param>
            <param name="bCloseStream">If true, output stream will be closed after the last block has been written.</param>
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamWriter.#ctor(System.IO.Stream,System.Boolean,System.Boolean)">
            <summary>
            Initializes compressor and writes ZLib header if needed.
            Compression level is set to normal.
            </summary>
            <param name="outputStream">Output stream.</param>
            <param name="bNoWrap">If true, ZLib header and checksum will not be written.</param>
            <param name="bCloseStream">If true, output stream will be closed after the last block has been written.</param>
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamWriter.#ctor(System.IO.Stream,Syncfusion.Compression.CompressionLevel,System.Boolean)">
            <summary>
            Initializes compressor and writes ZLib header.
            </summary>
            <param name="outputStream">Output stream.</param>
            <param name="level">Compression level.</param>
            <param name="bCloseStream">If true, output stream will be closed after the last block has been written.</param>
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamWriter.#ctor(System.IO.Stream,System.Boolean)">
            <summary>
            Initializes compressor and writes ZLib header.
            </summary>
            <param name="outputStream">Output stream.</param>
            <param name="bCloseStream">If true, output stream will be closed after the last block has been written.</param>
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamWriter.Write(System.Byte[],System.Int32,System.Int32,System.Boolean)">
            <summary>
            Compresses data and writes it to the stream.
            </summary>
            <param name="data">Data to compress</param>
            <param name="offset">offset in data array</param>
            <param name="length">length of data to compress</param>
            <param name="bCloseAfterWrite">True - write last compress block in stream, 
            otherwise False</param>
        </member>
        <member name="P:Syncfusion.Compression.CompressedStreamWriter.TotalIn">
            <summary>
            Total data processed.
            </summary>		
        </member>
        <member name="P:Syncfusion.Compression.CompressedStreamWriter.NeedsInput">
            <summary>
            Return true if input is needed
            </summary>		
        </member>
        <member name="P:Syncfusion.Compression.CompressedStreamWriter.HuffmanIsFull">
            <summary>
            Checks, wheather huffman compression buffer is full.
            </summary>
            <returns>True if buffer is full.</returns>
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamWriter.WriteZLIBHeader">
            <summary>
            Writes ZLib header to stream.
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamWriter.FillWindow">
            <summary>
            Fill the window
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamWriter.SlideWindow">
            <summary>
            Slides current window, and data, associated with it.
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamWriter.UpdateHash">
            <summary>
            Updates hash.
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamWriter.InsertString">
            <summary>
            Inserts string to the hash.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamWriter.FindLongestMatch(System.Int32)">
            <summary>
            Searches for the longest match.
            </summary>
            <param name="curMatch"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamWriter.SaveStored(System.Boolean,System.Boolean)">
            <summary>
            Store data without compression.
            </summary>
            <param name="flush"></param>
            <param name="finish"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamWriter.CompressFast(System.Boolean,System.Boolean)">
            <summary>
            Compress with a maximum speed.
            </summary>
            <param name="flush"></param>
            <param name="finish"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamWriter.CompressSlow(System.Boolean,System.Boolean)">
            <summary>
            Compress, using maximum compression level.
            </summary>
            <param name="flush"></param>
            <param name="finish"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamWriter.CompressData(System.Boolean)">
            <summary>
            CompressData drives actual compression of data
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamWriter.HuffmanReset">
            <summary>
            Reset internal state
            </summary>		
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamWriter.HuffmanLengthCode(System.Int32)">
            <summary>
            Calculates length code from length.
            </summary>
            <param name="len">Length.</param>
            <returns>Length code.</returns>
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamWriter.HuffmanDistanceCode(System.Int32)">
            <summary>
            Calculates distance code from distance.
            </summary>
            <param name="distance">Distance.</param>
            <returns>Distance code.</returns>
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamWriter.HuffmanSendAllTrees(System.Int32)">
            <summary>
            Write all trees to pending buffer
            </summary>		
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamWriter.HuffmanCompressBlock">
            <summary>
            Compress current buffer writing data to pending buffer
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamWriter.HuffmanFlushStoredBlock(System.Byte[],System.Int32,System.Int32,System.Boolean)">
            <summary>
            Flush block to output with no compression
            </summary>
            <param name="stored">Data to write</param>
            <param name="storedOffset">Index of first byte to write</param>
            <param name="storedLength">Count of bytes to write</param>
            <param name="lastBlock">True if this is the last block</param>
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamWriter.HuffmanFlushBlock(System.Byte[],System.Int32,System.Int32,System.Boolean)">
            <summary>
            Flush block to output with compression
            </summary>		
            <param name="stored">Data to flush</param>
            <param name="storedOffset">Index of first byte to flush</param>
            <param name="storedLength">Count of bytes to flush</param>
            <param name="lastBlock">True if this is the last block</param>
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamWriter.HuffmanTallyLit(System.Int32)">
            <summary>
            Add literal to buffer.
            </summary>
            <param name="literal"></param>
            <returns>Value indicating internal buffer is full</returns>
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamWriter.HuffmanTallyDist(System.Int32,System.Int32)">
            <summary>
            Add distance code and length to literal and distance trees
            </summary>
            <param name="dist">Distance code</param>
            <param name="len">Length</param>
            <returns>Value indicating if internal buffer is full</returns>
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamWriter.PendingBufferWriteByte(System.Int32)">
            <summary>
            write a byte to buffer
            </summary>
            <param name="b">
            value to write
            </param>
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamWriter.PendingBufferWriteShort(System.Int32)">
            <summary>
            Write a short value to buffer LSB first
            </summary>
            <param name="s">
            value to write
            </param>
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamWriter.PendingBufferWriteInt(System.Int32)">
            <summary>
            write an integer LSB first
            </summary>
            <param name="s">value to write</param>
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamWriter.PendingBufferWriteByteBlock(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Write a block of data to buffer
            </summary>
            <param name="data">data to write</param>
            <param name="offset">offset of first byte to write</param>
            <param name="length">number of bytes to write</param>
        </member>
        <member name="P:Syncfusion.Compression.CompressedStreamWriter.PendingBufferBitCount">
            <summary>
            The number of bits written to the buffer
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamWriter.PendingBufferAlignToByte">
            <summary>
            Align internal buffer on a byte boundary
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamWriter.PendingBufferWriteBits(System.Int32,System.Int32)">
            <summary>
            Write bits to internal buffer
            </summary>
            <param name="b">source of bits</param>
            <param name="count">number of bits to write</param>
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamWriter.PendingBufferWriteShortMSB(System.Int32)">
            <summary>
            Write a short value to internal buffer most significant byte first
            </summary>
            <param name="s">value to write</param>
        </member>
        <member name="P:Syncfusion.Compression.CompressedStreamWriter.PendingBufferIsFlushed">
            <summary>
            Indicates if buffer has been flushed
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamWriter.PendingBufferFlush">
            <summary>
            Flushes the pending buffer into the given output array.  If the
            output array is to small, only a partial flush is done.
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamWriter.PendingBufferFlushBits">
            <summary>
            Flushes fully recorded bytes to buffer array.
            </summary>
            <returns>Count of bytes, added to buffer.</returns>
        </member>
        <member name="M:Syncfusion.Compression.CompressedStreamWriter.PendingBufferToByteArray">
            <summary>
            Convert internal buffer to byte array.
            Buffer is empty on completion
            </summary>
            <returns>
            converted buffer contents contents
            </returns>
        </member>
        <member name="T:Syncfusion.Compression.CompressorHuffmanTree">
            <summary>
            Represents the Huffman Tree.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressorHuffmanTree.m_CodeFrequences">
            <summary>
            Frequences of the codes.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressorHuffmanTree.m_Codes">
            <summary>
            Codes itself.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressorHuffmanTree.m_CodeLengths">
            <summary>
            Bit counts, needed to encode different codes.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressorHuffmanTree.m_LengthCounts">
            <summary>
            Count of codes with some lengths.
            Index - length, value - count.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressorHuffmanTree.m_CodeMinimumCount">
            <summary>
            TODO: place correct comment here
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressorHuffmanTree.m_CodeCount">
            <summary>
            TODO: place correct comment here
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressorHuffmanTree.m_MaximumLength">
            <summary>
            TODO: place correct comment here
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.CompressorHuffmanTree.m_Writer">
            <summary>
            Data compressor.
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.CompressorHuffmanTree.#ctor(Syncfusion.Compression.CompressedStreamWriter,System.Int32,System.Int32,System.Int32)">
            <summary>
            Create a new Huffman tree
            </summary>
            <param name="writer"/>
            <param name="iElementsCount"/>
            <param name="iMinimumCodes"/>
            <param name="iMaximumLength"/>
        </member>
        <member name="M:Syncfusion.Compression.CompressorHuffmanTree.Reset">
            <summary>
            Resets all code data in tree.
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.CompressorHuffmanTree.WriteCodeToStream(System.Int32)">
            <summary>
            Writes code to the compressor output stream.
            </summary>
            <param name="code">Code to be written.</param>
        </member>
        <member name="M:Syncfusion.Compression.CompressorHuffmanTree.CheckEmpty">
            <summary>
            Checks wheather tree is empty.
            If tree is not empty, then exception will be raised.
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.CompressorHuffmanTree.SetStaticCodes(System.Int16[],System.Byte[])">
            <summary>
            Specifies new arrays of codes and their lengths.
            </summary>
            <param name="codes">Array of codes.</param>
            <param name="lengths">Array of code lengths.</param>
        </member>
        <member name="M:Syncfusion.Compression.CompressorHuffmanTree.BuildCodes">
            <summary>
            Calculates codes from their frequences.
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.CompressorHuffmanTree.BuildLength(System.Int32[])">
            <summary>
            Build tree with lengths.
            </summary>
            <param name="childs"></param>
        </member>
        <member name="M:Syncfusion.Compression.CompressorHuffmanTree.BuildTree">
            <summary>
            Builds tree.
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.CompressorHuffmanTree.GetEncodedLength">
            <summary>
            Calculates length of the compressed data.
            </summary>
            <returns>Count of bits, the data will occupy.</returns>
        </member>
        <member name="M:Syncfusion.Compression.CompressorHuffmanTree.CalcBLFreq(Syncfusion.Compression.CompressorHuffmanTree)">
            <summary>
            Calculates code frequences.
            </summary>
            <param name="blTree">Tree.</param>
        </member>
        <member name="M:Syncfusion.Compression.CompressorHuffmanTree.WriteTree(Syncfusion.Compression.CompressorHuffmanTree)">
            <summary>
            Writes tree to output stream.
            </summary>
            <param name="blTree">Tree to be written.</param>
        </member>
        <member name="P:Syncfusion.Compression.CompressorHuffmanTree.TreeLength">
            <summary>
            Length of the tree.
            </summary>
        </member>
        <member name="P:Syncfusion.Compression.CompressorHuffmanTree.CodeLengths">
            <summary>
            Lengths of codes in tree.
            </summary>
        </member>
        <member name="P:Syncfusion.Compression.CompressorHuffmanTree.CodeFrequences">
            <summary>
            Code frequences.
            </summary>
        </member>
        <member name="T:Syncfusion.Compression.DecompressorHuffmanTree">
            <summary>
            Huffman tree, used for decompression.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.DecompressorHuffmanTree.MAX_BITLEN">
            <summary>
            Maximum count of bits.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.DecompressorHuffmanTree.m_Tree">
            <summary>
            Build huffman tree.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.DecompressorHuffmanTree.m_LengthTree">
            <summary>
            Huffman tree for encoding and decoding lengths.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.DecompressorHuffmanTree.m_DistanceTree">
            <summary>
            huffman tree for encoding and decoding distances.
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.DecompressorHuffmanTree.#cctor">
            <summary>
            Generates fixed huffman trees.
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.DecompressorHuffmanTree.#ctor(System.Byte[])">
            <summary>
            Creates huffman tree.
            </summary>
            <param name="codeLengths"></param>
        </member>
        <member name="M:Syncfusion.Compression.DecompressorHuffmanTree.PrepareData(System.Int32[],System.Int32[],System.Byte[],System.Int32@)">
            <summary>
            Prepares data for generating huffman tree.
            </summary>
            <param name="blCount">Array of counts of each code length.</param>
            <param name="nextCode">Numerical values of the smallest code for each code length.</param>
            <param name="lengths">Array of code lengths.</param>
            <param name="treeSize">Calculated tree size.</param>
            <returns>Code.</returns>
        </member>
        <member name="M:Syncfusion.Compression.DecompressorHuffmanTree.TreeFromData(System.Int32[],System.Int32[],System.Byte[],System.Int32,System.Int32)">
            <summary>
            Generates huffman tree.
            </summary>
            <param name="blCount">Array of counts of each code length.</param>
            <param name="nextCode">Numerical values of the smallest code for each code length.</param>
            <param name="code">Precalculated code.</param>
            <param name="lengths">Array of code lengths.</param>
            <param name="treeSize">Calculated size of the tree.</param>
            <returns>Generated tree.</returns>
        </member>
        <member name="M:Syncfusion.Compression.DecompressorHuffmanTree.BuildTree(System.Byte[])">
            <summary>
            Builds huffman tree from array of code lengths.
            </summary>
            <param name="lengths">Array of code lengths.</param>
        </member>
        <member name="M:Syncfusion.Compression.DecompressorHuffmanTree.UnpackSymbol(Syncfusion.Compression.CompressedStreamReader)">
            <summary>
            Reads and decompresses one symbol.
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Compression.DecompressorHuffmanTree.LengthTree">
            <summary>
            GET huffman tree for encoding and decoding lengths.
            </summary>
        </member>
        <member name="P:Syncfusion.Compression.DecompressorHuffmanTree.DistanceTree">
            <summary>
            GET huffman tree for encoding and decoding distances.
            </summary>
        </member>
        <member name="T:Syncfusion.Compression.Utils">
            <summary>
            Utility Class
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Utils.DEF_REVERSE_BITS">
            <summary>
            Bit-indexes for reversing.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Utils.DEF_HUFFMAN_DYNTREE_CODELENGTHS_ORDER">
            <summary>
            Code lengths for the code length alphabet.
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.Utils.BitReverse(System.Int32)">
            <summary>
            Reverses bit.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="F:Syncfusion.Compression.XmlConvertExtension.NumberRegex">
            <summary>
            Number regex used for pattern
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.XmlConvertExtension.WhitespaceChars">
            <summary>
            Read-Only static whitespace characters
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.XmlConvertExtension.ToByte(System.String)">
            <summary>
            Convert the string to byte value
            </summary>
            <param name="s">input string</param>
            <returns>the byte value</returns>
        </member>
        <member name="M:Syncfusion.Compression.XmlConvertExtension.ToInt16(System.String)">
            <summary>
            Convert the string to Int16 value
            </summary>
            <param name="s">input string</param>
            <returns>the Int16 value</returns>
        </member>
        <member name="M:Syncfusion.Compression.XmlConvertExtension.ToInt32(System.String)">
            <summary>
            Convert the string to Int32 value
            </summary>
            <param name="s">input string</param>
            <returns>the Int32 value</returns>
        </member>
        <member name="M:Syncfusion.Compression.XmlConvertExtension.ToInt64(System.String)">
            <summary>
            Convert the string to Int64 value
            </summary>
            <param name="s">input string</param>
            <returns>the Int64 value</returns>
        </member>
        <member name="M:Syncfusion.Compression.XmlConvertExtension.ToUInt16(System.String)">
            <summary>
            Convert the string to UInt16 value
            </summary>
            <param name="s">input string</param>
            <returns>the UInt16 value</returns>
        </member>
        <member name="M:Syncfusion.Compression.XmlConvertExtension.ToUInt32(System.String)">
            <summary>
            Convert the string to UInt32 value
            </summary>
            <param name="s">input string</param>
            <returns>the UInt32 value</returns>
        </member>
        <member name="M:Syncfusion.Compression.XmlConvertExtension.TrimString(System.String)">
            <summary>
            Trim a string using XML whitespace characters
            </summary>
            <param name="value">input string value</param>
            <returns>the trimmed string</returns>
        </member>
        <member name="M:Syncfusion.Compression.XmlConvertExtension.ToSingle(System.String)">
            <summary>
            Convert the string to Single value
            </summary>
            <param name="s">input string</param>
            <returns>the Single value</returns>
        </member>
        <member name="M:Syncfusion.Compression.XmlConvertExtension.ToDouble(System.String)">
            <summary>
            Convert the string to Double value
            </summary>
            <param name="s">input string</param>
            <returns>the Double value</returns>
        </member>
        <member name="M:Syncfusion.Compression.XmlConvertExtension.ToBoolean(System.String)">
            <summary>
            Convert the string to Boolean value
            </summary>
            <param name="s">input string</param>
            <returns>the Boolean value</returns>
        </member>
        <member name="M:Syncfusion.Compression.XmlConvertExtension.GetTruncatedValue(System.String,System.Double)">
            <summary>
            Try to get the number value from misplaced string
            </summary>
            <param name="input">the input string</param>
            <param name="maxValue">the maximum value</param>
            <returns>the extracted value</returns>
        </member>
        <member name="M:Syncfusion.Compression.XmlConvertExtension.ToDateTimeOffset(System.String)">
            <summary>
            Convert the string to DateTimeOffset value
            </summary>
            <param name="value">input string</param>
            <returns>the DateTimeOffset value</returns>
        </member>
        <member name="M:Syncfusion.Compression.XmlConvertExtension.IsWhiteSpace(System.String)">
            <summary>
            Check whether the string having only whitespace
            </summary>
            <param name="value">the input string</param>
            <returns>the boolean value</returns>
        </member>
        <member name="T:Syncfusion.Compression.Zip.BeginsWithNamePreprocessor">
            <summary>
            Implemenation of IFileNamePreprocessor interface that simply removes
            some string from the name start and converts all \ characters into /.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.BeginsWithNamePreprocessor.m_strStartToRemove">
            <summary>
            String to remove from the name start.
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.Zip.BeginsWithNamePreprocessor.#ctor(System.String)">
            <summary>
            Initializes new instance of the name preprocessor.
            </summary>
            <param name="startToRemove">String to remove from the name start.</param>
        </member>
        <member name="M:Syncfusion.Compression.Zip.BeginsWithNamePreprocessor.PreprocessName(System.String)">
            <summary>
            Somehow converts full path into name that will be stored in the zip archive.
            </summary>
            <param name="fullName">Name to process.</param>
            <returns>Converted name.</returns>
        </member>
        <member name="T:Syncfusion.Compression.Zip.Constants">
            <summary>
            Class contains all constants that are required by ZipArchive.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.Constants.HeaderSignature">
            <summary>
            Zip header signature.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.Constants.HeaderSignatureBytes">
            <summary>
            Number of bytes in HeaderSignature constant.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.Constants.BufferSize">
            <summary>
            Buffer size.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.Constants.VersionNeededToExtract">
            <summary>
            Version needed to extract.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.Constants.VersionMadeBy">
            <summary>
            Version made by.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.Constants.ShortSize">
            <summary>
            Size of the short value in bytes.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.Constants.IntSize">
            <summary>
            Size of the int value in bytes.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.Constants.CentralHeaderSignature">
            <summary>
            Central header signature.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.Constants.CentralDirectoryEndSignature">
            <summary>
            End of central directory signature.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.Constants.StartCrc">
            <summary>
            Initial value for CRC-32 evaluation.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.Constants.CentralDirSizeOffset">
            <summary>
            Offset to the size field in the End of central directory record.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.Constants.HeaderSignatureStartByteValue">
            <summary>
            Start byte of the Header signature.
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.Zip.Constants.#ctor">
            <summary>
            Default constructor to prevent users from creating instances of this class.
            </summary>
        </member>
        <member name="T:Syncfusion.Compression.Zip.CompressionMethod">
            <summary>
            The kind of compression used for an entry in an archive
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.CompressionMethod.Stored">
            <summary>
            The file is stored (no compression).
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.CompressionMethod.Shrunk">
            <summary>
            The file is Shrunk.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.CompressionMethod.ReducedFactor1">
            <summary>
            The file is Reduced with compression factor 1.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.CompressionMethod.ReducedFactor2">
            <summary>
            The file is Reduced with compression factor 2.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.CompressionMethod.ReducedFactor3">
            <summary>
            The file is Reduced with compression factor 3.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.CompressionMethod.ReducedFactor4">
            <summary>
            The file is Reduced with compression factor 4.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.CompressionMethod.Imploded">
            <summary>
            The file is Imploded.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.CompressionMethod.Tokenizing">
            <summary>
            Reserved for Tokenizing compression algorithm.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.CompressionMethod.Deflated">
            <summary>
            The file is Deflated.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.CompressionMethod.Defalte64">
            <summary>
            Enhanced Deflating using Deflate64(tm).
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.CompressionMethod.PRWARE">
            <summary>
            PKWARE Data Compression Library Imploding (old IBM TERSE).
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.CompressionMethod.BZIP2">
            <summary>
            File is compressed using BZIP2 algorithm.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.CompressionMethod.LZMA">
            <summary>
            LZMA (EFS).
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.CompressionMethod.IBMTerse">
            <summary>
            File is compressed using IBM TERSE (new).
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.CompressionMethod.LZ77">
            <summary>
            IBM LZ77 z Architecture (PFS).
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.CompressionMethod.PPMd">
            <summary>
            PPMd version I, Rev 1.
            </summary>
        </member>
        <member name="T:Syncfusion.Compression.Zip.GeneralPurposeBitFlags">
            <summary>
            General purpose bit flag.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.GeneralPurposeBitFlags.SizeAfterData">
            <summary>
            If this bit is set, the fields crc-32, compressed size and uncompressed
            size are set to zero in the local header.  The correct values are put
            in the data descriptor immediately following the compressed data.
            (Note: PKZIP version 2.04g for DOS only recognizes this bit for method 8
            compression, newer versions of PKZIP recognize this bit for any compression method.)
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.GeneralPurposeBitFlags.Unicode">
            <summary>
            Language encoding flag (EFS).  If this bit is set, the filename and
            comment fields for this file must be encoded using UTF-8.
            </summary>
        </member>
        <member name="T:Syncfusion.Compression.Zip.IFileNamePreprocessor">
            <summary>
            Preprocesses file name before ZipArchiveItem saving. Used to convert full item path into local one.
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.Zip.IFileNamePreprocessor.PreprocessName(System.String)">
            <summary>
            Somehow converts full path into name that will be stored in the zip archive.
            </summary>
            <param name="fullName">Name to process.</param>
            <returns>Converted name.</returns>
        </member>
        <member name="T:Syncfusion.Compression.Zip.Aes">
            <summary>
            Class used for implementing Advanced Encryption Standard algorithm.
            </summary>
        </member>
        <member name="T:Syncfusion.Compression.Zip.Aes.KeySize">
            <summary>
            Possible key sizes.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.Aes.KeySize.Bits128">
            <summary>
            128-bit.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.Aes.KeySize.Bits192">
            <summary>
            192-bit.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.Aes.KeySize.Bits256">
            <summary>
            256-bit.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.Aes.Nb">
            <summary>
            block size in 32-bit words.  Always 4 for AES.  (128 bits).
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.Aes.Nk">
            <summary>
            key size in 32-bit words.  4, 6, 8.  (128, 192, 256 bits).
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.Aes.Nr">
            <summary>
            number of rounds. 10, 12, 14.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.Aes.key">
            <summary>
            the seed key. size will be 4 * keySize .
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.Aes.Sbox">
            <summary>
            Substitution box
             </summary>    
        </member>
        <member name="F:Syncfusion.Compression.Zip.Aes.iSbox">
            <summary>
            inverse Substitution box 
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.Aes.w">
            <summary>
            key schedule array. 
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.Aes.Rcon">
            <summary>
            Round constants
             </summary>     
        </member>
        <member name="F:Syncfusion.Compression.Zip.Aes.State">
            <summary>
            State matrix
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.Aes.mKeySize">
            <summary>
            AES key size
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.Aes.m_salt">
            <summary>
            Salt value
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.Aes.m_macKey">
            <summary>
            Message Authentication Code Key
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.Aes.m_storedmac">
            <summary>
            Stored Message Authentication Code
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.Aes.m_compMac">
            <summary>
            Computed Message Authentication Code
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.Aes.m_encryptionKey">
            <summary>
            Encryption Key
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.Aes.m_passVer">
            <summary>
            Password verifier
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.Aes.m_password">
            <summary>
            Password
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.Aes.m_keyBytes">
            <summary>
            No of keyBytes
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.Aes.m_saltBytes">
            <summary>
            No of saltBytes
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.Zip.Aes.Initialize">
            <summary>
            Initiates Aes
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.Zip.Aes.SetKey(Syncfusion.Compression.Zip.Aes.KeySize,System.Byte[])">
            <summary> 
            Initializes a new instance of the Aes class.
            </summary>
            <param name="keySize">Key size.</param>
            <param name="keyBytes">Key bytes</param>
        </member>
        <member name="M:Syncfusion.Compression.Zip.Aes.Cipher(System.Byte[],System.Byte[])">
            <summary>
            Encipher 16 bit input
            </summary>
            <param name="input">16 bit Input</param>
            <param name="output">Output value</param>
        </member>
        <member name="M:Syncfusion.Compression.Zip.Aes.InvCipher(System.Byte[],System.Byte[])">
            <summary>
             Decipher 16-bit input
            </summary>
            <param name="input"></param>
            <param name="output"></param>
        </member>
        <member name="M:Syncfusion.Compression.Zip.Aes.SetNbNkNr(Syncfusion.Compression.Zip.Aes.KeySize)">
            <summary>
            SetNbNkNr()
            </summary>
            <param name="keySize">Keysize</param>
        </member>
        <member name="M:Syncfusion.Compression.Zip.Aes.BuildSbox">
            <summary>
            Building S-box
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.Zip.Aes.BuildInvSbox">
            <summary>
            Building Inverse S-box
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.Zip.Aes.BuildRcon">
            <summary>
            Builds Rotation array
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.Zip.Aes.AddRoundKey(System.Int32)">
            <summary>
            Adds rounf Key
            </summary>
            <param name="round">No of Rounds</param>
        </member>
        <member name="M:Syncfusion.Compression.Zip.Aes.SubBytes">
            <summary>
             SubBytes
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.Zip.Aes.InvSubBytes">
            <summary>
            InvSubBytes
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.Zip.Aes.ShiftRows">
            <summary>
            ShiftRows()
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.Zip.Aes.InvShiftRows">
            <summary>
            InvShiftRows()
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.Zip.Aes.MixColumns">
            <summary>
            MixColumns
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.Zip.Aes.InvMixColumns">
            <summary>
            InvMixColumns
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.Zip.Aes.KeyExpansion">
            <summary>
            Key Expansion
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.Zip.Aes.SubWord(System.Byte[])">
            <summary>
            Subword
            </summary>
            <param name="word">Word</param>
            <returns>resulted word</returns>
        </member>
        <member name="M:Syncfusion.Compression.Zip.Aes.RotWord(System.Byte[])">
            <summary>
            Rotates word
            </summary>
            <param name="word">Input</param>
            <returns>Result</returns>
        </member>
        <member name="M:Syncfusion.Compression.Zip.Aes.DumpKey">
            <summary>
            Dump key.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Compression.Zip.Aes.DumpTwoByTwo(System.Byte[0:,0:])">
            <summary>
            Dump two by two.
            </summary>
            <param name="a"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Compression.Zip.Aes.GenerateCryptographicKey">
            <summary>
            Generates a key for Encryption and Decryption
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.Zip.Aes.GenerateMAC(System.Byte[])">
            <summary>
            Generates Message Authentication Code
            </summary>
            <param name="data">data used for MAC</param>
        </member>
        <member name="M:Syncfusion.Compression.Zip.Aes.Compare(System.Byte[],System.Byte[])">
            <summary>
            Compares two bytes arrays
            </summary>
            <param name="input1">First byte array</param>
            <param name="input2">Second byte array </param>
            <returns>true if two arrays are same</returns>
        </member>
        <member name="M:Syncfusion.Compression.Zip.Aes.SetKeyBytes(Syncfusion.Compression.Zip.EncryptionAlgorithm)">
            <summary>
            Set key and salt lengths for AES key
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.Zip.Aes.Decrypt(System.Byte[])">
            <summary>
             Decrypt the cipherData
            </summary>
            <param name="cipherData">Encrypted data</param>
            <returns>Decrypted</returns>
        </member>
        <member name="M:Syncfusion.Compression.Zip.Aes.Encrypt(System.Byte[])">
            <summary>
            Encrypt the plain data
            </summary>
            <param name="plainData">Data needs to be encrypted</param>
            <returns>Encrypted data</returns>
        </member>
        <member name="M:Syncfusion.Compression.Zip.Aes.AesEncryptDecrypt(System.Byte[],System.Byte[])">
            <summary>
            Counter Mode Encryption
            </summary>
            <param name="input">Encrypted data</param>
            <param name="output">Decrypted data to get </param>
            <param name="aesKey">AES encryption Key</param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Compression.Zip.RFC2898Key">
            <summary>
            Implementation Rfc2898Key generation
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.RFC2898Key.m_block">
            <summary>
            Block Number
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.RFC2898Key.m_rfcBuffer">
            <summary>
            Rfc Buffer
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.RFC2898Key.m_endOffset">
            <summary>
            End Offset
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.RFC2898Key.m_iterations">
            <summary>
            No of Iterations
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.RFC2898Key.m_salt">
            <summary>
            Salt Value
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.RFC2898Key.m_startOffset">
            <summary>
            Start Offset
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.RFC2898Key.m_password">
            <summary>
            Password
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.RFC2898Key.m_blockSizeValue">
            <summary>
            BlockSize for SHA1 buffer
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.RFC2898Key.m_inner">
            <summary>
            Inner buffer
             </summary>      
        </member>
        <member name="F:Syncfusion.Compression.Zip.RFC2898Key.m_outer">
            <summary>
            Outer buffer
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.RFC2898Key.m_hashing">
            <summary>
            Indicates whether needs hash
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.RFC2898Key.m_keyVal">
            <summary>
            Key Value
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.RFC2898Key.m_buffer">
            <summary>
            Buffer
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.RFC2898Key.m_count">
            <summary>
            No of hash
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.RFC2898Key.m_stateSHA1">
            <summary>
            State of SHA1
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.RFC2898Key.m_expandedBuffer">
            <summary>
            Expanded array
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.RFC2898Key.m_hmacHashVal">
            <summary>
            HMAC hash value
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.RFC2898Key.m_sha1HashVal">
            <summary>
            SHA1 hash value
            </summary>
        </member>
        <member name="P:Syncfusion.Compression.Zip.RFC2898Key.Hash">
            <summary>
            Hash value
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.Zip.RFC2898Key.#ctor(System.String,System.Byte[],System.Int32)">
            <summary>
            Constructor 
            </summary>
            <param name="password">Password</param>
            <param name="salt">salt value to get key</param>
            <param name="iterations">No of iteration used</param>
        </member>
        <member name="M:Syncfusion.Compression.Zip.RFC2898Key.#ctor(System.Byte[],System.Byte[],System.Int32)">
            <summary>
            Constructor 
            </summary>
            <param name="password">Password</param>
            <param name="salt">salt value to get key</param>
            <param name="iterations">No of iteration used</param>
        </member>
        <member name="M:Syncfusion.Compression.Zip.RFC2898Key.ByteArray(System.Int32)">
            <summary>
            Creates a byte array for input 
            </summary>
            <param name="input">Input</param>
            <returns>Converted byte array for input</returns>
        </member>
        <member name="M:Syncfusion.Compression.Zip.RFC2898Key.DeriveCryptographicKey">
            <summary>
            Derives key
            </summary>
            <returns>key</returns>
        </member>
        <member name="M:Syncfusion.Compression.Zip.RFC2898Key.GetBytes(System.Int32)">
            <summary>
            Generates the byte array based on the given length
            </summary>
            <param name="length">Length of the array</param>
            <returns>Byte array</returns>
        </member>
        <member name="M:Syncfusion.Compression.Zip.RFC2898Key.InitializeRfc2898">
            <summary>
            Initializes the RFC to initial state
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.Zip.RFC2898Key.UpdateInnerAndOuterArrays">
            <summary>
            Updates the m_inner and m_outer arrays
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.Zip.RFC2898Key.InitializeKey(System.Byte[])">
            <summary>
            Initializes the key value
            </summary>
            <param name="keyVal"></param>
        </member>
        <member name="M:Syncfusion.Compression.Zip.RFC2898Key.ComputeHash(System.Byte[])">
            <summary>
            Computes hash code for the given data
            </summary>
            <param name="data">input data</param>
            <returns>return hash in bytes</returns>
        </member>
        <member name="M:Syncfusion.Compression.Zip.RFC2898Key.UpdateBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Computes hash for the specified region from input for the given offset and copies the data to the output from the given offset
            </summary>
            <param name="input">Input array</param>
            <param name="inputOff">input Offset</param>
            <param name="count">Length</param>
            <param name="output">Output array</param>
            <param name="outputOff">output Offset</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Compression.Zip.RFC2898Key.UpdateFinalBlock(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Computes hash for the specified region from input for the given offset.
            </summary>
            <param name="input">Input array</param>
            <param name="inputOff">input Offset</param>
            <param name="count">Length</param>
        </member>
        <member name="M:Syncfusion.Compression.Zip.RFC2898Key.Initialize">
            <summary>
            Clears all value rom arrays
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.Zip.RFC2898Key.InitializeState">
            <summary>
            Initializes State values
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.Zip.RFC2898Key.UpdateHashData(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Computes hash for the given input data from the specified offset and Length
            </summary>
            <param name="inputData">Input</param>
            <param name="startOffSet">start from the input array</param>
            <param name="size">length needs to be hashed</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Compression.Zip.RFC2898Key.UpdateEndHash">
            <summary>
            Computes the final hash code
            </summary>
            <returns>hash data</returns>
        </member>
        <member name="M:Syncfusion.Compression.Zip.RFC2898Key.SHAModify(System.UInt32[],System.UInt32[],System.Byte[])">
            <summary>
            Modifies the buffer using SHA 
            </summary>
            <param name="expandedBuffer">input </param>
            <param name="state">State array</param>
            <param name="block">Blocks</param>
        </member>
        <member name="M:Syncfusion.Compression.Zip.RFC2898Key.SHAExpansion(System.UInt32[])">
            <summary>
            Expand the input array using SHA
            </summary>
            <param name="input">Input array</param>
        </member>
        <member name="M:Syncfusion.Compression.Zip.RFC2898Key.DWORDFromBigEndian(System.UInt32[],System.Int32,System.Byte[])">
            <summary>
            Convert the BigEndian to DWORD
            </summary>
            <param name="input">Dword array</param>
            <param name="digits">No of digits</param>
            <param name="block">Input block</param>
        </member>
        <member name="M:Syncfusion.Compression.Zip.RFC2898Key.DWORDToBigEndian(System.Byte[],System.UInt32[],System.Int32)">
            <summary>
            Convert Dword to BigEndian
            </summary>
            <param name="blockData">BigEndian array</param>
            <param name="output">Output array</param>
            <param name="digits">no of digits</param>
        </member>
        <member name="T:Syncfusion.Compression.Zip.SecurityConstants">
            <summary>
             Contains security Constants
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.SecurityConstants.AesPassVerLength">
            <summary>
            Password Verifier Length of AES Encryption
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.SecurityConstants.AesMacLength">
            <summary>
             Message Authentication Code Length of AES Encryption
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.SecurityConstants.ZipCryptoPassLength">
            <summary>
            Password Length of ZipCrypto Encryption
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.SecurityConstants.ZipCryptoPassVerPos">
            <summary>
            Password verifier value position of ZipCrypto 0 based index
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.SecurityConstants.AesEncryptionHeader">
            <summary>
            AES encryption header constants
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.SecurityConstants.PKZipEncryptionHeader">
            <summary>
            PKZip strong encryption header length
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.SecurityConstants.AES">
            <summary>
            AES compression method
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.SecurityConstants.Rfc2898BlockSize">
            <summary>
            Block size for Rfc2898Key
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.SecurityConstants.PassIterations">
            <summary>
            Password iteration Count for AES
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.SecurityConstants.AesBlockSize">
            <summary>
            Aes Block Size
            </summary>
        </member>
        <member name="T:Syncfusion.Compression.Zip.ZipCrypto">
            <summary>
            ZipCrypto Encryption and Decryption
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.ZipCrypto.m_dataStream">
            <summary>
            Data stream
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.ZipCrypto.m_password">
            <summary>
            Password
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.ZipCrypto.m_iCrc">
            <summary>
            Crc value
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.ZipCrypto.m_Keys">
            <summary>
            Initial keys
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.ZipCrypto.m_crc32">
            <summary>
            ZipCrc32
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipCrypto.#ctor(System.IO.Stream,System.String,System.UInt32)">
            <summary>
            Constructor initializes Data stream and password
            </summary>
            <param name="dataStream">Data</param>
            <param name="password">Password</param>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipCrypto.#ctor(System.String,System.UInt32)">
            <summary>
            Initializes Password and Crc value
            </summary>
            <param name="password">Password</param>
            <param name="crc">Crc value</param>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipCrypto.Initialize">
            <summary>
            Initializes key and crc
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipCrypto.UpdatePassword(System.String)">
            <summary>
            Update password
            </summary>
            <param name="password">Password</param>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipCrypto.UpdateKeys(System.Byte)">
            <summary>
            Update key values
            </summary>
            <param name="byteVal">byte needed for key update</param>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipCrypto.InitiateCipher(System.String)">
            <summary>
            Initializes the keys using Password
            </summary>
            <param name="passphrase">Password of the zip file</param>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipCrypto.Write(System.String)">
            <summary>
             Key Update using password
            </summary>
            <param name="password">Password of the zip file</param>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipCrypto.EncryptMessage(System.Byte[])">
            <summary>
             Data Encryption
            </summary>
            <param name="plainData">Plain data</param>
            <returns>Cipher data</returns>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipCrypto.DecryptMessage(System.Byte[])">
            <summary>
            Data Decryption
            </summary>
            <param name="cipherData">Cipher data</param>
            <returns>Plain data</returns>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipCrypto.Decrypt(System.Byte[])">
            <summary>
            Decrypt the data using ZipCrypto
            </summary>
            <param name="data">Cipher data</param>
            <returns>Plain data</returns>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipCrypto.Encrypt(System.Byte[])">
            <summary>
            Encrypt the data using ZipCrypto
            </summary>
            <param name="data">Plain data</param>
            <returns> Cipher data</returns>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipCrypto.GetCryptoByte">
            <summary>
            Generates the Encryption and Decryption Byte
            </summary>
            <returns>byte value</returns>
        </member>
        <member name="T:Syncfusion.Compression.Zip.EncryptionAlgorithm">
            <summary>
            Encryption types.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.EncryptionAlgorithm.None">
            <summary>
            No Encryption
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.EncryptionAlgorithm.AES128">
            <summary>
            AES-128 bit encryption
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.EncryptionAlgorithm.AES192">
            <summary>
             AES-192 bit encryption
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.EncryptionAlgorithm.AES256">
            <summary>
             AES-256 bit encryption
             </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.EncryptionAlgorithm.ZipCrypto">
            <summary>
            ZipCrypto Encryption
            </summary>
        </member>
        <member name="T:Syncfusion.Compression.Zip.ZipArchive">
            <summary>
            Represents zip archive.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.ZipArchive.m_arrItems">
            <summary>
            Collection of archive items.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.ZipArchive.m_dicItems">
            <summary>
            Dictionary that allows quick search operations by item name.
            Key - item name,
            Value - corresponding ZipArchiveItem.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.ZipArchive.m_fileNamePreprocessor">
            <summary>
            File name preprocessor - object that converts full file/folder
            name into value that will be written into zip archive.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.ZipArchive.m_bCheckCrc">
            <summary>
            Indicates whether we should check Crc value when reading item's data. Check
            is performed when user gets access to decompressed data for the first time.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.ZipArchive.m_defaultLevel">
            <summary>
            Default compression level.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.ZipArchive.m_netCompression">
            <summary>
            Compresses files using custom NetCompressor.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.ZipArchive.m_password">
            <summary>
            Password for the zip File
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.ZipArchive.m_encryptType">
            <summary>
            Type of the Encryption
            </summary>
        </member>
        <member name="P:Syncfusion.Compression.Zip.ZipArchive.Item(System.Int32)">
            <summary>
            Returns single archive item from the collection. Read-only.
            </summary>
            <param name="index">Zero-based index of the item to return.</param>
            <returns>Single archive item from the collection.</returns>
        </member>
        <member name="P:Syncfusion.Compression.Zip.ZipArchive.Item(System.String)">
            <summary>
            Returns item by its name. Null if item wasn't found. Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.Compression.Zip.ZipArchive.Count">
            <summary>
            Returns number of items inside archive. Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.Compression.Zip.ZipArchive.Items">
            <summary>
            Returns the items inside archive. Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.Compression.Zip.ZipArchive.FileNamePreprocessor">
            <summary>
            Gets / sets file name preprocessor - object that converts full file/folder
            name into value that will be written into zip archive.
            </summary>
        </member>
        <member name="P:Syncfusion.Compression.Zip.ZipArchive.DefaultCompressionLevel">
            <summary>
            Gets / sets default compression level - compression level for new items.
            By default is equal to CompressionLevel.Best.
            </summary>
        </member>
        <member name="P:Syncfusion.Compression.Zip.ZipArchive.CheckCrc">
            <summary>
            Indicates whether we should check Crc value when reading item's data. Check
            is performed when user gets access to item's decompressed data for the first time.
            </summary>
        </member>
        <member name="P:Syncfusion.Compression.Zip.ZipArchive.UseNetCompression">
            <summary>
            Uses custom compressed stream reader and writer.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.ZipArchive.CreateCompressor">
            <summary>
            Creates compressor.
            </summary>
        </member>
        <member name="P:Syncfusion.Compression.Zip.ZipArchive.EncryptionAlgorithm">
            <summary>
             Returns the encryption algorithm used. Default value is NONE.
             </summary>
        </member>
        <member name="P:Syncfusion.Compression.Zip.ZipArchive.Password">
            <summary>
            Password for ZipFile
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchive.FindValueFromEnd(System.IO.Stream,System.UInt32,System.Int32)">
            <summary>
            Searches for integer value from the end of the stream.
            </summary>
            <param name="stream">Stream to search value in.</param>
            <param name="value">Value to locate.</param>
            <param name="maxCount">Maximum number of bytes to scan.</param>
            <returns>Offset to the value, or -1 if it wasn't found.</returns>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchive.ReadInt32(System.IO.Stream)">
            <summary>
            Extracts Int32 value from the stream.
            </summary>
            <param name="stream">Stream to read data from.</param>
            <returns>Extracted value.</returns>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchive.ReadInt16(System.IO.Stream)">
            <summary>
            Extracts Int16 value from the stream.
            </summary>
            <param name="stream">Stream to read data from.</param>
            <returns>Extracted value.</returns>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchive.ReadUInt16(System.IO.Stream)">
            <summary>
            Extracts unsigned Int16 value from the stream.
            </summary>
            <param name="stream">Stream to read data from.</param>
            <returns>Extracted value.</returns>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchive.ReadUInt32(System.IO.Stream)">
            <summary>
            Extracts UInt32 value from the stream.
            </summary>
            <param name="stream">Stream to read data from.</param>
            <returns>Extracted value.</returns>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchive.AddItem(System.String,System.IO.Stream,System.Boolean,Syncfusion.Compression.FileAttributes)">
            <summary>
            Adds new item to the archive
            </summary>
            <param name="itemName">Item name to add.</param>
            <param name="data">Items data stream (can be null for empty files or folders).</param>
            <param name="bControlStream">Indicates whether ZipArchive is responsible for stream closing.</param>
            <param name="attributes">File attributes.</param>
            <returns>Item that has been added.</returns>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchive.AddItem(Syncfusion.Compression.Zip.ZipArchiveItem)">
            <summary>
            Adds existing item to the archive.
            </summary>
            <param name="item">Item to add.</param>
            <returns>Added item.</returns>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchive.RemoveItem(System.String)">
            <summary>
            Removes item from the archive.
            </summary>
            <param name="itemName">Item name to remove.</param>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchive.RemoveAt(System.Int32)">
            <summary>
            Removes item at the specified position.
            </summary>
            <param name="index">Item index to remove.</param>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchive.Remove(System.Text.RegularExpressions.Regex)">
            <summary>
            Removes items that matches specified regular expression from the collection.
            </summary>
            <param name="mask">Regular expression used to decide whether to remove item or not.</param>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchive.UpdateItem(System.String,System.IO.Stream,System.Boolean)">
            <summary>
            Updates item inside existing archive.
            </summary>
            <param name="itemName">Item name to update.</param>
            <param name="newDataStream">New data for the item.</param>
            <param name="controlStream">Indicates whether item should control its stream after update.</param>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchive.UpdateItem(System.String,System.IO.Stream,System.Boolean,Syncfusion.Compression.FileAttributes)">
            <summary>
            Updates existing item or creates new one.
            </summary>
            <param name="itemName">Item to update or create.</param>
            <param name="newDataStream">New data for the item.</param>
            <param name="controlStream">Indicates whether item should control its stream after update.</param>
            <param name="attributes">File attributes for the item. This argument is only used if item is created.</param>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchive.UpdateItem(System.String,System.Byte[])">
            <summary>
            Updates item inside existing archive.
            </summary>
            <param name="itemName">Item name to update.</param>
            <param name="newData">New data for the item.</param>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchive.Save(System.IO.Stream,System.Boolean)">
            <summary>
            Saves archive into specified stream.
            </summary>
            <param name="stream">Output stream.</param>
            <param name="closeStream">Indicates whether method should close stream after saving.</param>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchive.Open(System.IO.Stream,System.Boolean)">
            <summary>
            Reads archive data from the stream. In the current implementation
            stream must be seekable and readable to extract data.
            </summary>
            <param name="stream">Stream to read data from.</param>
            <param name="closeStream">Indicates whether method should close stream after reading.</param>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchive.Close">
            <summary>
            Clears all internal data.
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchive.Find(System.String)">
            <summary>
            Searches for the item with specified name.
            </summary>
            <param name="itemName">Item to find.</param>
            <returns>Zero-based item index if found; -1 otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchive.Find(System.Text.RegularExpressions.Regex)">
            <summary>
            Searches for the item with specified name.
            </summary>
            <param name="itemRegex">Regular expression that defines item to find.</param>
            <returns>Zero-based item index if found; -1 otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchive.WriteCentralDirectory(System.IO.Stream)">
            <summary>
            Writes central directory to the stream.
            </summary>
            <param name="stream">Stream to write data into.</param>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchive.WriteCentralDirectoryEnd(System.IO.Stream,System.Int64)">
            <summary>
            Writes End of central directory record into stream.
            </summary>
            <param name="stream">Stream to write data into.</param>
            <param name="directoryStart">Offset to the central directory start.</param>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchive.ReadCentralDirectoryData(System.IO.Stream)">
            <summary>
            Read central directory record from the stream.
            </summary>
            <param name="stream">Stream to read from.</param>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchive.ExtractItems(System.IO.Stream)">
            <summary>
            Extracts items' data from the stream.
            </summary>
            <param name="stream">Stream to read data from.</param>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchive.Clone">
            <summary>
            Creates a copy of the current instance.
            </summary>
            <returns>A copy of the current instance.</returns>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchive.Protect(System.String,Syncfusion.Compression.Zip.EncryptionAlgorithm)">
            <summary>
            Protects the archived file with password using specified algorithm.
            </summary>
            <param name="password">Password to protect.</param>
            <param name="type">Type of encryption algorithm to be used.</param>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchive.UnProtect">
            <summary>
            Removes password from the compressed file.
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchive.Open(System.IO.Stream,System.Boolean,System.String)">
            <summary>
            Reads archive data from the stream. In the current implementation
            stream must be seekable and readable to extract data.
            </summary>
            <param name="stream">Stream to read data from.</param>
            <param name="closeStream">Indicates whether method should close stream after reading.</param>
            <param name="password">Password for the file to open.</param>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchive.Dispose">
            <summary>
            A method to release allocated unmanaged resources.
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchive.Finalize">
            <summary>
            Class finilizer.
            </summary>
        </member>
        <member name="T:Syncfusion.Compression.Zip.ZipArchiveItem">
            <summary>
            Represents single item inside zip archive. It can be either folder or file.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.ZipArchiveItem.m_strItemName">
            <summary>
            Name of the archive item.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.ZipArchiveItem.m_compressionMethod">
            <summary>
            Compression method.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.ZipArchiveItem.m_compressionLevel">
            <summary>
            Compression level.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.ZipArchiveItem.m_uiCrc32">
            <summary>
            Crc.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.ZipArchiveItem.m_streamData">
            <summary>
            Stream with item's data.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.ZipArchiveItem.m_lCompressedSize">
            <summary>
            Compressed data size.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.ZipArchiveItem.m_lOriginalSize">
            <summary>
            Original (not compressed) data size.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.ZipArchiveItem.m_bControlStream">
            <summary>
            Indicates whether this item controls it's data stream.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.ZipArchiveItem.m_bCompressed">
            <summary>
            Indicates whether internal stream contains compressed data.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.ZipArchiveItem.m_lCrcPosition">
            <summary>
            Position of the size block inside local file header.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.ZipArchiveItem.m_iLocalHeaderOffset">
            <summary>
            Offset to the local header.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.ZipArchiveItem.m_options">
            <summary>
            General purpose bit flag.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.ZipArchiveItem.m_iExternalAttributes">
            <summary>
            Item's external attributes.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.ZipArchiveItem.m_bCheckCrc">
            <summary>
            Indicates whether we should check crc value after decompressing item's data.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.ZipArchiveItem.m_bOptimizedDecompress">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.ZipArchiveItem.m_actualCompression">
            <summary>
            Actual compression when Aes Encryption
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.ZipArchiveItem.m_lastModfied">
            <summary>
            Last modified date time
            </summary>
        </member>
        <member name="P:Syncfusion.Compression.Zip.ZipArchiveItem.ItemName">
            <summary>
            Name of the archive item.
            </summary>
        </member>
        <member name="P:Syncfusion.Compression.Zip.ZipArchiveItem.CompressionMethod">
            <summary>
            Compression method.
            </summary>
        </member>
        <member name="P:Syncfusion.Compression.Zip.ZipArchiveItem.CompressionLevel">
            <summary>
            Gets/sets item's compression level.
            </summary>
        </member>
        <member name="P:Syncfusion.Compression.Zip.ZipArchiveItem.Crc32">
            <summary>
            Crc.
            </summary>
        </member>
        <member name="P:Syncfusion.Compression.Zip.ZipArchiveItem.DataStream">
            <summary>
            Stream with item's data.
            </summary>
        </member>
        <member name="P:Syncfusion.Compression.Zip.ZipArchiveItem.CompressedSize">
            <summary>
            Compressed data size.
            </summary>
        </member>
        <member name="P:Syncfusion.Compression.Zip.ZipArchiveItem.OriginalSize">
            <summary>
            Original (not compressed) data size.
            </summary>
        </member>
        <member name="P:Syncfusion.Compression.Zip.ZipArchiveItem.ControlStream">
            <summary>
            Indicates whether this item controls it's data stream.
            </summary>
        </member>
        <member name="P:Syncfusion.Compression.Zip.ZipArchiveItem.Compressed">
            <summary>
            Indicates whether internal stream contains compressed data.
            </summary>
        </member>
        <member name="P:Syncfusion.Compression.Zip.ZipArchiveItem.ExternalAttributes">
            <summary>
            Gets / sets item's external attributes.
            </summary>
        </member>
        <member name="P:Syncfusion.Compression.Zip.ZipArchiveItem.LastModified">
            <summary>
            Last modified date time
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchiveItem.#ctor(Syncfusion.Compression.Zip.ZipArchive)">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchiveItem.#ctor(Syncfusion.Compression.Zip.ZipArchive,System.String,System.IO.Stream,System.Boolean,Syncfusion.Compression.FileAttributes)">
            <summary>
            Creates new instance of the zip item.
            </summary>
            <param name="itemName">Name of the item (can be relative or absolute path).</param>
            <param name="streamData">Stream data.</param>
            <param name="controlStream">
            Indicates whether item controls stream and must close it when item finish its work.
            </param>
            <param name="attributes"></param>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchiveItem.Update(System.IO.Stream,System.Boolean)">
            <summary>
            Updates internal data stream.
            </summary>
            <param name="newDataStream">New stream to set.</param>
            <param name="controlStream">Indicates whether item should conrol new stream.</param>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchiveItem.ResetFlags">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchiveItem.Write(System.IO.Stream)">
            <summary>
            This method saves item inside stream.
            </summary>
            <param name="outputStream">Stream to save item into.</param>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchiveItem.Close">
            <summary>
            Frees all internal resources and closes internal stream if necessary.
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchiveItem.WriteFileHeader(System.IO.Stream)">
            <summary>
            This method writes file header into Central directory record.
            </summary>
            <param name="stream">Stream to write data into.</param>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchiveItem.ConvertDateTime(System.DateTime)">
            <summary>
            Converts current datetime to Windows format.
            </summary>
            <param name="time">Current Date and time.</param>
            <returns>Value in Windows format.</returns>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchiveItem.ConvertToDateTime(System.Int32)">
            <summary>
            Converts Windows format to Date Time.
            </summary>
            <param name="time">Windows format Date and time.</param>
            <returns>Value in Date Time.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.Compression.Zip.ZipArchiveItem.CheckValidDate(System.UInt16,System.UInt16,System.UInt16)" -->
        <member name="M:Syncfusion.Compression.Zip.ZipArchiveItem.ReadCentralDirectoryData(System.IO.Stream)">
            <summary>
            Read data from the stream based on the central directory.
            </summary>
            <param name="stream">Stream to read data from, stream.Position must point at just after correct file header.</param>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchiveItem.ReadData(System.IO.Stream,System.Boolean)">
            <summary>
            Reads zipped data from the stream.
            </summary>
            <param name="stream">Stream to read data from.</param>
            <param name="checkCrc">Indicates whether we should check crc value after data decompression.</param>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchiveItem.ReadCompressedData(System.IO.Stream)">
            <summary>
            Extracts compressed data from the stream.
            </summary>
            <param name="stream">Stream to read data from.</param>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchiveItem.ReadLocalHeader(System.IO.Stream)">
            <summary>
            Extracts local header from the stream.
            </summary>
            <param name="stream">Stream to read data from.</param>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchiveItem.DecompressData">
            <summary>
            Decompressed internal data if necessary.
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchiveItem.WriteHeader(System.IO.Stream)">
            <summary>
            Writes local file header.
            </summary>
            <param name="outputStream">Stream to write into.</param>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchiveItem.WriteZippedContent(System.IO.Stream)">
            <summary>
            Writes zipped content inside stream.
            </summary>
            <param name="outputStream">Stream to write into.</param>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchiveItem.WriteFooter(System.IO.Stream)">
            <summary>
            Writes local file footer into stream.
            </summary>
            <param name="outputStream">Stream to write into.</param>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchiveItem.CheckCrc">
            <summary>
            Checks whether Crc field and stream data corresponds each other.
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchiveItem.CloneStream(System.IO.Stream)">
            <summary>
            Creates copy of the stream.
            </summary>
            <param name="stream">Stream to copy.</param>
            <returns>Created stream.</returns>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchiveItem.CheckForLatin(System.String)">
            <summary>
                Checks for Latin characters in the Unicode string.
            </summary>
            <param name="unicodeText">Input Unicode string.</param>
            <returns>True if the Unicode string contain Latin characters. False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchiveItem.Dispose">
            <summary>
            A method to release allocated unmanaged resources.
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchiveItem.Finalize">
            <summary>
            Finilizer.
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchiveItem.WriteEncryptionHeader(System.IO.Stream)">
            <summary>
             Writes the header to Indicate the zip the file is encrypted.
            </summary>
            <param name="stream">The data to write</param>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchiveItem.Encrypt(System.Byte[])">
            <summary>
            Data Encryption
            </summary>
            <param name="plainData">Data to be Encrypted</param>
            <returns>Encrypted data</returns>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchiveItem.Decrypt(System.Byte[])">
            <summary>
            Data Decryption
            </summary>
            <param name="cipherData">Data needs to be decrypted</param>
            <returns>Decrypted data</returns>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchiveItem.IsIBM437Encoding(System.String)">
            <summary>
            Checks whether the file has unicode characters.
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipArchiveItem.CreateRandom(System.Int32)">
            <summary>
            Create a Random byte Array
            </summary>
            <param name="length">Length of the salt value</param>
            <returns>salt value</returns>
        </member>
        <member name="T:Syncfusion.Compression.Zip.ZipCrc32">
            <summary>
            Crc32 implementation used in zip archive to verify data correctness.
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.ZipCrc32.s_crcTable">
            <summary>
            Special pre-evaluated table used for faster crc evaluation.
            Evaluated when crcNumber was 0xEDB88320. EvaluateTable method
            can be used to evaluated table with different constant.
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipCrc32.ComputeCrc(System.Byte[],System.Int32,System.Int32,System.UInt32)">
            <summary>Computes crc-32 value for the buffer.</summary>
            <param name="buffer">Buffer to compute crc-32 for.</param>
            <param name="offset">Offset to the data start.</param>
            <param name="length">Data length in bytes.</param>
            <param name="startCrc">Initial crc-32 value.</param>
            <returns>Updated crc-32 value.</returns>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipCrc32.ComputeCrc(System.IO.Stream,System.Int32)">
            <summary>Computes crc-32 value for the stream.</summary>
            <param name="stream">Stream to compute crc-32 for.</param>
            <param name="length">Data length in bytes.</param>
            <returns>Crc-32 value.</returns>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipCrc32.EvaluateTable(System.UInt32)">
            <summary>
            Evaluates crc table.
            </summary>
            <param name="crcNumber">"Magic" number.</param>
            <returns>Create table.</returns>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipCrc32.ComputeCrc(System.UInt32,System.UInt32)">
            <summary>
             Computes crc value for given number
            </summary>
            <param name="number">Number to calculate Crc value</param>
            <param name="start">Initial crc-32 value</param>
            <returns>Crc value</returns>
        </member>
        <member name="T:Syncfusion.Compression.Zip.ZipException">
            <summary>
            This class represents exception type that is mostly raised when some
            problems with zip extraction/creation occurs.
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZipException.#ctor(System.String)">
            <summary>
            Initializes new instance of the exception class.
            </summary>
            <param name="message">Exception message.</param>
        </member>
        <member name="T:Syncfusion.Compression.Zip.ZippedContentStream">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.ZippedContentStream.m_deflateStream">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.ZippedContentStream.m_uiCrc32">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Compression.Zip.ZippedContentStream.m_lSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Compression.Zip.ZippedContentStream.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading. Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.Compression.Zip.ZippedContentStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking. Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.Compression.Zip.ZippedContentStream.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing. Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.Compression.Zip.ZippedContentStream.Length">
            <summary>
            Gets the length in bytes of the stream. Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.Compression.Zip.ZippedContentStream.Position">
            <summary>
            Gets or sets the position within the current stream. Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.Compression.Zip.ZippedContentStream.ZippedContent">
            <summary>
            This property returns stream with zipped content. It closes internal deflate
            stream, so you won't be able to write anything in int. Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.Compression.Zip.ZippedContentStream.Crc32">
            <summary>
            Returns computed crc32 value. Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.Compression.Zip.ZippedContentStream.UnzippedSize">
            <summary>
            Returns size of the unzipped data. Read-only.
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZippedContentStream.#ctor">
            <summary>
            Initializes new instance of the stream.
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZippedContentStream.#ctor(Syncfusion.Compression.Zip.ZipArchive.CompressorCreator)">
            <summary>
            Initializes new instance of the stream.
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZippedContentStream.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZippedContentStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position
            within the stream by the number of bytes read.
            </summary>
            <param name="buffer">An array of bytes. When this method returns, the buffer
            contains the specified byte array with the values between offset and
            (offset + count - 1) replaced by the bytes read from the current source.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin
            storing the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
            <returns>The total number of bytes read into the buffer. This can be less
            than the number of bytes requested if that many bytes are not currently
            available, or zero (0) if the end of the stream has been reached.</returns>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZippedContentStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream.
            </summary>
            <param name="offset">A byte offset relative to the origin parameter.</param>
            <param name="origin">A value of type SeekOrigin indicating the reference
            point used to obtain the new position.</param>
            <returns>The new position within the current stream.</returns>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZippedContentStream.SetLength(System.Int64)">
            <summary>
            Sets the length of the current stream.
            </summary>
            <param name="value">The desired length of the current stream in bytes.</param>
        </member>
        <member name="M:Syncfusion.Compression.Zip.ZippedContentStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current
            position within this stream by the number of bytes written.
            </summary>
            <param name="buffer">An array of bytes. This method copies count bytes
            from buffer to the current stream.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin
            copying bytes to the current stream. </param>
            <param name="count">The number of bytes to be written to the current stream.</param>
        </member>
        <member name="T:Syncfusion.Office.TTFFontStyle">
            <summary>
            Specifies style information applied to text.
            </summary>
            <example> 
            <code lang="C#">
            //Create a new PDF document.
            PdfDocument document = new PdfDocument();
            //Add a page to the document.
            PdfPage page = document.Pages.Add();
            //Create PDF graphics for the page.
            PdfGraphics graphics = page.Graphics;
            //Create a new PDF font instance.
            PdfFont font = new PdfStandardFont(PdfFontFamily.Helvetica, 12, PdfFontStyle.Bold);
            //Draw string to PDF page.
            graphics.DrawString("Hello World!", font, PdfBrushes.Black, PointF.Empty);
            //Save the document.
            document.Save("Output.pdf");
            //Close the document.
            document.Close(true);
            </code>
            <code lang="VB">
            'Create a new PDF document.
            Dim document As New PdfDocument()
            'Add a page to the document.
            Dim page As PdfPage = document.Pages.Add()
            'Create PDF graphics for the page.
            Dim graphics As PdfGraphics = page.Graphics
            'Create a new PDF font instance.
            Dim font As PdfFont = New PdfStandardFont(PdfFontFamily.Helvetica, 12, PdfFontStyle.Bold)
            'Draw string to PDF page.
            graphics.DrawString("Hello World!", font, PdfBrushes.Black, PointF.Empty)
            'Save the document.
            document.Save("Output.pdf")
            'Close the document.
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.Office.TTFFontStyle.Regular">
            <summary>
            Normal text.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TTFFontStyle.Bold">
            <summary>
            Bold text.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TTFFontStyle.Italic">
            <summary>
            Italic text.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TTFFontStyle.Underline">
            <summary>
            Represents the underline text.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TTFFontStyle.Strikeout">
            <summary>
            Strikeout text.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.WordWrapType">
            <summary>
            Specifies the types of text wrapping.
            </summary>
            <example> 
            <code lang="C#">
            //Create a new PDF document.
            PdfDocument document = new PdfDocument();
            //Add a page to the document.
            PdfPage page = document.Pages.Add();
            //Create PDF graphics for the page.
            PdfGraphics graphics = page.Graphics;
            //Create a new PDF font instance.
            PdfFont font = new PdfStandardFont(PdfFontFamily.Helvetica, 12);
            //Create a new PDF string format instance.
            PdfStringFormat format = new PdfStringFormat();
            //Set the text alignment.
            format.Alignment = PdfTextAlignment.Center;
            //Set the line alignment.
            format.LineAlignment = PdfVerticalAlignment.Middle;
            //Set character spacing.
            format.CharacterSpacing = 1;
            //Set clip path.
            format.ClipPath = true;
            //Set line limit.
            format.LineLimit = true;
            //Set line spacing.
            format.LineSpacing = 1.1f;
            //Set measure trailing spaces.
            format.MeasureTrailingSpaces = true;
            //Set no clip
            format.NoClip = true;
            //Set paragraph indent.
            format.ParagraphIndent = 2.1f;
            //Set right to left.
            format.RightToLeft = false;
            //Set word spacing.
            format.WordSpacing = 1.5f;
            //Set word wrap type.
            format.WordWrap = PdfWordWrapType.Word;
            //Set sub/super script type.
            format.SubSuperScript = PdfSubSuperScript.SubScript;
            //Draw string to PDF page.
            graphics.DrawString("Hello World!", font, PdfBrushes.Black, new RectangleF(0, 0, 200, 100), format);
            //Save the document.
            document.Save("Output.pdf");
            //Close the document.
            document.Close(true);
            </code>
            <code lang="VB">
            'Create a new PDF document.
            Dim document As New PdfDocument()
            'Add a page to the document.
            Dim page As PdfPage = document.Pages.Add()
            'Create PDF graphics for the page.
            Dim graphics As PdfGraphics = page.Graphics
            'Create a new PDF font instance.
            Dim font As PdfFont = New PdfStandardFont(PdfFontFamily.Helvetica, 12)
            'Create a new PDF string format instance.
            Dim format As PdfStringFormat = New PdfStringFormat()
            'Set the text alignment.
            format.Alignment = PdfTextAlignment.Center
            'Set the line alignment.
            format.LineAlignment = PdfVerticalAlignment.Middle;
            'Set character spacing.
            format.CharacterSpacing = 1
            'Set clip path.
            format.ClipPath = True
            'Set line limit.
            format.LineLimit = True
            'Set line spacing.
            format.LineSpacing = 1.1F
            'Set measure trailing spaces.
            format.MeasureTrailingSpaces = True
            'Set no clip
            format.NoClip = True
            'Set paragraph indent.
            format.ParagraphIndent = 2.1F
            'Set right to left.
            format.RightToLeft = False
            'Set word spacing.
            format.WordSpacing = 1.5F
            'Set word wrap type.
            format.WordWrap = PdfWordWrapType.Word
            'Set sub/super script type.
            format.SubSuperScript = PdfSubSuperScript.SubScript
            'Draw string to PDF page.
            graphics.DrawString("Hello World!", font, PdfBrushes.Black, New RectangleF(0, 0, 200, 100), format);
            'Save the document.
            document.Save("Output.pdf")
            'Close the document.
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.Office.WordWrapType.None">
            <summary>
            Text wrapping between lines when formatting within a rectangle is disabled.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.WordWrapType.Word">
            <summary>
            Text is wrapped by words. If there is a word that is longer than bounds' width, this word is wrapped by characters.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.WordWrapType.WordOnly">
            <summary>
            Text is wrapped by words. If there is a word that is longer than bounds' width, it won't be wrapped at all
            and the process will be finished.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.WordWrapType.Character">
            <summary>
            Text is wrapped by characters. In this case the word at the end of the text line can be split.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.SubSuperScript">
            <summary>
            Specifies type of the SubSuperScript.
            </summary>
            <example> 
            <code lang="C#">
            //Create a new PDF document.
            PdfDocument document = new PdfDocument();
            //Add a page to the document.
            PdfPage page = document.Pages.Add();
            //Create PDF graphics for the page.
            PdfGraphics graphics = page.Graphics;
            //Create a new PDF font instance.
            PdfFont font = new PdfStandardFont(PdfFontFamily.Helvetica, 12);
            //Create a new PDF string format instance.
            PdfStringFormat format = new PdfStringFormat();
            //Set the text alignment.
            format.Alignment = PdfTextAlignment.Center;
            //Set the line alignment.
            format.LineAlignment = PdfVerticalAlignment.Middle;
            //Set character spacing.
            format.CharacterSpacing = 1;
            //Set clip path.
            format.ClipPath = true;
            //Set line limit.
            format.LineLimit = true;
            //Set line spacing.
            format.LineSpacing = 1.1f;
            //Set measure trailing spaces.
            format.MeasureTrailingSpaces = true;
            //Set no clip
            format.NoClip = true;
            //Set paragraph indent.
            format.ParagraphIndent = 2.1f;
            //Set right to left.
            format.RightToLeft = false;
            //Set word spacing.
            format.WordSpacing = 1.5f;
            //Set word wrap type.
            format.WordWrap = PdfWordWrapType.Word;
            //Set sub/super script type.
            format.SubSuperScript = PdfSubSuperScript.SubScript;
            //Draw string to PDF page.
            graphics.DrawString("Hello World!", font, PdfBrushes.Black, new RectangleF(0, 0, 200, 100), format);
            //Save the document.
            document.Save("Output.pdf");
            //Close the document.
            document.Close(true);
            </code>
            <code lang="VB">
            'Create a new PDF document.
            Dim document As New PdfDocument()
            'Add a page to the document.
            Dim page As PdfPage = document.Pages.Add()
            'Create PDF graphics for the page.
            Dim graphics As PdfGraphics = page.Graphics
            'Create a new PDF font instance.
            Dim font As PdfFont = New PdfStandardFont(PdfFontFamily.Helvetica, 12)
            'Create a new PDF string format instance.
            Dim format As PdfStringFormat = New PdfStringFormat()
            'Set the text alignment.
            format.Alignment = PdfTextAlignment.Center
            'Set the line alignment.
            format.LineAlignment = PdfVerticalAlignment.Middle;
            'Set character spacing.
            format.CharacterSpacing = 1
            'Set clip path.
            format.ClipPath = True
            'Set line limit.
            format.LineLimit = True
            'Set line spacing.
            format.LineSpacing = 1.1F
            'Set measure trailing spaces.
            format.MeasureTrailingSpaces = True
            'Set no clip
            format.NoClip = True
            'Set paragraph indent.
            format.ParagraphIndent = 2.1F
            'Set right to left.
            format.RightToLeft = False
            'Set word spacing.
            format.WordSpacing = 1.5F
            'Set word wrap type.
            format.WordWrap = PdfWordWrapType.Word
            'Set sub/super script type.
            format.SubSuperScript = PdfSubSuperScript.SubScript
            'Draw string to PDF page.
            graphics.DrawString("Hello World!", font, PdfBrushes.Black, New RectangleF(0, 0, 200, 100), format);
            'Save the document.
            document.Save("Output.pdf")
            'Close the document.
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.Office.SubSuperScript.None">
            <summary>
            Specifies no subscript or superscript.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.SubSuperScript.SuperScript">
            <summary>
            Specifies superscript format.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.SubSuperScript.SubScript">
            <summary>
            Specifies subscript format.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.TtfPlatformID">
            <summary>
            Ttf platform ID.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfPlatformID.AppleUnicode">
            <summary>
            Apple platform.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfPlatformID.Macintosh">
            <summary>
            Macintosh platform.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfPlatformID.Iso">
            <summary>
            Iso platform.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfPlatformID.Microsoft">
            <summary>
            Microsoft platform.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.TtfNameID">
            <summary>
            Ttf Name ID.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfNameID.Copyright">
            <summary>
            The Copyright
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfNameID.FontFamily">
            <summary>
            The Font Family
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfNameID.FontSubFamily">
            <summary>
            The Font Sub Family
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfNameID.FontIdentifier">
            <summary>
            The Font Identifier
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfNameID.FontName">
            <summary>
            The Font Name
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfNameID.Version">
            <summary>
            The Version
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfNameID.PostScriptName">
            <summary>
            The PostScriptName
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfNameID.Trademark">
            <summary>
            The Trademark
            </summary>
        </member>
        <member name="T:Syncfusion.Office.TtfCmapEncoding">
            <summary>
            Enumerator that implements CMAP encodings.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfCmapEncoding.Unknown">
            <summary>
            Unknown encoding.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfCmapEncoding.Symbol">
            <summary>
            When building a symbol font for Windows.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfCmapEncoding.Unicode">
            <summary>
            When building a Unicode font for Windows.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfCmapEncoding.Macintosh">
            <summary>
            For font that will be used on a Macintosh.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfCmapEncoding.UnicodeUCS4">
            <summary>
            When building a Unicode font for Windows (plane characters).
            </summary>
        </member>
        <member name="T:Syncfusion.Office.TtfMicrosoftEncodingID">
            <summary>
            Microsoft encoding ID
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfMicrosoftEncodingID.Undefined">
            <summary>
            Undefined encoding.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfMicrosoftEncodingID.Unicode">
            <summary>
            Unicode encoding.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfMicrosoftEncodingID.UnicodeUCS4">
            <summary>
            Unicode UCS 4 encoding.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.TtfMacintoshEncodingID">
            <summary>
            Macintosh encoding ID.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfMacintoshEncodingID.Roman">
            <summary>
            Roman encoding.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfMacintoshEncodingID.Japanese">
            <summary>
            Japanese encoding.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfMacintoshEncodingID.Chinese">
            <summary>
            Chinese encoding.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.TtfCmapFormat">
            <summary>
            Enumerator that implements CMAP formats.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfCmapFormat.Apple">
            <summary>
            This is the Apple standard character to glyph index mapping table.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfCmapFormat.Microsoft">
            <summary>
            This is the Microsoft standard character to glyph index mapping table.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfCmapFormat.Trimmed">
            <summary>
            Format 6: Trimmed table mapping.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfCmapFormat.MicrosoftExt">
            <summary>
            This is the Microsoft standard character-to-glyph-index mapping table for fonts supporting Unicode supplementary-plane characters (U+10000 to U+10FFFF).
            </summary>
        </member>
        <member name="T:Syncfusion.Office.TtfCompositeGlyphFlags">
            <summary>
            ttf composite glyph flags.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfCompositeGlyphFlags.ARG_1_AND_2_ARE_WORDS">
            <summary>
            The ARG_1_AND_2_ARE_WORDS.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfCompositeGlyphFlags.ARGS_ARE_XY_VALUES">
            <summary>
            The ARGS_ARE_XY_VALUES.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfCompositeGlyphFlags.ROUND_XY_TO_GRID">
            <summary>
            The ROUND_XY_TO_GRID.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfCompositeGlyphFlags.WE_HAVE_A_SCALE">
            <summary>
            The WE_HAVE_A_SCALE.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfCompositeGlyphFlags.RESERVED">
            <summary>
            The RESERVED.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfCompositeGlyphFlags.MORE_COMPONENTS">
            <summary>
            The MORE_COMPONENTS.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfCompositeGlyphFlags.WE_HAVE_AN_X_AND_Y_SCALE">
            <summary>
            The WE_HAVE_AN_X_AND_Y_SCALE.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfCompositeGlyphFlags.WE_HAVE_A_TWO_BY_TWO">
            <summary>
            The WE_HAVE_A_TWO_BY_TWO.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfCompositeGlyphFlags.WE_HAVE_INSTRUCTIONS">
            <summary>
            The WE_HAVE_INSTRUCTIONS.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfCompositeGlyphFlags.USE_MY_METRICS">
            <summary>
            The USE_MY_METRICS.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.FontDescriptorFlags">
            <summary>
            Enumerator that implements font descriptor flags.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.FontDescriptorFlags.FixedPitch">
            <summary>
            All glyphs have the same width (as opposed to proportional or variable-pitch
            fonts, which have different widths).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.FontDescriptorFlags.Serif">
            <summary>
            Glyphs have serifs, which are short strokes drawn at an angle on the top and
            bottom of glyph stems (as opposed to sans serif fonts, which do not).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.FontDescriptorFlags.Symbolic">
            <summary>
            Font contains glyphs outside the Adobe standard Latin character set. The
            flag and the nonsymbolic flag cannot both be set or both be clear.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.FontDescriptorFlags.Script">
            <summary>
            Glyphs resemble cursive handwriting.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.FontDescriptorFlags.Nonsymbolic">
            <summary>
            Font uses the Adobe standard Latin character set or a subset of it.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.FontDescriptorFlags.Italic">
            <summary>
            Glyphs have dominant vertical strokes that are slanted.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.FontDescriptorFlags.ForceBold">
            <summary>
            Bold font.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.CompositeFontType">
            <summary>
            Specifies the composite font types.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.CompositeFontType.Type0">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Office.CompositeFontType.TrueType">
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.Office.VerticalAlignment">
            <summary>
            Specifies the type of Vertical alignment.
            </summary>
            <example> 
            <code lang="C#">
            //Create a new PDF document.
            PdfDocument document = new PdfDocument();
            //Add a page to the document.
            PdfPage page = document.Pages.Add();
            //Create PDF graphics for the page.
            PdfGraphics graphics = page.Graphics;
            //Create a new PDF font instance.
            PdfFont font = new PdfStandardFont(PdfFontFamily.Helvetica, 12);
            //Create a new PDF string format instance.
            PdfStringFormat format = new PdfStringFormat();
            //Set the text alignment.
            format.Alignment = PdfTextAlignment.Center;
            //Set the line alignment.
            format.LineAlignment = PdfVerticalAlignment.Middle;
            //Draw string to PDF page.
            graphics.DrawString("Hello World!", font, PdfBrushes.Black, new RectangleF(0, 0, 200, 100), format);
            //Save the document.
            document.Save("Output.pdf");
            //Close the document.
            document.Close(true);
            </code>
            <code lang="VB">
            'Create a new PDF document.
            Dim document As New PdfDocument()
            'Add a page to the document.
            Dim page As PdfPage = document.Pages.Add()
            'Create PDF graphics for the page.
            Dim graphics As PdfGraphics = page.Graphics
            'Create a new PDF font instance.
            Dim font As PdfFont = New PdfStandardFont(PdfFontFamily.Helvetica, 12)
            'Create a new PDF string format instance.
            Dim format As PdfStringFormat = New PdfStringFormat()
            'Set the text alignment.
            format.Alignment = PdfTextAlignment.Center
            'Set the line alignment.
            format.LineAlignment = PdfVerticalAlignment.Middle;
            'Draw string to PDF page.
            graphics.DrawString("Hello World!", font, PdfBrushes.Black, New RectangleF(0, 0, 200, 100), format);
            'Save the document.
            document.Save("Output.pdf")
            'Close the document.
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.Office.VerticalAlignment.Top">
            <summary>
            Specifies the element is aligned to Top.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.VerticalAlignment.Middle">
            <summary>
            Specifies the element is aligned to Middle.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.VerticalAlignment.Bottom">
            <summary>
            Specifies the element is aligned to Bottom.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.TextAlignment">
            <summary>
            Specifies the type of horizontal text alignment.
            </summary>
            <example> 
            <code lang="C#">
            //Create a new PDF document.
            PdfDocument document = new PdfDocument();
            //Add a page to the document.
            PdfPage page = document.Pages.Add();
            //Create PDF graphics for the page.
            PdfGraphics graphics = page.Graphics;
            //Create a new PDF font instance.
            PdfFont font = new PdfStandardFont(PdfFontFamily.Helvetica, 12);
            //Create a new PDF string format instance.
            PdfStringFormat format = new PdfStringFormat();
            //Set the text alignment.
            format.Alignment = PdfTextAlignment.Center;
            //Draw string to PDF page.
            graphics.DrawString("Hello World!", font, PdfBrushes.Black, new RectangleF(0, 0, 200, 100), format);
            //Save the document.
            document.Save("Output.pdf");
            //Close the document.
            document.Close(true);
            </code>
            <code lang="VB">
            'Create a new PDF document.
            Dim document As New PdfDocument()
            'Add a page to the document.
            Dim page As PdfPage = document.Pages.Add()
            'Create PDF graphics for the page.
            Dim graphics As PdfGraphics = page.Graphics
            'Create a new PDF font instance.
            Dim font As PdfFont = New PdfStandardFont(PdfFontFamily.Helvetica, 12)
            'Create a new PDF string format instance.
            Dim format As PdfStringFormat = New PdfStringFormat()
            'Set the text alignment.
            format.Alignment = PdfTextAlignment.Center
            'Draw string to PDF page.
            graphics.DrawString("Hello World!", font, PdfBrushes.Black, New RectangleF(0, 0, 200, 100), format);
            'Save the document.
            document.Save("Output.pdf")
            'Close the document.
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.Office.TextAlignment.Left">
            <summary>
            Specifies the text is aligned to Left.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TextAlignment.Center">
            <summary>
            Specifies the text is aligned to Center.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TextAlignment.Right">
            <summary>
            Specifies the text is aligned to Right.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TextAlignment.Justify">
            <summary>
            Specifies the text as Justified text.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.TextDirection">
            <summary>
            Represents the text rendering direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TextDirection.None">
            <summary>
            Specifies the default text order.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TextDirection.LeftToRight">
            <summary>
            Specifies the left to right direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TextDirection.RightToLeft">
            <summary>
            Specifies the right to left direction.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.TtfTableInfo">
            <summary>
            Holds offset for TTF table from beginning of TrueType font file.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfTableInfo.Offset">
            <summary>
            Gets or sets ofset from beginning of TrueType font file.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfTableInfo.Length">
            <summary>
            Gets or sets length of this table.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfTableInfo.Checksum">
            <summary>
            Gets or sets table checksum.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.TtfTableInfo.Empty">
            <summary>
            Gets a value indicating whether this <see cref="T:Syncfusion.Office.TtfTableInfo"/> is empty.
            </summary>
            <value><c>true</c> if empty; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Syncfusion.Office.TtfMetrics">
            <summary>
            ttf metrics.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfMetrics.LineGap">
            <summary>
            Typographic line gap.
            Negative LineGap values are treated as DEF_TABLE_CHECKSUM.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfMetrics.ContainsCFF">
            <summary>
            Gets or sets contains CFF.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfMetrics.IsSymbol">
            <summary>
            Gets or sets value indicating if Symbol font is used.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfMetrics.FontBox">
            <summary>
            Gets or sets description font item.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfMetrics.IsFixedPitch">
            <summary>
            Gets or sets description font item.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfMetrics.ItalicAngle">
            <summary>
            Gets or sets description font item.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfMetrics.PostScriptName">
            <summary>
            Gets or sets post-script font name.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfMetrics.FontFamily">
            <summary>
            Gets or sets font family name.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfMetrics.CapHeight">
            <summary>
            Gets or sets description font item.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfMetrics.Leading">
            <summary>
            Gets or sets description font item.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfMetrics.MacAscent">
            <summary>
            Gets or sets description font item.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfMetrics.MacDescent">
            <summary>
            Gets or sets description font item.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfMetrics.WinDescent">
            <summary>
            Gets or sets description font item.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfMetrics.WinAscent">
            <summary>
            Gets or sets description font item.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfMetrics.UnitsPerEm">
            <summary>
            Gets or sets description font item.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfMetrics.StemV">
            <summary>
            Gets or sets description font item.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfMetrics.WidthTable">
            <summary>
            Gets or sets widths table for the font.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfMetrics.MacStyle">
            <summary>
            Regular: 0
            Bold: 1
            Italic: 2
            Bold Italic: 3
            Bit 0- bold (if set to 1)
            Bit 1- italic (if set to 1)
            Bits 2-15- reserved (set to 0).
            NOTE:
            Note that macStyle bits must agree with the 'OS/2' table fsSelection bits.
            The fsSelection bits are used over the macStyle bits in Microsoft Windows.
            The PANOSE values and 'post' table values are ignored for determining bold or italic fonts.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfMetrics.SubScriptSizeFactor">
            <summary>
            Subscript size factor.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfMetrics.SuperscriptSizeFactor">
            <summary>
            Superscript size factor.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.TtfMetrics.IsItalic">
            <summary>
            Gets a value indicating whether this instance is italic.
            </summary>
            <value><c>true</c> if this instance is italic; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Office.TtfMetrics.IsBold">
            <summary>
            Gets a value indicating whether this instance is bold.
            </summary>
            <value><c>true</c> if this instance is bold; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Syncfusion.Office.TtfNameTable">
            <summary>
            name ttf table.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfNameTable.FormatSelector">
            <summary>
            Local variable to store Format Selector.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfNameTable.RecordsCount">
            <summary>
            Local variable to store Records Count.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfNameTable.Offset">
            <summary>
            Local variable to store Offset.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfNameTable.NameRecords">
            <summary>
            Local variable to store Name Records.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.TtfNameRecord">
            <summary>
            Name record.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfNameRecord.PlatformID">
            <summary>
            The PlatformID.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfNameRecord.EncodingID">
            <summary>
            The EncodingID.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfNameRecord.LanguageID">
            <summary>
            The PlatformIDLanguageID
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfNameRecord.NameID">
            <summary>
            The NameID.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfNameRecord.Length">
            <summary>
            The Length.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfNameRecord.Offset">
            <summary>
            The Offset.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfNameRecord.Name">
            <summary>
            The Name.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.TtfTableNames">
            <summary>
            Names of the tables.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfTableNames.cmap">
            <summary>
            The cmap.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfTableNames.glyf">
            <summary>
            The glyf.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfTableNames.head">
            <summary>
            The head.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfTableNames.hhea">
            <summary>
            The hhea.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfTableNames.hmtx">
            <summary>
            The cmap.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfTableNames.loca">
            <summary>
            The loca.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfTableNames.maxp">
            <summary>
            The maxp.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfTableNames.name">
            <summary>
            The cmap.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfTableNames.post">
            <summary>
            The post.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfTableNames.OS2">
            <summary>
            The OS2.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfTableNames.CFF">
            <summary>
            The CFF.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfTableNames.cvt">
            <summary>
            The cvt.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfTableNames.fpgm">
            <summary>
            The fpgm.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfTableNames.prep">
            <summary>
            The prep.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.TtfHeadTable">
            <summary>
            Head table.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfHeadTable.Modified">
            <summary>
            Modified: International date (8-byte field).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfHeadTable.Created">
            <summary>
            Created: International date (8-byte field).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfHeadTable.MagicNumber">
            <summary>
            MagicNumber: Set to 0x5F0F3CF5.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfHeadTable.CheckSumAdjustment">
            <summary>
            CheckSumAdjustment: To compute: set it to 0, sum the entire font as ULONG,
            then store 0xB1B0AFBA - sum.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfHeadTable.FontRevision">
            <summary>
            FontRevision: Set by font manufacturer.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfHeadTable.Version">
            <summary>
            Table version number: 0x00010000 for version 1.0.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfHeadTable.XMin">
            <summary>
            Minimum x for all glyph bounding boxes.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfHeadTable.YMin">
            <summary>
            Minimum y for all glyph bounding boxes.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfHeadTable.UnitsPerEm">
            <summary>
            Valid range is from 16 to 16384.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfHeadTable.YMax">
            <summary>
            Maximum y for all glyph bounding boxes.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfHeadTable.XMax">
            <summary>
            Maximum x for all glyph bounding boxes.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfHeadTable.MacStyle">
            <summary>
            Regular: 0
            Bold: 1
            Italic: 2
            Bold Italic: 3
            Bit 0 - bold (if set to 1)
            Bit 1 - italic (if set to 1)
            Bits 2-15 - reserved (set to 0)
            NOTE:
            Note that macStyle bits must agree with the 'OS/2' table fsSelection bits.
            The fsSelection bits are used over the macStyle bits in Microsoft Windows.
            The PANOSE values and 'post' table values are ignored for determining bold or italic fonts.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfHeadTable.Flags">
            <summary>
            Bit 0 - baseline for font at y=0
            Bit 1 - left SideBearing at x=0
            Bit 2 - instructions may depend on point size
            Bit 3 - force ppem to integer values for all private scaler math; may use fractional ppem sizes if this bit is clear
            Bit 4 - instructions may alter advance width (the advance widths might not scale linearly)
            Note: All other bits must be zero.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfHeadTable.LowestRecPPEM">
            <summary>
            LowestRecPPEM: Smallest readable size in pixels.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfHeadTable.FontDirectionHint">
            <summary>
            FontDirectionHint:
            0   Fully mixed directional glyphs
            1   Only strongly left to right
            2   Like 1 but also contains neutrals
            -1   Only strongly right to left
            -2   Like -1 but also contains neutrals.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfHeadTable.IndexToLocFormat">
            <summary>
            0 for short offsets, 1 for long.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfHeadTable.GlyphDataFormat">
            <summary>
            0 for current format.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.TtfHorizontalHeaderTable">
            <summary>
            This table contains information for horizontal layout.
            The values in the minRightSidebearing, minLeftSideBearing, and xMaxExtent should be computed
            using only glyphs that have contours.
            Glyphs with no contours should be ignored for the purpose of these calculations.
            All reserved areas must be set to 0.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfHorizontalHeaderTable.Version">
            <summary>
            Version.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfHorizontalHeaderTable.Ascender">
            <summary>
            Typographic ascent.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfHorizontalHeaderTable.AdvanceWidthMax">
            <summary>
            Maximum advance width value in HTML table.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfHorizontalHeaderTable.Descender">
            <summary>
            Typographic descent.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfHorizontalHeaderTable.NumberOfHMetrics">
            <summary>
            Number of hMetric entries in HTML table;
            may be smaller than the total number of glyphs in the font.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfHorizontalHeaderTable.LineGap">
            <summary>
            Typographic line gap. Negative LineGap values are treated as DEF_TABLE_CHECKSUM
            in Windows 3.1, System 6, and System 7.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfHorizontalHeaderTable.MinLeftSideBearing">
            <summary>
            Minimum left SideBearing value in HTML table.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfHorizontalHeaderTable.MinRightSideBearing">
            <summary>
            Minimum right SideBearing value; calculated as Min(aw - lsb - (xMax - xMin)).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfHorizontalHeaderTable.XMaxExtent">
            <summary>
            Max(lsb + (xMax - xMin)).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfHorizontalHeaderTable.CaretSlopeRise">
            <summary>
            Used to calculate the slope of the cursor (rise/run); 1 for vertical.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfHorizontalHeaderTable.CaretSlopeRun">
            <summary>
            0 for vertical.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfHorizontalHeaderTable.MetricDataFormat">
            <summary>
            0 for current format.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.TtfOS2Table">
            <summary>
            The OS/2 table consists of a set of metrics that are required by Windows and OS/2.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfOS2Table.Version">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfOS2Table.XAvgCharWidth">
            <summary>
            The Average Character Width parameter specifies
            the arithmetic average of the escapement (width)
            of all of the 26 lowercase letters a through z of the Latin alphabet
            and the space character. If any of the 26 lowercase letters are not present,
            this parameter should equal the weighted average of all glyphs in the font.
            For non-UGL (platform 3, encoding 0) fonts, use the unweighted average.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfOS2Table.UsWeightClass">
            <summary>
            Indicates the visual weight (degree of blackness or thickness of strokes)
            of the characters in the font.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfOS2Table.UsWidthClass">
            <summary>
            Indicates a relative change from the normal aspect ratio (width to height ratio)
            as specified by a font designer for the glyphs in a font.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfOS2Table.FsType">
            <summary>
            Indicates font embedding licensing rights for the font.
            Embeddable fonts may be stored in a document.
            When a document with embedded fonts is opened on a system that does not have the font installed
            (the remote system), the embedded font may be loaded for temporary (and in some cases, permanent)
            use on that system by an embedding-aware application.
            Embedding licensing rights are granted by the vendor of the font.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfOS2Table.YSubscriptXSize">
            <summary>
            The recommended horizontal size in font design units for subscripts for this font.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfOS2Table.YSubscriptYSize">
            <summary>
            The recommended vertical size in font design units for subscripts for this font.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfOS2Table.YSubscriptXOffset">
            <summary>
            The recommended horizontal offset in font design units for subscripts for this font.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfOS2Table.YSubscriptYOffset">
            <summary>
            The recommended vertical offset in font design units from the baseline for subscripts for this font.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfOS2Table.ySuperscriptXSize">
            <summary>
            The recommended horizontal size in font design units for superscripts for this font.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfOS2Table.YSuperscriptYSize">
            <summary>
            The recommended vertical size in font design units for superscripts for this font.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfOS2Table.YSuperscriptXOffset">
            <summary>
            The recommended horizontal offset in font design units for superscripts for this font.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfOS2Table.YSuperscriptYOffset">
            <summary>
            The recommended vertical offset in font design units from the baseline for superscripts for this font.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfOS2Table.YStrikeoutSize">
            <summary>
            Width of the strikeout stroke in font design units.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfOS2Table.YStrikeoutPosition">
            <summary>
            The position of the strikeout stroke relative to the baseline in font design units.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfOS2Table.SFamilyClass">
            <summary>
            This parameter is a classification of font-family design.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfOS2Table.Panose">
            <summary>
            This 10 byte series of numbers are used to describe the visual characteristics
            of a given typeface.  These characteristics are then used to associate the font with
            other fonts of similar appearance having different names. The variables for each digit are listed below.
            The specifications for each variable can be obtained in the specification
            PANOSE v2.0 Numerical Evaluation from Microsoft or Elseware Corporation.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfOS2Table.UlUnicodeRange1">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfOS2Table.UlUnicodeRange2">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfOS2Table.UlUnicodeRange3">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfOS2Table.UlUnicodeRange4">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfOS2Table.AchVendID">
            <summary>
            The four character identifier for the vendor of the given type face.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfOS2Table.FsSelection">
            <summary>
            Information concerning the nature of the font patterns.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfOS2Table.UsFirstCharIndex">
            <summary>
            The minimum Unicode index (character code) in this font,
            according to the cmap subtable for platform ID 3 and encoding ID 0 or 1.
            For most fonts supporting Win-ANSI or other character sets, this value would be 0x0020.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfOS2Table.UsLastCharIndex">
            <summary>
            usLastCharIndex: The maximum Unicode index (character code) in this font,
            according to the cmap subtable for platform ID 3 and encoding ID 0 or 1.
            This value depends on which character sets the font supports.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfOS2Table.STypoAscender">
            <summary>
            The typographic ascender for this font.
            Remember that this is not the same as the Ascender value in the 'hhea' table,
            which Apple defines in a far different manner.
            DEF_TABLE_OFFSET good source for usTypoAscender is the Ascender value from an AFM file.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfOS2Table.STypoDescender">
            <summary>
            The typographic descender for this font.
            Remember that this is not the same as the Descender value in the 'hhea' table,
            which Apple defines in a far different manner.
            DEF_TABLE_OFFSET good source for usTypoDescender is the Descender value from an AFM file.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfOS2Table.STypoLineGap">
            <summary>
            The typographic line gap for this font.
            Remember that this is not the same as the LineGap value in the 'hhea' table,
            which Apple defines in a far different manner.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfOS2Table.UsWinAscent">
            <summary>
            The ascender metric for Windows.
            This too is distinct from Apple's Ascender value and from the usTypoAscender values.
            usWinAscent is computed as the yMax for all characters in the Windows ANSI character set.
            usTypoAscent is used to compute the Windows font height and default line spacing.
            For platform 3 encoding 0 fonts, it is the same as yMax.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfOS2Table.UsWinDescent">
            <summary>
            The descender metric for Windows.
            This too is distinct from Apple's Descender value and from the usTypoDescender values.
            usWinDescent is computed as the -yMin for all characters in the Windows ANSI character set.
            usTypoAscent is used to compute the Windows font height and default line spacing.
            For platform 3 encoding 0 fonts, it is the same as -yMin.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfOS2Table.UlCodePageRange1">
            <summary>
            This field is used to specify the code pages encompassed
            by the font file in the 'cmap' subtable for platform 3, encoding ID 1 (Microsoft platform).
            If the font file is encoding ID 0, then the Symbol Character Set bit should be set.
            If the bit is set (1) then the code page is considered functional.
            If the bit is clear (0) then the code page is not considered functional.
            Each of the bits is treated as an independent flag and the bits can be set in any combination.
            The determination of "functional" is left up to the font designer,
            although character set selection should attempt to be functional by code pages if at all possible.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfOS2Table.UlCodePageRange2">
            <summary>
            This field is used to specify the code pages encompassed
            by the font file in the 'cmap' subtable for platform 3, encoding ID 1 (Microsoft platform).
            If the font file is encoding ID 0, then the Symbol Character Set bit should be set.
            If the bit is set (1) then the code page is considered functional.
            If the bit is clear (0) then the code page is not considered functional.
            Each of the bits is treated as an independent flag and the bits can be set in any combination.
            The determination of "functional" is left up to the font designer,
            although character set selection should attempt to be functional by code pages if at all possible.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfOS2Table.SxHeight">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfOS2Table.SCapHeight">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfOS2Table.UsDefaultChar">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfOS2Table.UsBreakChar">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfOS2Table.UsMaxContext">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.TtfPostTable">
            <summary>
            Ttf structure.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfPostTable.FormatType">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfPostTable.ItalicAngle">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfPostTable.UnderlinePosition">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfPostTable.UnderlineThickness">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfPostTable.IsFixedPitch">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfPostTable.MinMemType42">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfPostTable.MaxMemType42">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfPostTable.MinMemType1">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfPostTable.MaxMemType1">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.TtfLongHorMertric">
            <summary>
            Ttf structure.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfLongHorMertric.AdvanceWidth">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfLongHorMertric.Lsb">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.TtfCmapTable">
            <summary>
            Ttf structure.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfCmapTable.Version">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfCmapTable.TablesCount">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.TtfCmapSubTable">
            <summary>
            Ttf structure.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfCmapSubTable.PlatformID">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfCmapSubTable.EncodingID">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfCmapSubTable.Offset">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.TtfAppleCmapSubTable">
            <summary>
            Ttf structure.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfAppleCmapSubTable.Format">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfAppleCmapSubTable.Length">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfAppleCmapSubTable.Version">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.TtfTrimmedCmapSubTable">
            <summary>
            Ttf structure.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfTrimmedCmapSubTable.Format">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfTrimmedCmapSubTable.Length">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfTrimmedCmapSubTable.Version">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfTrimmedCmapSubTable.FirstCode">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfTrimmedCmapSubTable.EntryCount">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.TtfMicrosoftCmapSubTable">
            <summary>
            Ttf structure.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfMicrosoftCmapSubTable.Format">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfMicrosoftCmapSubTable.Length">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfMicrosoftCmapSubTable.Version">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfMicrosoftCmapSubTable.SegCountX2">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfMicrosoftCmapSubTable.SearchRange">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfMicrosoftCmapSubTable.EntrySelector">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfMicrosoftCmapSubTable.RangeShift">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfMicrosoftCmapSubTable.EndCount">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfMicrosoftCmapSubTable.ReservedPad">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfMicrosoftCmapSubTable.StartCount">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfMicrosoftCmapSubTable.IdDelta">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfMicrosoftCmapSubTable.IdRangeOffset">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfMicrosoftCmapSubTable.GlyphID">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.TtfGlyphInfo">
            <summary>
            Holds glyph info and its width of character.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfGlyphInfo.Index">
            <summary>
            Holds glyph index.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfGlyphInfo.Width">
            <summary>
            Holds character's width.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfGlyphInfo.CharCode">
            <summary>
            Code of the char symbol.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.TtfGlyphInfo.Empty">
            <summary>
            Gets a value indicating whether this <see cref="T:Syncfusion.Office.TtfGlyphInfo"/> is empty.
            </summary>
            <value><c>true</c> if empty; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Syncfusion.Office.TtfGlyphInfo.CompareTo(System.Object)">
            <summary>
            Compares two WidthDescriptor objects.
            </summary>
            <param name="obj">Another object for comparing.</param>
            <returns>A signed integer that indicates the relative order of this instance and value.</returns>
        </member>
        <member name="T:Syncfusion.Office.TtfLocaTable">
            <summary>
            Ttf structure.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfLocaTable.Offsets">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.TtfGlyphHeader">
            <summary>
            Ttf structure.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfGlyphHeader.numberOfContours">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfGlyphHeader.XMin">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfGlyphHeader.YMin">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfGlyphHeader.XMax">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfGlyphHeader.YMax">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.ITrueTypeFontCache">
            <summary>
            Interface of the objects that support caching of their internals.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.ITrueTypeFontCache.EqualsTo(Syncfusion.Office.ITrueTypeFontCache)">
            <summary>
            Checks whether the object is similar to another object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>True - if the objects have equal internals and can share them, False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Office.ITrueTypeFontCache.GetInternals">
            <summary>
            Returns internals of the object.
            </summary>
            <returns>Returns internals of the object.</returns>
        </member>
        <member name="M:Syncfusion.Office.ITrueTypeFontCache.SetInternals(Syncfusion.Office.ITrueTypeFontPrimitive)">
            <summary>
            Sets internals to the object.
            </summary>
            <param name="internals">Internals of the object.</param>
        </member>
        <member name="T:Syncfusion.Office.ITrueTypeFontPrimitive">
            <summary>
            Defines the basic interace of the various Primitive..
            </summary>
        </member>
        <member name="P:Syncfusion.Office.ITrueTypeFontPrimitive.Status">
            <summary>
            Specfies the status of the IPdfPrmitive. Status is registered if it has a reference or else none.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.ITrueTypeFontPrimitive.IsSaving">
            <summary>
            Gets or sets a value indicating whether this document is saving or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.ITrueTypeFontPrimitive.ObjectCollectionIndex">
            <summary>
            Gets or sets the integer value of the specified object.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.ITrueTypeFontPrimitive.ClonedObject">
            <summary>
            Stores the cloned object for future use.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.ITrueTypeFontPrimitive.Position">
            <summary>
            Gets or sets the position of the object.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.ITrueTypeFontWrapper">
            <summary>
            Defines the basic interace of the various Wrapper..
            </summary>
        </member>
        <member name="P:Syncfusion.Office.ITrueTypeFontWrapper.Element">
            <summary>
            Gets the element.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.ITrueTypeFont">
            <summary>
            Base interface for true type internal fonts.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.ITrueTypeFont.Size">
            <summary>
            Gets size of the font.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.ITrueTypeFont.Metrics">
            <summary>
            Gets font metrics.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.ITrueTypeFont.GetInternals">
            <summary>
            Gets the pdf primitive.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.ITrueTypeFont.EqualsToFont(Syncfusion.Office.Font)">
            <summary>
            Checks whether fonts are equals.
            </summary>
            <param name="font">Font to compare.</param>
            <returns>True if fonts are equal, False ofhtrwise.</returns>
        </member>
        <member name="M:Syncfusion.Office.ITrueTypeFont.CreateInternals">
            <summary>
            Creates font internals.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.ITrueTypeFont.CreateInternals(System.String)">
            <summary>
            Creates font internals.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.ITrueTypeFont.GetCharWidth(System.Char)">
            <summary>
            Returns width of the char symbol.
            </summary>
            <param name="charCode">Char symbol.</param>
            <returns>Width of the char symbol in universal units.</returns>
        </member>
        <member name="M:Syncfusion.Office.ITrueTypeFont.GetLineWidth(System.String)">
            <summary>
            Returns width of the text line.
            </summary>
            <param name="line">String line.</param>
            <returns>Width of the char symbol in universal units.</returns>
        </member>
        <member name="M:Syncfusion.Office.ITrueTypeFont.GetLineWidth(System.String,Syncfusion.Office.TrueTypeFontStringFormat,System.Single@)">
            <summary>
            Returns width of the text line.
            </summary>
            <param name="line">String line.</param>
            <returns>Width of the char symbol in universal units.</returns>
        </member>
        <member name="M:Syncfusion.Office.ITrueTypeFont.GetLineWidth(System.String,Syncfusion.Office.TrueTypeFontStringFormat)">
            <summary>
            Returns width of the text line.
            </summary>
            <param name="line">String line.</param>
            <returns>Width of the char symbol in universal units.</returns>
        </member>
        <member name="M:Syncfusion.Office.ITrueTypeFont.Close">
            <summary>
            Releases all resources.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TrueTypeFontArray.m_elements">
            <summary>
            The elements of the PDF array.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TrueTypeFontArray.m_bChanged">
            <summary>
            Indicates if the array was changed.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TrueTypeFontArray.m_status">
            <summary>
            Shows the type of object status whether it is object registered or other status;
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TrueTypeFontArray.m_isSaving">
            <summary>
            Indicates if the object is currently in saving state or not.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TrueTypeFontArray.m_index">
            <summary>
            Holds the index number of the object.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TrueTypeFontArray.m_position">
            <summary>
            Internal variable to store the position.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TrueTypeFontArray.m_clonedObject">
            <summary>
            Internal variable to hold cloned object.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TrueTypeFontArray.isFont">
            <summary>
            Represents the Font array.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.TrueTypeFontArray.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:IPdfSavable"/> at the specified index.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.TrueTypeFontArray.Count">
            <summary>
            Gets the count.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.TrueTypeFontArray.Status">
            <summary>
            Gets or sets the Status of the specified object.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.TrueTypeFontArray.IsSaving">
            <summary>
            Gets or sets a value indicating whether this document is saving or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.TrueTypeFontArray.ObjectCollectionIndex">
            <summary>
            Gets or sets the integer value of the specified object.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.TrueTypeFontArray.Position">
            <summary>
            Gets or sets the position of the object.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.TrueTypeFontArray.Elements">
            <summary>
            Gets the elements of the Pdf Array
            </summary>
        </member>
        <member name="P:Syncfusion.Office.TrueTypeFontArray.IsFont">
            <summary>
            Represents the Font dictionary
            </summary>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFontArray.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PdfArray"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFontArray.#ctor(Syncfusion.Office.TrueTypeFontArray)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfArray"/> class.
            </summary>
            <param name="array">The array.</param>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFontArray.#ctor(System.Collections.Generic.List{Syncfusion.Office.TrueTypeFontArray})">
            <summary>
            Initializes a new instance of the <see cref="T:PdfArray"/> class.
            </summary>
            <param name="array">The list of array.</param>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFontArray.#ctor(System.Int32[])">
            <summary>
            Initializes a new instance of the <see cref="T:PdfArray"/> class.
            </summary>
            <param name="array">The array.</param>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFontArray.#ctor(System.Single[])">
            <summary>
            Initializes a new instance of the <see cref="T:PdfArray"/> class.
            </summary>
            <param name="array">The array.</param>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFontArray.#ctor(System.Double[])">
            <summary>
            Initializes a new instance of the <see cref="T:PdfArray"/> class.
            </summary>
            <param name="array">The array.</param>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFontArray.FromRectangle(Syncfusion.Drawing.RectangleF)">
            <summary>
            Creates filled PDF array from the rectangle.
            </summary>
            <param name="rectangle">The rectangle.</param>
            <returns>The filled in PdfArray instance.</returns>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFontArray.FromRectangle(Syncfusion.Drawing.Rectangle)">
            <summary>
            Creates filled PDF array from the rectangle.
            </summary>
            <param name="rectangle">The rectangle.</param>
            <returns>The filled in PdfArray instance.</returns>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFontArray.Add(Syncfusion.Office.ITrueTypeFontPrimitive)">
            <summary>
            Adds the specified element to the PDF array.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFontArray.Add(Syncfusion.Office.ITrueTypeFontPrimitive[])">
            <summary>
            Adds the specified list of elements to array.
            </summary>
            <param name="list">The list.</param>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFontArray.Contains(Syncfusion.Office.ITrueTypeFontPrimitive)">
            <summary>
            Determines whether the specified element is within the array.
            </summary>
            <param name="element">The element.</param>
            <returns>
            	<c>true</c> if the array contains the specified element; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFontArray.Insert(System.Int32,Syncfusion.Office.ITrueTypeFontPrimitive)">
            <summary>
            Inserts the element into the array.
            </summary>
            <param name="index">Zero-based index of the element in the array.</param>
            <param name="element">The element that should be added to the array.</param>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFontArray.IndexOf(Syncfusion.Office.ITrueTypeFontPrimitive)">
            <summary>
            Checks whether array contains the element.
            </summary>
            <param name="element">The element object.</param>
            <returns>Index of the element in the array if exists, -1 otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFontArray.Remove(Syncfusion.Office.ITrueTypeFontPrimitive)">
            <summary>
            Removes element from the array.
            </summary>
            <param name="element">The element that should be removed from the array.</param>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFontArray.RemoveAt(System.Int32)">
            <summary>
            Remove the element from the array by its index.
            </summary>
            <param name="index">Zero-based index of the element in the array.</param>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFontArray.Clear">
            <summary>
            Cleares the array.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFontArray.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see>
            object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFontArray.MarkChanged">
            <summary>
            Marks the object changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.TrueTypeFontArray.Changed">
            <summary>
            Gets a value indicating whether this <see cref="T:PdfArray"/> is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFontArray.FreezeChanges(System.Object)">
            <summary>
            Freezes the changes.
            </summary>
            <param name="freezer">The freezer.</param>
        </member>
        <member name="T:Syncfusion.Office.Font">
            <summary>
            Defines a particular format for text, including font face, size, and style attributes. 
            </summary>
            <example> 
            <code lang="C#">
            //Create a new PDF document.
            PdfDocument document = new PdfDocument();
            //Add a page to the document.
            PdfPage page = document.Pages.Add();
            //Create PDF graphics for the page.
            PdfGraphics graphics = page.Graphics;
            //Create a new PDF font instance.
            PdfFont font = new PdfStandardFont(PdfFontFamily.Helvetica, 12);
            //Draw string to PDF page.
            graphics.DrawString("Hello World!", font, PdfBrushes.Black, PointF.Empty);
            //Save the document.
            document.Save("Output.pdf");
            //Close the document.
            document.Close(true);
            </code>
            <code lang="VB">
            'Create a new PDF document.
            Dim document As New PdfDocument()
            'Add a page to the document.
            Dim page As PdfPage = document.Pages.Add()
            'Create PDF graphics for the page.
            Dim graphics As PdfGraphics = page.Graphics
            'Create a new PDF font instance.
            Dim font As PdfFont = New PdfStandardFont(PdfFontFamily.Helvetica, 12)
            'Draw string to PDF page.
            graphics.DrawString("Hello World!", font, PdfBrushes.Black, PointF.Empty)
            'Save the document.
            document.Save("Output.pdf")
            'Close the document.
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.Office.Font.CharSizeMultiplier">
            <summary>
            Multiplier of the symbol width.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Font.s_syncObject">
            <summary>
            Synchronization object.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Font.m_size">
            <summary>
            Size of the font.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Font.m_style">
            <summary>
            Style of the font.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Font.m_fontMetrics">
            <summary>
            Metrics of the font.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Font.m_fontInternals">
            <summary>
            PDf primitive of the font.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Font.m_ascentValue">
            <summary>
            Ascent value of the Font
            </summary>
        </member>
        <member name="M:Syncfusion.Office.Font.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Office.Font"/> class.
            </summary>
            <param name="size">The size.</param>
        </member>
        <member name="M:Syncfusion.Office.Font.#ctor(System.Single,Syncfusion.Office.TTFFontStyle)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Office.Font"/> class.
            </summary>
            <param name="size">The size.</param>
            <param name="style">The style.</param>
        </member>
        <member name="P:Syncfusion.Office.Font.Name">
            <summary>
            Gets the face name of this Font.
            </summary>
            <value>A string representation of the face name of this <see cref="T:Syncfusion.Office.Font"/>.</value>
            <example> 
            <code lang="C#">
            //Create a new PDF document.
            PdfDocument document = new PdfDocument();
            //Add a page to the document.
            PdfPage page = document.Pages.Add();
            //Create PDF graphics for the page.
            PdfGraphics graphics = page.Graphics;
            //Create a new PDF font instance.
            PdfFont font = new PdfStandardFont(PdfFontFamily.Helvetica, 12);
            //Get font Name.
            string fontName = font.Name;
            //Get font size.
            float fontSize = font.Size;
            //Get font height.
            float fontHeight = font.Height;
            //Get the font style.
            PdfFontStyle style = font.Style;
            StringBuilder builder = new StringBuilder();
            builder.AppendLine("Font Name: " + fontName);
            builder.AppendLine("Font Size: " + fontSize);
            builder.AppendLine("Font Height: " + FontHeight);
            builder.AppendLine("Font Style: " + style.ToString());
            //Draw string to PDF page.
            graphics.DrawString(builder.ToString(), font, PdfBrushes.Black, PointF.Empty);
            //Save the document.
            document.Save("Output.pdf");
            //Close the document.
            document.Close(true);
            </code>
            <code lang="VB">
            'Create a new PDF document.
            Dim document As New PdfDocument()
            'Add a page to the document.
            Dim page As PdfPage = document.Pages.Add()
            'Create PDF graphics for the page.
            Dim graphics As PdfGraphics = page.Graphics
            'Create a new PDF font instance.
            Dim font As PdfFont = New PdfStandardFont(PdfFontFamily.Helvetica, 12)
            'Get font Name.
            Dim fontName As String = font.Name
            'Get font size.
            Dim fontSize As Single = font.Size
            'Get font height.
            Dim fontHeight As Single = font.Height
            'Get the font style.
            Dim style As PdfFontStyle = font.Style
            Dim builder As New StringBuilder()
            builder.AppendLine("Font Name: " + fontName)
            builder.AppendLine("Font Size: " + fontSize)
            builder.AppendLine("Font Height: " + fontHeight)
            builder.AppendLine("Font Style: " + style.ToString())
            'Draw string to PDF page.
            graphics.DrawString(builder.ToString(), font, PdfBrushes.Black, PointF.Empty)
            'Save the document.
            document.Save("Output.pdf")
            'Close the document.
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.Office.Font.Size">
            <summary>
            Gets the size of this font.
            </summary>
            <value>The em-size of this Font.</value>
            <example> 
            <code lang="C#">
            //Create a new PDF document.
            PdfDocument document = new PdfDocument();
            //Add a page to the document.
            PdfPage page = document.Pages.Add();
            //Create PDF graphics for the page.
            PdfGraphics graphics = page.Graphics;
            //Create a new PDF font instance.
            PdfFont font = new PdfStandardFont(PdfFontFamily.Helvetica, 12);
            //Get font Name.
            string fontName = font.Name;
            //Get font size.
            float fontSize = font.Size;
            //Get font height.
            float fontHeight = font.Height;
            //Get the font style.
            PdfFontStyle style = font.Style;
            StringBuilder builder = new StringBuilder();
            builder.AppendLine("Font Name: " + fontName);
            builder.AppendLine("Font Size: " + fontSize);
            builder.AppendLine("Font Height: " + FontHeight);
            builder.AppendLine("Font Style: " + style.ToString());
            //Draw string to PDF page.
            graphics.DrawString(builder.ToString(), font, PdfBrushes.Black, PointF.Empty);
            //Save the document.
            document.Save("Output.pdf");
            //Close the document.
            document.Close(true);
            </code>
            <code lang="VB">
            'Create a new PDF document.
            Dim document As New PdfDocument()
            'Add a page to the document.
            Dim page As PdfPage = document.Pages.Add()
            'Create PDF graphics for the page.
            Dim graphics As PdfGraphics = page.Graphics
            'Create a new PDF font instance.
            Dim font As PdfFont = New PdfStandardFont(PdfFontFamily.Helvetica, 12)
            'Get font Name.
            Dim fontName As String = font.Name
            'Get font size.
            Dim fontSize As Single = font.Size
            'Get font height.
            Dim fontHeight As Single = font.Height
            'Get the font style.
            Dim style As PdfFontStyle = font.Style
            Dim builder As New StringBuilder()
            builder.AppendLine("Font Name: " + fontName)
            builder.AppendLine("Font Size: " + fontSize)
            builder.AppendLine("Font Height: " + fontHeight)
            builder.AppendLine("Font Style: " + style.ToString())
            'Draw string to PDF page.
            graphics.DrawString(builder.ToString(), font, PdfBrushes.Black, PointF.Empty)
            'Save the document.
            document.Save("Output.pdf")
            'Close the document.
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.Office.Font.Height">
            <summary>
            Gets the height of the font in points.
            </summary>
            <example> 
            <code lang="C#">
            //Create a new PDF document.
            PdfDocument document = new PdfDocument();
            //Add a page to the document.
            PdfPage page = document.Pages.Add();
            //Create PDF graphics for the page.
            PdfGraphics graphics = page.Graphics;
            //Create a new PDF font instance.
            PdfFont font = new PdfStandardFont(PdfFontFamily.Helvetica, 12);
            //Get font Name.
            string fontName = font.Name;
            //Get font size.
            float fontSize = font.Size;
            //Get font height.
            float fontHeight = font.Height;
            //Get the font style.
            PdfFontStyle style = font.Style;
            StringBuilder builder = new StringBuilder();
            builder.AppendLine("Font Name: " + fontName);
            builder.AppendLine("Font Size: " + fontSize);
            builder.AppendLine("Font Height: " + FontHeight);
            builder.AppendLine("Font Style: " + style.ToString());
            //Draw string to PDF page.
            graphics.DrawString(builder.ToString(), font, PdfBrushes.Black, PointF.Empty);
            //Save the document.
            document.Save("Output.pdf");
            //Close the document.
            document.Close(true);
            </code>
            <code lang="VB">
            'Create a new PDF document.
            Dim document As New PdfDocument()
            'Add a page to the document.
            Dim page As PdfPage = document.Pages.Add()
            'Create PDF graphics for the page.
            Dim graphics As PdfGraphics = page.Graphics
            'Create a new PDF font instance.
            Dim font As PdfFont = New PdfStandardFont(PdfFontFamily.Helvetica, 12)
            'Get font Name.
            Dim fontName As String = font.Name
            'Get font size.
            Dim fontSize As Single = font.Size
            'Get font height.
            Dim fontHeight As Single = font.Height
            'Get the font style.
            Dim style As PdfFontStyle = font.Style
            Dim builder As New StringBuilder()
            builder.AppendLine("Font Name: " + fontName)
            builder.AppendLine("Font Size: " + fontSize)
            builder.AppendLine("Font Height: " + fontHeight)
            builder.AppendLine("Font Style: " + style.ToString())
            'Draw string to PDF page.
            graphics.DrawString(builder.ToString(), font, PdfBrushes.Black, PointF.Empty)
            'Save the document.
            document.Save("Output.pdf")
            'Close the document.
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.Office.Font.Style">
            <summary>
            Gets the style information for this font.
            </summary>
            <example> 
            <code lang="C#">
            //Create a new PDF document.
            PdfDocument document = new PdfDocument();
            //Add a page to the document.
            PdfPage page = document.Pages.Add();
            //Create PDF graphics for the page.
            PdfGraphics graphics = page.Graphics;
            //Create a new PDF font instance.
            PdfFont font = new PdfStandardFont(PdfFontFamily.Helvetica, 12);
            //Get font Name.
            string fontName = font.Name;
            //Get font size.
            float fontSize = font.Size;
            //Get font height.
            float fontHeight = font.Height;
            //Get the font style.
            PdfFontStyle style = font.Style;
            StringBuilder builder = new StringBuilder();
            builder.AppendLine("Font Name: " + fontName);
            builder.AppendLine("Font Size: " + fontSize);
            builder.AppendLine("Font Height: " + FontHeight);
            builder.AppendLine("Font Style: " + style.ToString());
            //Draw string to PDF page.
            graphics.DrawString(builder.ToString(), font, PdfBrushes.Black, PointF.Empty);
            //Save the document.
            document.Save("Output.pdf");
            //Close the document.
            document.Close(true);
            </code>
            <code lang="VB">
            'Create a new PDF document.
            Dim document As New PdfDocument()
            'Add a page to the document.
            Dim page As PdfPage = document.Pages.Add()
            'Create PDF graphics for the page.
            Dim graphics As PdfGraphics = page.Graphics
            'Create a new PDF font instance.
            Dim font As PdfFont = New PdfStandardFont(PdfFontFamily.Helvetica, 12)
            'Get font Name.
            Dim fontName As String = font.Name
            'Get font size.
            Dim fontSize As Single = font.Size
            'Get font height.
            Dim fontHeight As Single = font.Height
            'Get the font style.
            Dim style As PdfFontStyle = font.Style
            Dim builder As New StringBuilder()
            builder.AppendLine("Font Name: " + fontName)
            builder.AppendLine("Font Size: " + fontSize)
            builder.AppendLine("Font Height: " + fontHeight)
            builder.AppendLine("Font Style: " + style.ToString())
            'Draw string to PDF page.
            graphics.DrawString(builder.ToString(), font, PdfBrushes.Black, PointF.Empty)
            'Save the document.
            document.Save("Output.pdf")
            'Close the document.
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.Office.Font.Bold">
            <summary>
            Gets a value indicating whether this <see cref="T:Syncfusion.Office.Font"/> is bold.
            </summary>
            <value><c>true</c> if bold; otherwise, <c>false</c>.</value>
            <example> 
            <code lang="C#">
            //Create a new PDF document.
            PdfDocument document = new PdfDocument();
            //Add a page to the document.
            PdfPage page = document.Pages.Add();
            //Create PDF graphics for the page.
            PdfGraphics graphics = page.Graphics;
            //Create a new PDF font instance.
            PdfFont font = new PdfStandardFont(PdfFontFamily.Helvetica, 12);
            //Get font Name.
            string fontName = font.Name;
            //Get font size.
            float fontSize = font.Size;
            //Get font height.
            float fontHeight = font.Height;
            //Get the font style.
            PdfFontStyle style = font.Style;
            StringBuilder builder = new StringBuilder();
            builder.AppendLine("Font Name: " + fontName);
            builder.AppendLine("Font Size: " + fontSize);
            builder.AppendLine("Font Height: " + FontHeight);
            builder.AppendLine("Font Style: " + style.ToString());
            builder.AppendLine("Bold: " + font.Bold.ToString());
            builder.AppendLine("Italic: " + font.Italic.ToString());
            builder.AppendLine("Underline: " + font.Underline.ToString());
            builder.AppendLine("Strikeout: " + font.Strikeout.ToString());      
            //Draw string to PDF page.
            graphics.DrawString(builder.ToString(), font, PdfBrushes.Black, PointF.Empty);
            //Save the document.
            document.Save("Output.pdf");
            //Close the document.
            document.Close(true);
            </code>
            <code lang="VB">
            'Create a new PDF document.
            Dim document As New PdfDocument()
            'Add a page to the document.
            Dim page As PdfPage = document.Pages.Add()
            'Create PDF graphics for the page.
            Dim graphics As PdfGraphics = page.Graphics
            'Create a new PDF font instance.
            Dim font As PdfFont = New PdfStandardFont(PdfFontFamily.Helvetica, 12)
            'Get font Name.
            Dim fontName As String = font.Name
            'Get font size.
            Dim fontSize As Single = font.Size
            'Get font height.
            Dim fontHeight As Single = font.Height
            'Get the font style.
            Dim style As PdfFontStyle = font.Style
            Dim builder As New StringBuilder()
            builder.AppendLine("Font Name: " + fontName)
            builder.AppendLine("Font Size: " + fontSize)
            builder.AppendLine("Font Height: " + fontHeight)
            builder.AppendLine("Font Style: " + style.ToString())
            builder.AppendLine("Bold: " + font.Bold.ToString())
            builder.AppendLine("Italic: " + font.Italic.ToString())
            builder.AppendLine("Underline: " + font.Underline.ToString())
            builder.AppendLine("Strikeout: " + font.Strikeout.ToString())      
            'Draw string to PDF page.
            graphics.DrawString(builder.ToString(), font, PdfBrushes.Black, PointF.Empty)
            'Save the document.
            document.Save("Output.pdf")
            'Close the document.
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.Office.Font.Italic">
            <summary>
            Gets a value indicating whether this <see cref="T:Syncfusion.Office.Font"/> has the italic style applied.
            </summary>
            <value><c>true</c> if italic; otherwise, <c>false</c>.</value>
            <example> 
            <code lang="C#">
            //Create a new PDF document.
            PdfDocument document = new PdfDocument();
            //Add a page to the document.
            PdfPage page = document.Pages.Add();
            //Create PDF graphics for the page.
            PdfGraphics graphics = page.Graphics;
            //Create a new PDF font instance.
            PdfFont font = new PdfStandardFont(PdfFontFamily.Helvetica, 12);
            //Get font Name.
            string fontName = font.Name;
            //Get font size.
            float fontSize = font.Size;
            //Get font height.
            float fontHeight = font.Height;
            //Get the font style.
            PdfFontStyle style = font.Style;
            StringBuilder builder = new StringBuilder();
            builder.AppendLine("Font Name: " + fontName);
            builder.AppendLine("Font Size: " + fontSize);
            builder.AppendLine("Font Height: " + FontHeight);
            builder.AppendLine("Font Style: " + style.ToString());
            builder.AppendLine("Bold: " + font.Bold.ToString());
            builder.AppendLine("Italic: " + font.Italic.ToString());
            builder.AppendLine("Underline: " + font.Underline.ToString());
            builder.AppendLine("Strikeout: " + font.Strikeout.ToString());      
            //Draw string to PDF page.
            graphics.DrawString(builder.ToString(), font, PdfBrushes.Black, PointF.Empty);
            //Save the document.
            document.Save("Output.pdf");
            //Close the document.
            document.Close(true);
            </code>
            <code lang="VB">
            'Create a new PDF document.
            Dim document As New PdfDocument()
            'Add a page to the document.
            Dim page As PdfPage = document.Pages.Add()
            'Create PDF graphics for the page.
            Dim graphics As PdfGraphics = page.Graphics
            'Create a new PDF font instance.
            Dim font As PdfFont = New PdfStandardFont(PdfFontFamily.Helvetica, 12)
            'Get font Name.
            Dim fontName As String = font.Name
            'Get font size.
            Dim fontSize As Single = font.Size
            'Get font height.
            Dim fontHeight As Single = font.Height
            'Get the font style.
            Dim style As PdfFontStyle = font.Style
            Dim builder As New StringBuilder()
            builder.AppendLine("Font Name: " + fontName)
            builder.AppendLine("Font Size: " + fontSize)
            builder.AppendLine("Font Height: " + fontHeight)
            builder.AppendLine("Font Style: " + style.ToString())
            builder.AppendLine("Bold: " + font.Bold.ToString())
            builder.AppendLine("Italic: " + font.Italic.ToString())
            builder.AppendLine("Underline: " + font.Underline.ToString())
            builder.AppendLine("Strikeout: " + font.Strikeout.ToString())      
            'Draw string to PDF page.
            graphics.DrawString(builder.ToString(), font, PdfBrushes.Black, PointF.Empty)
            'Save the document.
            document.Save("Output.pdf")
            'Close the document.
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.Office.Font.Strikeout">
            <summary>
            Gets a value indicating whether this <see cref="T:Syncfusion.Office.Font"/> is strikeout.
            </summary>
            <value><c>true</c> if strikeout; otherwise, <c>false</c>.</value>
            <example> 
            <code lang="C#">
            //Create a new PDF document.
            PdfDocument document = new PdfDocument();
            //Add a page to the document.
            PdfPage page = document.Pages.Add();
            //Create PDF graphics for the page.
            PdfGraphics graphics = page.Graphics;
            //Create a new PDF font instance.
            PdfFont font = new PdfStandardFont(PdfFontFamily.Helvetica, 12);
            //Get font Name.
            string fontName = font.Name;
            //Get font size.
            float fontSize = font.Size;
            //Get font height.
            float fontHeight = font.Height;
            //Get the font style.
            PdfFontStyle style = font.Style;
            StringBuilder builder = new StringBuilder();
            builder.AppendLine("Font Name: " + fontName);
            builder.AppendLine("Font Size: " + fontSize);
            builder.AppendLine("Font Height: " + FontHeight);
            builder.AppendLine("Font Style: " + style.ToString());
            builder.AppendLine("Bold: " + font.Bold.ToString());
            builder.AppendLine("Italic: " + font.Italic.ToString());
            builder.AppendLine("Underline: " + font.Underline.ToString());
            builder.AppendLine("Strikeout: " + font.Strikeout.ToString());      
            //Draw string to PDF page.
            graphics.DrawString(builder.ToString(), font, PdfBrushes.Black, PointF.Empty);
            //Save the document.
            document.Save("Output.pdf");
            //Close the document.
            document.Close(true);
            </code>
            <code lang="VB">
            'Create a new PDF document.
            Dim document As New PdfDocument()
            'Add a page to the document.
            Dim page As PdfPage = document.Pages.Add()
            'Create PDF graphics for the page.
            Dim graphics As PdfGraphics = page.Graphics
            'Create a new PDF font instance.
            Dim font As PdfFont = New PdfStandardFont(PdfFontFamily.Helvetica, 12)
            'Get font Name.
            Dim fontName As String = font.Name
            'Get font size.
            Dim fontSize As Single = font.Size
            'Get font height.
            Dim fontHeight As Single = font.Height
            'Get the font style.
            Dim style As PdfFontStyle = font.Style
            Dim builder As New StringBuilder()
            builder.AppendLine("Font Name: " + fontName)
            builder.AppendLine("Font Size: " + fontSize)
            builder.AppendLine("Font Height: " + fontHeight)
            builder.AppendLine("Font Style: " + style.ToString())
            builder.AppendLine("Bold: " + font.Bold.ToString())
            builder.AppendLine("Italic: " + font.Italic.ToString())
            builder.AppendLine("Underline: " + font.Underline.ToString())
            builder.AppendLine("Strikeout: " + font.Strikeout.ToString())      
            'Draw string to PDF page.
            graphics.DrawString(builder.ToString(), font, PdfBrushes.Black, PointF.Empty)
            'Save the document.
            document.Save("Output.pdf")
            'Close the document.
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.Office.Font.Underline">
            <summary>
            Gets a value indicating whether this <see cref="T:Syncfusion.Office.Font"/> is underline.
            </summary>
            <value><c>true</c> if underline; otherwise, <c>false</c>.</value>
            <example> 
            <code lang="C#">
            //Create a new PDF document.
            PdfDocument document = new PdfDocument();
            //Add a page to the document.
            PdfPage page = document.Pages.Add();
            //Create PDF graphics for the page.
            PdfGraphics graphics = page.Graphics;
            //Create a new PDF font instance.
            PdfFont font = new PdfStandardFont(PdfFontFamily.Helvetica, 12);
            //Get font Name.
            string fontName = font.Name;
            //Get font size.
            float fontSize = font.Size;
            //Get font height.
            float fontHeight = font.Height;
            //Get the font style.
            PdfFontStyle style = font.Style;
            StringBuilder builder = new StringBuilder();
            builder.AppendLine("Font Name: " + fontName);
            builder.AppendLine("Font Size: " + fontSize);
            builder.AppendLine("Font Height: " + FontHeight);
            builder.AppendLine("Font Style: " + style.ToString());
            builder.AppendLine("Bold: " + font.Bold.ToString());
            builder.AppendLine("Italic: " + font.Italic.ToString());
            builder.AppendLine("Underline: " + font.Underline.ToString());
            builder.AppendLine("Strikeout: " + font.Strikeout.ToString());      
            //Draw string to PDF page.
            graphics.DrawString(builder.ToString(), font, PdfBrushes.Black, PointF.Empty);
            //Save the document.
            document.Save("Output.pdf");
            //Close the document.
            document.Close(true);
            </code>
            <code lang="VB">
            'Create a new PDF document.
            Dim document As New PdfDocument()
            'Add a page to the document.
            Dim page As PdfPage = document.Pages.Add()
            'Create PDF graphics for the page.
            Dim graphics As PdfGraphics = page.Graphics
            'Create a new PDF font instance.
            Dim font As PdfFont = New PdfStandardFont(PdfFontFamily.Helvetica, 12)
            'Get font Name.
            Dim fontName As String = font.Name
            'Get font size.
            Dim fontSize As Single = font.Size
            'Get font height.
            Dim fontHeight As Single = font.Height
            'Get the font style.
            Dim style As PdfFontStyle = font.Style
            Dim builder As New StringBuilder()
            builder.AppendLine("Font Name: " + fontName)
            builder.AppendLine("Font Size: " + fontSize)
            builder.AppendLine("Font Height: " + fontHeight)
            builder.AppendLine("Font Style: " + style.ToString())
            builder.AppendLine("Bold: " + font.Bold.ToString())
            builder.AppendLine("Italic: " + font.Italic.ToString())
            builder.AppendLine("Underline: " + font.Underline.ToString())
            builder.AppendLine("Strikeout: " + font.Strikeout.ToString())      
            'Draw string to PDF page.
            graphics.DrawString(builder.ToString(), font, PdfBrushes.Black, PointF.Empty)
            'Save the document.
            document.Save("Output.pdf")
            'Close the document.
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.Office.Font.Metrics">
            <summary>
            Gets or sets the metrics for this font.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Font.Ascent">
            <summary>
            Gets or sets the ascent value 
            </summary>
        </member>
        <member name="M:Syncfusion.Office.Font.MeasureString(System.String)">
            <summary>
            Measures a string by using this font.
            </summary>
            <param name="text">String to measure.</param>
            <returns>Size of the text.</returns>
            <example> 
            <code lang="C#">
            //Create a new PDF document.
            PdfDocument document = new PdfDocument();
            //Add a page to the document.
            PdfPage page = document.Pages.Add();
            //Create PDF graphics for the page.
            PdfGraphics graphics = page.Graphics;
            //Create a new PDF font instance.
            PdfFont font = new PdfStandardFont(PdfFontFamily.Helvetica, 12);
            string text = "Hello World!";
            //Measure the text.
            SizeF size = font.MeasureString(text);
            //Draw string to PDF page.
            graphics.DrawString(text, font, PdfBrushes.Black, new RectangleF(PointF.Empty, size));
            //Save the document.
            document.Save("Output.pdf");
            //Close the document.
            document.Close(true);
            </code>
            <code lang="VB">
            'Create a new PDF document.
            Dim document As New PdfDocument()
            'Add a page to the document.
            Dim page As PdfPage = document.Pages.Add()
            'Create PDF graphics for the page.
            Dim graphics As PdfGraphics = page.Graphics
            'Create a new PDF font instance.
            Dim font As PdfFont = New PdfStandardFont(PdfFontFamily.Helvetica, 12)
            Dim text As String = "Hello World!"
            'Measure the text.
            Dim size As SizeF = font.MeasureString(text)
            'Draw string to PDF page.
            graphics.DrawString(text, font, PdfBrushes.Black, New RectangleF(PointF.Empty, size))
            'Save the document.
            document.Save("Output.pdf")
            'Close the document.
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Office.Font.MeasureString(System.String,Syncfusion.Office.TrueTypeFontStringFormat)">
            <summary>
            Measures a string by using this font.
            </summary>
            <param name="text">String to measure.</param>
            <param name="format">PdfStringFormat that represents formatting information, such as line spacing, for the string.</param>
            <returns>Size of the text.</returns>
            <example> 
            <code lang="C#">
            //Create a new PDF document.
            PdfDocument document = new PdfDocument();
            //Add a page to the document.
            PdfPage page = document.Pages.Add();
            //Create PDF graphics for the page.
            PdfGraphics graphics = page.Graphics;
            //Create a new PDF font instance.
            PdfFont font = new PdfStandardFont(PdfFontFamily.Helvetica, 12);     
            PdfStringFormat format = new Syncfusion.Office.PdfStringFormat();
            format.Alignment = PdfTextAlignment.Center;
            format.LineAlignment = PdfVerticalAlignment.Middle;
            string text = "Hello World!";
            //Measure the text.
            SizeF size = font.MeasureString(text, format);
            //Draw string to PDF page.
            graphics.DrawString(text, font, PdfBrushes.Black, new RectangleF(PointF.Empty, size), format);
            //Save the document.
            document.Save("Output.pdf");
            //Close the document.
            document.Close(true);
            </code>
            <code lang="VB">
            'Create a new PDF document.
            Dim document As New PdfDocument()
            'Add a page to the document.
            Dim page As PdfPage = document.Pages.Add()
            'Create PDF graphics for the page.
            Dim graphics As PdfGraphics = page.Graphics
            'Create a new PDF font instance.
            Dim font As PdfFont = New PdfStandardFont(PdfFontFamily.Helvetica, 12)
            Dim format As PdfStringFormat = New Syncfusion.Office.PdfStringFormat()
            format.Alignment = PdfTextAlignment.Center
            format.LineAlignment = PdfVerticalAlignment.Middle
            Dim text As String = "Hello World!"
            'Measure the text.
            Dim size As SizeF = font.MeasureString(text, format)
            'Draw string to PDF page.
            graphics.DrawString(text, font, PdfBrushes.Black, New RectangleF(PointF.Empty, size), format)
            'Save the document.
            document.Save("Output.pdf")
            'Close the document.
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Office.Font.MeasureString(System.String,Syncfusion.Office.TrueTypeFontStringFormat,System.Int32@,System.Int32@)">
            <summary>
            Measures a string by using this font.
            </summary>
            <param name="text">String to measure.</param>
            <param name="format">PdfStringFormat that represents formatting information, such as line spacing, for the string.</param>
            <param name="charactersFitted">Number of characters in the string.</param>
            <param name="linesFilled">Number of text lines in the string.</param>
            <returns>Size of the text.</returns>
            <example> 
            <code lang="C#">
            //Create a new PDF document.
            PdfDocument document = new PdfDocument();
            //Add a page to the document.
            PdfPage page = document.Pages.Add();
            //Create PDF graphics for the page.
            PdfGraphics graphics = page.Graphics;
            //Create a new PDF font instance.
            PdfFont font = new PdfStandardFont(PdfFontFamily.Helvetica, 12);     
            PdfStringFormat format = new Syncfusion.Office.PdfStringFormat();
            format.Alignment = PdfTextAlignment.Center;
            format.LineAlignment = PdfVerticalAlignment.Middle;
            string text = "Hello World!";
            int charactersFilled, linesFilled;
            //Measure the text.
            SizeF size = font.MeasureString(text, format , out charactersFilled, linesFilled);
            //Draw string to PDF page.
            graphics.DrawString(text, font, PdfBrushes.Black, new RectangleF(PointF.Empty, size), format);
            //Save the document.
            document.Save("Output.pdf");
            //Close the document.
            document.Close(true);
            </code>
            <code lang="VB">
            'Create a new PDF document.
            Dim document As New PdfDocument()
            'Add a page to the document.
            Dim page As PdfPage = document.Pages.Add()
            'Create PDF graphics for the page.
            Dim graphics As PdfGraphics = page.Graphics
            'Create a new PDF font instance.
            Dim font As PdfFont = New PdfStandardFont(PdfFontFamily.Helvetica, 12)
            Dim format As PdfStringFormat = New Syncfusion.Office.PdfStringFormat()
            format.Alignment = PdfTextAlignment.Center
            format.LineAlignment = PdfVerticalAlignment.Middle
            Dim text As String = "Hello World!"
            Dim charactersFilled As Integer, linesFilled As Integer
            'Measure the text.
            Dim size As SizeF = font.MeasureString(text, format, charactersFilled, linesFilled)
            'Draw string to PDF page.
            graphics.DrawString(text, font, PdfBrushes.Black, New RectangleF(PointF.Empty, size), format)
            'Save the document.
            document.Save("Output.pdf")
            'Close the document.
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Office.Font.MeasureString(System.String,System.Single)">
            <summary>
            Measures a string by using this font.
            </summary>
            <param name="text">String to measure.</param>
            <param name="width">Maximum width of the string in points.</param>
            <returns>Size of the text.</returns>
            <example> 
            <code lang="C#">
            //Create a new PDF document.
            PdfDocument document = new PdfDocument();
            //Add a page to the document.
            PdfPage page = document.Pages.Add();
            //Create PDF graphics for the page.
            PdfGraphics graphics = page.Graphics;
            //Create a new PDF font instance.
            PdfFont font = new PdfStandardFont(PdfFontFamily.Helvetica, 12);     
            PdfStringFormat format = new Syncfusion.Office.PdfStringFormat();
            format.Alignment = PdfTextAlignment.Center;
            format.LineAlignment = PdfVerticalAlignment.Middle;
            string text = "Hello World!";
            //Measure the text.
            SizeF size = font.MeasureString(text, 100);
            //Draw string to PDF page.
            graphics.DrawString(text, font, PdfBrushes.Black, new RectangleF(PointF.Empty, size), format);
            //Save the document.
            document.Save("Output.pdf");
            //Close the document.
            document.Close(true);
            </code>
            <code lang="VB">
            'Create a new PDF document.
            Dim document As New PdfDocument()
            'Add a page to the document.
            Dim page As PdfPage = document.Pages.Add()
            'Create PDF graphics for the page.
            Dim graphics As PdfGraphics = page.Graphics
            'Create a new PDF font instance.
            Dim font As PdfFont = New PdfStandardFont(PdfFontFamily.Helvetica, 12)
            Dim format As PdfStringFormat = New Syncfusion.Office.PdfStringFormat()
            format.Alignment = PdfTextAlignment.Center
            format.LineAlignment = PdfVerticalAlignment.Middle
            Dim text As String = "Hello World!"
            'Measure the text.
            Dim size As SizeF = font.MeasureString(text, 100)
            'Draw string to PDF page.
            graphics.DrawString(text, font, PdfBrushes.Black, New RectangleF(PointF.Empty, size), format)
            'Save the document.
            document.Save("Output.pdf")
            'Close the document.
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Office.Font.MeasureString(System.String,System.Single,Syncfusion.Office.TrueTypeFontStringFormat)">
            <summary>
            Measures a string by using this font.
            </summary>
            <param name="text">String to measure.</param>
            <param name="width">Maximum width of the string in points.</param>
            <param name="format">PdfStringFormat that represents formatting information, such as line spacing, for the string.</param>
            <returns>Size of the text.</returns>
            <example> 
            <code lang="C#">
            //Create a new PDF document.
            PdfDocument document = new PdfDocument();
            //Add a page to the document.
            PdfPage page = document.Pages.Add();
            //Create PDF graphics for the page.
            PdfGraphics graphics = page.Graphics;
            //Create a new PDF font instance.
            PdfFont font = new PdfStandardFont(PdfFontFamily.Helvetica, 12);     
            PdfStringFormat format = new Syncfusion.Office.PdfStringFormat();
            format.Alignment = PdfTextAlignment.Center;
            format.LineAlignment = PdfVerticalAlignment.Middle;
            string text = "Hello World!";
            //Measure the text.
            SizeF size = font.MeasureString(text, 100,  format);
            //Draw string to PDF page.
            graphics.DrawString(text, font, PdfBrushes.Black, new RectangleF(PointF.Empty, size), format);
            //Save the document.
            document.Save("Output.pdf");
            //Close the document.
            document.Close(true);
            </code>
            <code lang="VB">
            'Create a new PDF document.
            Dim document As New PdfDocument()
            'Add a page to the document.
            Dim page As PdfPage = document.Pages.Add()
            'Create PDF graphics for the page.
            Dim graphics As PdfGraphics = page.Graphics
            'Create a new PDF font instance.
            Dim font As PdfFont = New PdfStandardFont(PdfFontFamily.Helvetica, 12)
            Dim format As PdfStringFormat = New Syncfusion.Office.PdfStringFormat()
            format.Alignment = PdfTextAlignment.Center
            format.LineAlignment = PdfVerticalAlignment.Middle
            Dim text As String = "Hello World!"
            'Measure the text.
            Dim size As SizeF = font.MeasureString(text, 100, format)
            'Draw string to PDF page.
            graphics.DrawString(text, font, PdfBrushes.Black, New RectangleF(PointF.Empty, size), format)
            'Save the document.
            document.Save("Output.pdf")
            'Close the document.
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Office.Font.MeasureString(System.String,System.Single,Syncfusion.Office.TrueTypeFontStringFormat,System.Int32@,System.Int32@)">
            <summary>
            Measures a string by using this font.
            </summary>
            <param name="text">String to measure.</param>
            <param name="width">Maximum width of the string in points.</param>
            <param name="format">PdfStringFormat that represents formatting information, such as line spacing, for the string.</param>
            <param name="charactersFitted">Number of characters in the string.</param>
            <param name="linesFilled">Number of text lines in the string.</param>
            <returns>Size of the text.</returns>
            <example> 
            <code lang="C#">
            //Create a new PDF document.
            PdfDocument document = new PdfDocument();
            //Add a page to the document.
            PdfPage page = document.Pages.Add();
            //Create PDF graphics for the page.
            PdfGraphics graphics = page.Graphics;
            //Create a new PDF font instance.
            PdfFont font = new PdfStandardFont(PdfFontFamily.Helvetica, 12);     
            PdfStringFormat format = new Syncfusion.Office.PdfStringFormat();
            format.Alignment = PdfTextAlignment.Center;
            format.LineAlignment = PdfVerticalAlignment.Middle;
            string text = "Hello World!";
            int charactersFilled, linesFilled;
            //Measure the text.
            SizeF size = font.MeasureString(text, format, 100, out charactersFilled, linesFilled);
            //Draw string to PDF page.
            graphics.DrawString(text, font, PdfBrushes.Black, new RectangleF(PointF.Empty, size), format);
            //Save the document.
            document.Save("Output.pdf");
            //Close the document.
            document.Close(true);
            </code>
            <code lang="VB">
            'Create a new PDF document.
            Dim document As New PdfDocument()
            'Add a page to the document.
            Dim page As PdfPage = document.Pages.Add()
            'Create PDF graphics for the page.
            Dim graphics As PdfGraphics = page.Graphics
            'Create a new PDF font instance.
            Dim font As PdfFont = New PdfStandardFont(PdfFontFamily.Helvetica, 12)
            Dim format As PdfStringFormat = New Syncfusion.Office.PdfStringFormat()
            format.Alignment = PdfTextAlignment.Center
            format.LineAlignment = PdfVerticalAlignment.Middle
            Dim text As String = "Hello World!"
            Dim charactersFilled As Integer, linesFilled As Integer
            'Measure the text.
            Dim size As SizeF = font.MeasureString(text, 100, format, charactersFilled, linesFilled)
            'Draw string to PDF page.
            graphics.DrawString(text, font, PdfBrushes.Black, New RectangleF(PointF.Empty, size), format)
            'Save the document.
            document.Save("Output.pdf")
            'Close the document.
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Office.Font.MeasureString(System.String,Syncfusion.Drawing.SizeF)">
            <summary>
            Measures a string by using this font.
            </summary>
            <param name="text">String to measure.</param>
            <param name="layoutArea">SizeF structure that specifies the maximum layout area for the text in points.</param>
            <returns>Size of the text.</returns>
            <example> 
            <code lang="C#">
            //Create a new PDF document.
            PdfDocument document = new PdfDocument();
            //Add a page to the document.
            PdfPage page = document.Pages.Add();
            //Create PDF graphics for the page.
            PdfGraphics graphics = page.Graphics;
            //Create a new PDF font instance.
            PdfFont font = new PdfStandardFont(PdfFontFamily.Helvetica, 12);     
            PdfStringFormat format = new Syncfusion.Office.PdfStringFormat();
            format.Alignment = PdfTextAlignment.Center;
            format.LineAlignment = PdfVerticalAlignment.Middle;
            string text = "Hello World!";      
            //Measure the text.
            SizeF size = font.MeasureString(text, new SizeF(100,100));
            //Draw string to PDF page.
            graphics.DrawString(text, font, PdfBrushes.Black, new RectangleF(PointF.Empty, size), format);
            //Save the document.
            document.Save("Output.pdf");
            //Close the document.
            document.Close(true);
            </code>
            <code lang="VB">
            'Create a new PDF document.
            Dim document As New PdfDocument()
            'Add a page to the document.
            Dim page As PdfPage = document.Pages.Add()
            'Create PDF graphics for the page.
            Dim graphics As PdfGraphics = page.Graphics
            'Create a new PDF font instance.
            Dim font As PdfFont = New PdfStandardFont(PdfFontFamily.Helvetica, 12)
            Dim format As PdfStringFormat = New Syncfusion.Office.PdfStringFormat()
            format.Alignment = PdfTextAlignment.Center
            format.LineAlignment = PdfVerticalAlignment.Middle
            Dim text As String = "Hello World!"        
            'Measure the text.
            Dim size As SizeF = font.MeasureString(text, New SizeF(100,100))
            'Draw string to PDF page.
            graphics.DrawString(text, font, PdfBrushes.Black, New RectangleF(PointF.Empty, size), format)
            'Save the document.
            document.Save("Output.pdf")
            'Close the document.
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Office.Font.MeasureString(System.String,Syncfusion.Drawing.SizeF,Syncfusion.Office.TrueTypeFontStringFormat)">
            <summary>
            Measures a string by using this font.
            </summary>
            <param name="text">String to measure.</param>
            <param name="layoutArea">SizeF structure that specifies the maximum layout area for the text in points.</param>
            <param name="format">PdfStringFormat that represents formatting information, such as line spacing, for the string.</param>
            <returns>Size of the text.</returns>
            <example> 
            <code lang="C#">
            //Create a new PDF document.
            PdfDocument document = new PdfDocument();
            //Add a page to the document.
            PdfPage page = document.Pages.Add();
            //Create PDF graphics for the page.
            PdfGraphics graphics = page.Graphics;
            //Create a new PDF font instance.
            PdfFont font = new PdfStandardFont(PdfFontFamily.Helvetica, 12);     
            PdfStringFormat format = new Syncfusion.Office.PdfStringFormat();
            format.Alignment = PdfTextAlignment.Center;
            format.LineAlignment = PdfVerticalAlignment.Middle;
            string text = "Hello World!";       
            //Measure the text.
            SizeF size = font.MeasureString(text, new SizeF(100,100) , format);
            //Draw string to PDF page.
            graphics.DrawString(text, font, PdfBrushes.Black, new RectangleF(PointF.Empty, size), format);
            //Save the document.
            document.Save("Output.pdf");
            //Close the document.
            document.Close(true);
            </code>
            <code lang="VB">
            'Create a new PDF document.
            Dim document As New PdfDocument()
            'Add a page to the document.
            Dim page As PdfPage = document.Pages.Add()
            'Create PDF graphics for the page.
            Dim graphics As PdfGraphics = page.Graphics
            'Create a new PDF font instance.
            Dim font As PdfFont = New PdfStandardFont(PdfFontFamily.Helvetica, 12)
            Dim format As PdfStringFormat = New Syncfusion.Office.PdfStringFormat()
            format.Alignment = PdfTextAlignment.Center
            format.LineAlignment = PdfVerticalAlignment.Middle
            Dim text As String = "Hello World!" 
            'Measure the text.
            Dim size As SizeF = font.MeasureString(text, New SizeF(100,100), format)
            'Draw string to PDF page.
            graphics.DrawString(text, font, PdfBrushes.Black, New RectangleF(PointF.Empty, size), format)
            'Save the document.
            document.Save("Output.pdf")
            'Close the document.
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Office.Font.MeasureString(System.String,Syncfusion.Drawing.SizeF,Syncfusion.Office.TrueTypeFontStringFormat,System.Int32@,System.Int32@)">
            <summary>
            Measures a string by using this font.
            </summary>
            <param name="text">String to measure.</param>
            <param name="layoutArea">SizeF structure that specifies the maximum layout area for the text in points.</param>
            <param name="format">PdfStringFormat that represents formatting information, such as line spacing, for the string.</param>
            <param name="charactersFitted">Number of characters in the string.</param>
            <param name="linesFilled">Number of text lines in the string.</param>
            <returns>Size of the text.</returns>
            <example> 
            <code lang="C#">
            //Create a new PDF document.
            PdfDocument document = new PdfDocument();
            //Add a page to the document.
            PdfPage page = document.Pages.Add();
            //Create PDF graphics for the page.
            PdfGraphics graphics = page.Graphics;
            //Create a new PDF font instance.
            PdfFont font = new PdfStandardFont(PdfFontFamily.Helvetica, 12);     
            PdfStringFormat format = new Syncfusion.Office.PdfStringFormat();
            format.Alignment = PdfTextAlignment.Center;
            format.LineAlignment = PdfVerticalAlignment.Middle;
            string text = "Hello World!";
            int charactersFilled, linesFilled;
            //Measure the text.
            SizeF size = font.MeasureString(text, new SizeF(100, 100), format , out charactersFilled, linesFilled);
            //Draw string to PDF page.
            graphics.DrawString(text, font, PdfBrushes.Black, new RectangleF(PointF.Empty, size), format);
            //Save the document.
            document.Save("Output.pdf");
            //Close the document.
            document.Close(true);
            </code>
            <code lang="VB">
            'Create a new PDF document.
            Dim document As New PdfDocument()
            'Add a page to the document.
            Dim page As PdfPage = document.Pages.Add()
            'Create PDF graphics for the page.
            Dim graphics As PdfGraphics = page.Graphics
            'Create a new PDF font instance.
            Dim font As PdfFont = New PdfStandardFont(PdfFontFamily.Helvetica, 12)
            Dim format As PdfStringFormat = New Syncfusion.Office.PdfStringFormat()
            format.Alignment = PdfTextAlignment.Center
            format.LineAlignment = PdfVerticalAlignment.Middle
            Dim text As String = "Hello World!"
            Dim charactersFilled As Integer, linesFilled As Integer
            'Measure the text.
            Dim size As SizeF = font.MeasureString(text, New SizeF(100,100), format, charactersFilled, linesFilled)
            'Draw string to PDF page.
            graphics.DrawString(text, font, PdfBrushes.Black, New RectangleF(PointF.Empty, size), format)
            'Save the document.
            document.Save("Output.pdf")
            'Close the document.
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Office.Font.MeasureString(System.String,Syncfusion.Drawing.SizeF,Syncfusion.Office.TrueTypeFontStringFormat,Syncfusion.Office.StringLayoutResult@)">
            <summary>
             Measures a string by using this font and it returns layout result.
            </summary>
            <param name="text"></param>
            <param name="layoutArea"></param>
            <param name="format"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Office.Font.Syncfusion#Office#ITrueTypeFontWrapper#Element">
            <summary>
            Gets Pdf primitive representing the font.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.Font.Syncfusion#Office#ITrueTypeFontCache#EqualsTo(Syncfusion.Office.ITrueTypeFontCache)">
            <summary>
            Checks whether the object is similar to another object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>True - if the objects have equal internals and can share them, False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Office.Font.Syncfusion#Office#ITrueTypeFontCache#GetInternals">
            <summary>
            Returns internals of the object.
            </summary>
            <returns>Returns internals of the object.</returns>
        </member>
        <member name="M:Syncfusion.Office.Font.Syncfusion#Office#ITrueTypeFontCache#SetInternals(Syncfusion.Office.ITrueTypeFontPrimitive)">
            <summary>
            Sets internals to the object.
            </summary>
            <param name="internals">Internals of the object.</param>
        </member>
        <member name="M:Syncfusion.Office.Font.EqualsToFont(Syncfusion.Office.Font)">
            <summary>
            Checks whether fonts are equals.
            </summary>
            <param name="font">Font to compare.</param>
            <returns>True if fonts are equal, False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Office.Font.GetCharWidth(System.Char,Syncfusion.Office.TrueTypeFontStringFormat)">
            <summary>
            Returns width of the char.
            </summary>
            <param name="charCode">Char symbol.</param>
            <param name="format">String format.</param>
            <returns>Width of the symbol.</returns>
        </member>
        <member name="M:Syncfusion.Office.Font.GetLineWidth(System.String,Syncfusion.Office.TrueTypeFontStringFormat)">
            <summary>
            Returns width of the line.
            </summary>
            <param name="line">Text line.</param>
            <param name="format">String format.</param>
            <returns>Width of the line.</returns>
        </member>
        <member name="M:Syncfusion.Office.Font.SetStyle(Syncfusion.Office.TTFFontStyle)">
            <summary>
            Sets the style.
            </summary>
            <param name="style">The style.</param>
        </member>
        <member name="M:Syncfusion.Office.Font.ApplyFormatSettings(System.String,Syncfusion.Office.TrueTypeFontStringFormat,System.Single)">
            <summary>
            Applies settings to the default line width.
            </summary>
            <param name="line">Text line.</param>
            <param name="format">String format.</param>
            <param name="width">Default line width.</param>
            <returns>Line width with settings applied.</returns>
        </member>
        <member name="T:Syncfusion.Office.TrueTypeFontMetrics">
            <summary>
            Metrics of the font.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TrueTypeFontMetrics.Ascent">
            <summary>
            Gets ascent of the font.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TrueTypeFontMetrics.Descent">
            <summary>
            Gets descent of the font.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TrueTypeFontMetrics.UnitPerEM">
            <summary>
            Gets descent of the font.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TrueTypeFontMetrics.Leading">
            <summary>
            Gets Leading of the font.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TrueTypeFontMetrics.Name">
            <summary>
            Name of the font.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TrueTypeFontMetrics.PostScriptName">
            <summary>
            Gets PostScript Name of the  font.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TrueTypeFontMetrics.Size">
            <summary>
            Gets size of the font.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TrueTypeFontMetrics.Height">
            <summary>
            Gets height of the font.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TrueTypeFontMetrics.FirstChar">
            <summary>
            First char of the font.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TrueTypeFontMetrics.LastChar">
            <summary>
            Last char of the font.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TrueTypeFontMetrics.LineGap">
            <summary>
            Line gap.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TrueTypeFontMetrics.SubScriptSizeFactor">
            <summary>
            Subscript size factor.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TrueTypeFontMetrics.SuperscriptSizeFactor">
            <summary>
            Superscript size factor.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TrueTypeFontMetrics.m_widthTable">
            <summary>
            Gets table of glyphs' width.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TrueTypeFontMetrics.IsBold">
            <summary>
            Indicate whether the ttfreader font has bold style.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFontMetrics.GetAscent(Syncfusion.Office.TrueTypeFontStringFormat)">
            <summary>
            Returns ascent taking into consideration font's size.
            </summary>
            <param name="format">Text format settings.</param>
            <returns>Returns ascent taking into consideration font's size.</returns>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFontMetrics.GetLeading(Syncfusion.Office.TrueTypeFontStringFormat)">
            <summary>
            Returns leading taking into consideration font's size.
            </summary>
            <param name="format">Text format settings.</param>
            <returns>Returns ascent taking into consideration font's size.</returns>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFontMetrics.GetDescent(Syncfusion.Office.TrueTypeFontStringFormat)">
            <summary>
            Returns descent taking into consideration font's size.
            </summary>
            <param name="format">Text format settings.</param>
            <returns>Returns descent taking into consideration font's size.</returns>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFontMetrics.GetLineGap(Syncfusion.Office.TrueTypeFontStringFormat)">
            <summary>
            Returns Line gap taking into consideration font's size.
            </summary>
            <param name="format">Text format settings.</param>
            <returns>Returns line gap taking into consideration font's size.</returns>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFontMetrics.GetHeight(Syncfusion.Office.TrueTypeFontStringFormat)">
            <summary>
            Returns height taking into consideration font's size.
            </summary>
            <param name="format">Text format settings.</param>
            <returns>Returns height taking into consideration font's size.</returns>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFontMetrics.GetSize(Syncfusion.Office.TrueTypeFontStringFormat)">
            <summary>
            Calculates size of the font depending on the subscript/superscript value.
            </summary>
            <param name="format">Text format settings.</param>
            <returns>Size of the font depending on the subscript/superscript value.</returns>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFontMetrics.Clone">
            <summary>
            Clones the metrics.
            </summary>
            <returns>Cloned metrics.</returns>
        </member>
        <member name="P:Syncfusion.Office.TrueTypeFontMetrics.WidthTable">
            <summary>
            Gets or sets the width table.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.WidthTable">
            <summary>
            The base class for a width table.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.WidthTable.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:System.Int32"/> at the specified index.
            </summary>
            <value>index</value>
        </member>
        <member name="M:Syncfusion.Office.WidthTable.Clone">
            <summary>
            Clones this instance of the WidthTable class.
            </summary>
            <returns>A copy of this WidthTable instance.</returns>
        </member>
        <member name="M:Syncfusion.Office.WidthTable.Syncfusion#Office#ICloneable#Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="T:Syncfusion.Office.StandardWidthTable">
            <summary>
            Implements a width table for standard fonts.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.StandardWidthTable.m_widths">
            <summary>
            The widths of the supported characters.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.StandardWidthTable.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:System.Int32"/> at the specified index.
            </summary>
            <value>index</value>
        </member>
        <member name="P:Syncfusion.Office.StandardWidthTable.Length">
            <summary>
            Gets the length of the internal array.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.StandardWidthTable.#ctor(System.Int32[])">
            <summary>
            Initializes a new instance of the <see cref="T:StandardWidthTable"/> class.
            </summary>
            <param name="widths">The widths table.</param>
        </member>
        <member name="M:Syncfusion.Office.StandardWidthTable.Clone">
            <summary>
            Clones this instance of the WidthTable class.
            </summary>
            <returns>A copy of this WidthTable instance.</returns>
        </member>
        <member name="F:Syncfusion.Office.TrueTypeFontStream.m_clonedObject">
            <summary>
            Internal variable to hold cloned object.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.TrueTypeFontStream.InternalStream">
            <summary>
            Gets the internal stream.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.TrueTypeFontStream.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <remarks>The modifications of the returned stream
            have no impact on the real data.</remarks>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFontStream.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PdfStream"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFontStream.StreamToBytes(System.IO.Stream)">
            <summary>
            Gets bytes of the stream.
            </summary>
            <param name="stream">Stream to be converted.</param>
            <returns>Destination bytes.</returns>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFontStream.StreamToBytes(System.IO.Stream,System.Boolean)">
            <summary>
            Gets bytes of the stream.
            </summary>
            <param name="stream">Stream to be converted.</param>
            <param name="writeWholeStream">Indicates whether to write the whole stream.</param>
            <returns>Destination bytes.</returns>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFontStream.StreamToBigEndian(System.IO.Stream)">
            <summary>
            Converts a stream to bigendian format.
            </summary>
            <param name="stream">A stream containing data.</param>
            <returns>A stream in bigendian format.</returns>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFontStream.Write(System.Char)">
            <summary>
            Writes the specified symbol.
            </summary>
            <param name="symbol">The symbol.</param>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFontStream.Write(System.String)">
            <summary>
            Writes the specified text.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFontStream.Write(System.Byte[])">
            <summary>
            Writes the specified data.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFontStream.BlockEncryption">
            <summary>
            Blocks the encryption.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFontStream.HexToDecimalConversion(System.Char)">
            <summary>
            Hex to Decimal conversion
            </summary>
            <param name="hex">Hex character to convert into Decimal</param>
            <returns>Equivalent decimal value</returns>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFontStream.Decode(System.Byte[])">
            <summary>
            Decode hex stream to decimal equivalent
            </summary>
            <param name="inputData">hexadecimal byte stream</param>
            <returns>decimal equivalent for the hexadecimal byte stream</returns>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFontStream.Clear">
            <summary>
            Cleares a stream.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFontStream.Dispose">
            <summary>
            Dispose the stream data.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.TrueTypeFontStream.WasEncrypted">
            <summary>
            Gets a value indicating whether the object was encrypted.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.TrueTypeFontStream.Decrypted">
            <summary>
            Gets a value indicating whether this <see cref="T:Syncfusion.Office.TrueTypeFontStream"/> is decrypted.
            </summary>
            <value><c>true</c> if decrypted; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Syncfusion.Office.TrueTypeFontStringFormat">
            <summary>
            Represents the text layout information on PDF
            </summary>
            <example> 
            <code lang="C#">
            //Create a new PDF document.
            PdfDocument document = new PdfDocument();
            //Add a page to the document.
            PdfPage page = document.Pages.Add();
            //Create PDF graphics for the page.
            PdfGraphics graphics = page.Graphics;
            //Create a new PDF font instance.
            PdfFont font = new PdfStandardFont(PdfFontFamily.Helvetica, 12);
            //Create a new PDF string format instance.
            PdfStringFormat format = new PdfStringFormat();
            //Set the text alignment.
            format.Alignment = PdfTextAlignment.Center;
            //Draw string to PDF page.
            graphics.DrawString("Hello World!", font, PdfBrushes.Black, new RectangleF(0, 0, 200, 100), format);
            //Save the document.
            document.Save("Output.pdf");
            //Close the document.
            document.Close(true);
            </code>
            <code lang="VB">
            'Create a new PDF document.
            Dim document As New PdfDocument()
            'Add a page to the document.
            Dim page As PdfPage = document.Pages.Add()
            'Create PDF graphics for the page.
            Dim graphics As PdfGraphics = page.Graphics
            'Create a new PDF font instance.
            Dim font As PdfFont = New PdfStandardFont(PdfFontFamily.Helvetica, 12)
            'Create a new PDF string format instance.
            Dim format As PdfStringFormat = New PdfStringFormat()
            'Set the text alignment.
            format.Alignment = PdfTextAlignment.Center
            'Draw string to PDF page.
            graphics.DrawString("Hello World!", font, PdfBrushes.Black, New RectangleF(0, 0, 200, 100), format);
            'Save the document.
            document.Save("Output.pdf")
            'Close the document.
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.Office.TrueTypeFontStringFormat.m_alignment">
            <summary>
            Horizontal text alignment.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TrueTypeFontStringFormat.m_lineAlignment">
            <summary>
            Vertical text alignment.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TrueTypeFontStringFormat.m_rightToLeft">
            <summary>
            Indicates whether RTL should be checked.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TrueTypeFontStringFormat.m_characterSpacing">
            <summary>
            Character spacing value.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TrueTypeFontStringFormat.m_wordSpacing">
            <summary>
            Word spacing value.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TrueTypeFontStringFormat.m_leading">
            <summary>
            Text leading.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TrueTypeFontStringFormat.m_clip">
            <summary>
            Shows if the text should be a part of the current clipping path.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TrueTypeFontStringFormat.m_scalingFactor">
            <summary>
            The scaling factor of the text being drawn.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TrueTypeFontStringFormat.m_firstLineIndent">
            <summary>
            Indent of the first line in the text.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TrueTypeFontStringFormat.m_paragraphIndent">
            <summary>
            Indent of the first line in the paragraph.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TrueTypeFontStringFormat.m_lineLimit">
            <summary>
            Indicates whether entire lines are laid out in the formatting rectangle only or not.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TrueTypeFontStringFormat.m_measureTrailingSpaces">
            <summary>
            Indicates whether spaces at the end of the line should be left or removed.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TrueTypeFontStringFormat.m_noClip">
            <summary>
            Indicates whether the text region should be clipped or not.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TrueTypeFontStringFormat.isCustomRendering">
            <summary>
            Indicates text wrapping type.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TrueTypeFontStringFormat.m_complexScript">
            <summary>
            Indicates whether the text layout is complex script.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TrueTypeFontStringFormat.m_baseLine">
            <summary>
            Indicates line baseline
            </summary>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFontStringFormat.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Office.TrueTypeFontStringFormat"/> class.
            </summary>
            <example> 
            <code lang="C#">
            //Create a new PDF document.
            PdfDocument document = new PdfDocument();
            //Add a page to the document.
            PdfPage page = document.Pages.Add();
            //Create PDF graphics for the page.
            PdfGraphics graphics = page.Graphics;
            //Create a new PDF font instance.
            PdfFont font = new PdfStandardFont(PdfFontFamily.Helvetica, 12);
            //Create a new PDF string format instance.
            PdfStringFormat format = new PdfStringFormat();
            //Set the text alignment.
            format.Alignment = PdfTextAlignment.Center;
            //Draw string to PDF page.
            graphics.DrawString("Hello World!", font, PdfBrushes.Black, new RectangleF(0, 0, 200, 100), format);
            //Save the document.
            document.Save("Output.pdf");
            //Close the document.
            document.Close(true);
            </code>
            <code lang="VB">
            'Create a new PDF document.
            Dim document As New PdfDocument()
            'Add a page to the document.
            Dim page As PdfPage = document.Pages.Add()
            'Create PDF graphics for the page.
            Dim graphics As PdfGraphics = page.Graphics
            'Create a new PDF font instance.
            Dim font As PdfFont = New PdfStandardFont(PdfFontFamily.Helvetica, 12)
            'Create a new PDF string format instance.
            Dim format As PdfStringFormat = New PdfStringFormat()
            'Set the text alignment.
            format.Alignment = PdfTextAlignment.Center
            'Draw string to PDF page.
            graphics.DrawString("Hello World!", font, PdfBrushes.Black, New RectangleF(0, 0, 200, 100), format);
            'Save the document.
            document.Save("Output.pdf")
            'Close the document.
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFontStringFormat.#ctor(Syncfusion.Office.TextAlignment)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Office.TrueTypeFontStringFormat"/> class with horizontal alignment of a text
            </summary>
            <param name="alignment">The <see cref="!:PdfTextAlignment"/> represents the horizontal alignment of a text in PDF .</param>
            <example> 
            <code lang="C#">
            //Create a new PDF document.
            PdfDocument document = new PdfDocument();
            //Add a page to the document.
            PdfPage page = document.Pages.Add();
            //Create PDF graphics for the page.
            PdfGraphics graphics = page.Graphics;
            //Create a new PDF font instance.
            PdfFont font = new PdfStandardFont(PdfFontFamily.Helvetica, 12);
            //Create a new PDF string format instance.
            PdfStringFormat format = new PdfStringFormat(PdfTextAlignment.Center);     
            //Draw string to PDF page.
            graphics.DrawString("Hello World!", font, PdfBrushes.Black, new RectangleF(0, 0, 200, 100), format);
            //Save the document.
            document.Save("Output.pdf");
            //Close the document.
            document.Close(true);
            </code>
            <code lang="VB">
            'Create a new PDF document.
            Dim document As New PdfDocument()
            'Add a page to the document.
            Dim page As PdfPage = document.Pages.Add()
            'Create PDF graphics for the page.
            Dim graphics As PdfGraphics = page.Graphics
            'Create a new PDF font instance.
            Dim font As PdfFont = New PdfStandardFont(PdfFontFamily.Helvetica, 12)
            'Create a new PDF string format instance.
            Dim format As PdfStringFormat = New PdfStringFormat(PdfTextAlignment.Center)     
            'Draw string to PDF page.
            graphics.DrawString("Hello World!", font, PdfBrushes.Black, New RectangleF(0, 0, 200, 100), format);
            'Save the document.
            document.Save("Output.pdf")
            'Close the document.
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFontStringFormat.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Office.TrueTypeFontStringFormat"/> class with column format
            </summary>
            <param name="columnFormat">The column format.</param>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFontStringFormat.#ctor(Syncfusion.Office.TextAlignment,Syncfusion.Office.VerticalAlignment)">
            <summary>Initializes a new instance of the <see cref="T:Syncfusion.Office.TrueTypeFontStringFormat"/> class with horizontal and vertical alignment</summary>
            <param name="alignment">The <see cref="!:PdfTextAlignment"/> represents the horizontal alignment of a text in PDF .</param>
            <param name="lineAlignment">The <see cref="!:PdfVerticalAlignment"/> represents the vertical alignment of a text in PDF</param>
            <example> 
            <code lang="C#">
            //Create a new PDF document.
            PdfDocument document = new PdfDocument();
            //Add a page to the document.
            PdfPage page = document.Pages.Add();
            //Create PDF graphics for the page.
            PdfGraphics graphics = page.Graphics;
            //Create a new PDF font instance.
            PdfFont font = new PdfStandardFont(PdfFontFamily.Helvetica, 12);
            //Create a new PDF string format instance.
            PdfStringFormat format = new PdfStringFormat(PdfTextAlignment.Center, PdfVerticalAlignment.Middle);       
            //Draw string to PDF page.
            graphics.DrawString("Hello World!", font, PdfBrushes.Black, new RectangleF(0, 0, 200, 100), format);
            //Save the document.
            document.Save("Output.pdf");
            //Close the document.
            document.Close(true);
            </code>
            <code lang="VB">
            'Create a new PDF document.
            Dim document As New PdfDocument()
            'Add a page to the document.
            Dim page As PdfPage = document.Pages.Add()
            'Create PDF graphics for the page.
            Dim graphics As PdfGraphics = page.Graphics
            'Create a new PDF font instance.
            Dim font As PdfFont = New PdfStandardFont(PdfFontFamily.Helvetica, 12)
            'Create a new PDF string format instance.
            Dim format As PdfStringFormat = New PdfStringFormat(PdfTextAlignment.Center, PdfVerticalAlignment.Middle)    
            'Draw string to PDF page.
            graphics.DrawString("Hello World!", font, PdfBrushes.Black, New RectangleF(0, 0, 200, 100), format);
            'Save the document.
            document.Save("Output.pdf")
            'Close the document.
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.Office.TrueTypeFontStringFormat.TextDirection">
            <summary>
            Gets or sets the value that indicates text direction.
            </summary>       
            <example> 
            <code lang="C#">
            //Create a new PDF document.
            PdfDocument document = new PdfDocument();
            //Add a page to the document.
            PdfPage page = document.Pages.Add();
            //Create PDF graphics for the page.
            PdfGraphics graphics = page.Graphics;
            //Create a new PDF font instance.
            PdfFont font = new PdfStandardFont(PdfFontFamily.Helvetica, 12);
            //Create a new PDF string format instance.
            PdfStringFormat format = new PdfStringFormat();
            //Set the text alignment.
            format.Alignment = PdfTextAlignment.Center;
            //Set the line alignment.
            format.LineAlignment = PdfVerticalAlignment.Middle;       
            format.TextDirection = PdfTextDirection.RightToLeft;       
            //Draw string to PDF page.
            graphics.DrawString("Hello World!", font, PdfBrushes.Black, new RectangleF(0, 0, 200, 100), format);
            //Save the document.
            document.Save("Output.pdf");
            //Close the document.
            document.Close(true);
            </code>
            <code lang="VB">
            'Create a new PDF document.
            Dim document As New PdfDocument()
            'Add a page to the document.
            Dim page As PdfPage = document.Pages.Add()
            'Create PDF graphics for the page.
            Dim graphics As PdfGraphics = page.Graphics
            'Create a new PDF font instance.
            Dim font As PdfFont = New PdfStandardFont(PdfFontFamily.Helvetica, 12)
            'Create a new PDF string format instance.
            Dim format As PdfStringFormat = New PdfStringFormat()
            'Set the text alignment.
            format.Alignment = PdfTextAlignment.Center
            'Set the line alignment.
            format.LineAlignment = PdfVerticalAlignment.Middle;       
            'Set right to left.
            format.TextDirection = PdfTextDirection.RightToLeft       
            'Draw string to PDF page.
            graphics.DrawString("Hello World!", font, PdfBrushes.Black, New RectangleF(0, 0, 200, 100), format);
            'Save the document.
            document.Save("Output.pdf")
            'Close the document.
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.Office.TrueTypeFontStringFormat.ComplexScript">
            <summary>
            Gets or sets the complex text layout rendering.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.TrueTypeFontStringFormat.Alignment">
            <summary>
            Gets or sets the horizontal text alignment
            </summary>
            <value>The <see cref="!:PdfTextAlignment"/> represents the horizontal alignment of a text in PDF </value>
            <remarks >Default value: PdfTextAlignment.Left </remarks>
            <example> 
            <code lang="C#">
            //Create a new PDF document.
            PdfDocument document = new PdfDocument();
            //Add a page to the document.
            PdfPage page = document.Pages.Add();
            //Create PDF graphics for the page.
            PdfGraphics graphics = page.Graphics;
            //Create a new PDF font instance.
            PdfFont font = new PdfStandardFont(PdfFontFamily.Helvetica, 12);
            //Create a new PDF string format instance.
            PdfStringFormat format = new PdfStringFormat();
            //Set the text alignment.
            format.Alignment = PdfTextAlignment.Center;
            //Draw string to PDF page.
            graphics.DrawString("Hello World!", font, PdfBrushes.Black, new RectangleF(0, 0, 200, 100), format);
            //Save the document.
            document.Save("Output.pdf");
            //Close the document.
            document.Close(true);
            </code>
            <code lang="VB">
            'Create a new PDF document.
            Dim document As New PdfDocument()
            'Add a page to the document.
            Dim page As PdfPage = document.Pages.Add()
            'Create PDF graphics for the page.
            Dim graphics As PdfGraphics = page.Graphics
            'Create a new PDF font instance.
            Dim font As PdfFont = New PdfStandardFont(PdfFontFamily.Helvetica, 12)
            'Create a new PDF string format instance.
            Dim format As PdfStringFormat = New PdfStringFormat()
            'Set the text alignment.
            format.Alignment = PdfTextAlignment.Center
            'Draw string to PDF page.
            graphics.DrawString("Hello World!", font, PdfBrushes.Black, New RectangleF(0, 0, 200, 100), format);
            'Save the document.
            document.Save("Output.pdf")
            'Close the document.
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.Office.TrueTypeFontStringFormat.LineAlignment">
            <summary>
            Gets or sets the vertical text alignment.
            </summary>
            <value>The <see cref="!:PdfVerticalAlignment"/> represents the vertical alignment of a text in PDF </value>
            <remarks > Default Value: PdfVerticalAlignment.Top </remarks>
            <example> 
            <code lang="C#">
            //Create a new PDF document.
            PdfDocument document = new PdfDocument();
            //Add a page to the document.
            PdfPage page = document.Pages.Add();
            //Create PDF graphics for the page.
            PdfGraphics graphics = page.Graphics;
            //Create a new PDF font instance.
            PdfFont font = new PdfStandardFont(PdfFontFamily.Helvetica, 12);
            //Create a new PDF string format instance.
            PdfStringFormat format = new PdfStringFormat();
            //Set the text alignment.
            format.Alignment = PdfTextAlignment.Center;
            //Set the line alignment.
            format.LineAlignment = PdfVerticalAlignment.Middle;
            //Draw string to PDF page.
            graphics.DrawString("Hello World!", font, PdfBrushes.Black, new RectangleF(0, 0, 200, 100), format);
            //Save the document.
            document.Save("Output.pdf");
            //Close the document.
            document.Close(true);
            </code>
            <code lang="VB">
            'Create a new PDF document.
            Dim document As New PdfDocument()
            'Add a page to the document.
            Dim page As PdfPage = document.Pages.Add()
            'Create PDF graphics for the page.
            Dim graphics As PdfGraphics = page.Graphics
            'Create a new PDF font instance.
            Dim font As PdfFont = New PdfStandardFont(PdfFontFamily.Helvetica, 12)
            'Create a new PDF string format instance.
            Dim format As PdfStringFormat = New PdfStringFormat()
            'Set the text alignment.
            format.Alignment = PdfTextAlignment.Center
            'Set the line alignment.
            format.LineAlignment = PdfVerticalAlignment.Middle;
            'Draw string to PDF page.
            graphics.DrawString("Hello World!", font, PdfBrushes.Black, New RectangleF(0, 0, 200, 100), format);
            'Save the document.
            document.Save("Output.pdf")
            'Close the document.
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.Office.TrueTypeFontStringFormat.EnableBaseline">
            <summary>
            Gets or sets the baseline for line alignment.
            </summary>
            <example> 
            <code lang="C#">
            //Create a new PDF document.
            PdfDocument document = new PdfDocument();
            //Add a page to the document.
            PdfPage page = document.Pages.Add();
            //Create PDF graphics for the page.
            PdfGraphics graphics = page.Graphics;
            //Create a new PDF font instance.
            PdfFont font = new PdfTrueTypeFont(new Font("Tahoma",8), 8);
            PdfFont font1 = new PdfTrueTypeFont(new Font("Calibri",20), 20);
            PdfFont font2 = new PdfStandardFont(PdfFontFamily.Helvetica,16);
            PdfFont font3 = new PdfTrueTypeFont(new Font("Arial",25), 25);
            //Create a new PDF string format instance.
            PdfStringFormat format = new PdfStringFormat();           
            //Set the line alignment.
            format.LineAlignment = PdfVerticalAlignment.Bottom;
            //Set baseline for line alignment
            format.EnableBaseline = true;
            //Draw string to PDF page.
            graphics.DrawString("Hello World!", font, PdfBrushes.Black, new PointF(0, 50), format);
            graphics.DrawString("Hello World!", font1, PdfBrushes.Black, new PointF(65, 50), format);
            graphics.DrawString("Hello World!", font2, PdfBrushes.Black, new PointF(220, 50), format);
            graphics.DrawString("Hello World!", font3, PdfBrushes.Black, new PointF(320, 50), format);
            //Save the document.
            document.Save("Output.pdf");
            //Close the document.
            document.Close(true);
            </code>
            <code lang="VB">
            'Create a new PDF document.
            Dim document As New PdfDocument()
            'Add a page to the document.
            Dim page As PdfPage = document.Pages.Add()
            'Create PDF graphics for the page.
            Dim graphics As PdfGraphics = page.Graphics
            'Create a new PDF font instance.
            Dim font As PdfFont = New PdfTrueTypeFont(new Font("Tahoma",8), 8);
            Dim font1 As PdfFont = New PdfTrueTypeFont(new Font("Calibri",20), 20);
            Dim font2 As PdfFont = New PdfStandardFont(PdfFontFamily.Helvetica,16);
            Dim font3 As PdfFont = New PdfTrueTypeFont(new Font("Arial",25), 25);
            'Create a new PDF string format instance.
            Dim format As PdfStringFormat = New PdfStringFormat()
            'Set the line alignment.
            format.LineAlignment = PdfVerticalAlignment.Bottom;
            'Set baseline for line alignment
            format.EnableBaseline = true;
            'Draw string to PDF page.
            graphics.DrawString("Hello World!", font, PdfBrushes.Black, New PointF(0, 50), format);
            graphics.DrawString("Hello World!", font1, PdfBrushes.Black, New PointF(65, 50), format);
            graphics.DrawString("Hello World!", font2, PdfBrushes.Black, New PointF(220, 50), format);
            graphics.DrawString("Hello World!", font3, PdfBrushes.Black, New PointF(320, 50), format);
            'Save the document.
            document.Save("Output.pdf")
            'Close the document.
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.Office.TrueTypeFontStringFormat.RightToLeft">
            <summary>
            Gets or sets the value that indicates text direction mode.
            </summary>
            <value><c>true</c> if RightToLeft; otherwise, <c>false</c>.</value>
            <remarks>Note, that this property doesn't change any alignment of the text. 
            <see cref="P:Syncfusion.Office.TrueTypeFontStringFormat.Alignment"/> property should be set manually to align the text. This property just enables or disables
            support of right to left approach. 
            If the value is False, the text won't be checked for right to left symbols occurrence. This property is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <example> 
            <code lang="C#">
            //Create a new PDF document.
            PdfDocument document = new PdfDocument();
            //Add a page to the document.
            PdfPage page = document.Pages.Add();
            //Create PDF graphics for the page.
            PdfGraphics graphics = page.Graphics;
            //Create a new PDF font instance.
            PdfFont font = new PdfStandardFont(PdfFontFamily.Helvetica, 12);
            //Create a new PDF string format instance.
            PdfStringFormat format = new PdfStringFormat();
            //Set the text alignment.
            format.Alignment = PdfTextAlignment.Center;
            //Set the line alignment.
            format.LineAlignment = PdfVerticalAlignment.Middle;       
            format.RightToLeft = false;       
            //Draw string to PDF page.
            graphics.DrawString("Hello World!", font, PdfBrushes.Black, new RectangleF(0, 0, 200, 100), format);
            //Save the document.
            document.Save("Output.pdf");
            //Close the document.
            document.Close(true);
            </code>
            <code lang="VB">
            'Create a new PDF document.
            Dim document As New PdfDocument()
            'Add a page to the document.
            Dim page As PdfPage = document.Pages.Add()
            'Create PDF graphics for the page.
            Dim graphics As PdfGraphics = page.Graphics
            'Create a new PDF font instance.
            Dim font As PdfFont = New PdfStandardFont(PdfFontFamily.Helvetica, 12)
            'Create a new PDF string format instance.
            Dim format As PdfStringFormat = New PdfStringFormat()
            'Set the text alignment.
            format.Alignment = PdfTextAlignment.Center
            'Set the line alignment.
            format.LineAlignment = PdfVerticalAlignment.Middle;       
            'Set right to left.
            format.RightToLeft = False       
            'Draw string to PDF page.
            graphics.DrawString("Hello World!", font, PdfBrushes.Black, New RectangleF(0, 0, 200, 100), format);
            'Save the document.
            document.Save("Output.pdf")
            'Close the document.
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.Office.TrueTypeFontStringFormat.CharacterSpacing">
            <summary>
            Gets or sets value that indicates a size among the characters in the text.
            When the glyph for each character in the string is rendered, this value is
            added to the glyph�s displacement.
            </summary>
            <remarks>
            Default value is 0.</remarks>
            <example> 
            <code lang="C#">
            //Create a new PDF document.
            PdfDocument document = new PdfDocument();
            //Add a page to the document.
            PdfPage page = document.Pages.Add();
            //Create PDF graphics for the page.
            PdfGraphics graphics = page.Graphics;
            //Create a new PDF font instance.
            PdfFont font = new PdfStandardFont(PdfFontFamily.Helvetica, 12);
            //Create a new PDF string format instance.
            PdfStringFormat format = new PdfStringFormat();
            //Set the text alignment.
            format.Alignment = PdfTextAlignment.Center;
            //Set the line alignment.
            format.LineAlignment = PdfVerticalAlignment.Middle;
            //Set character spacing.
            format.CharacterSpacing = 1;       
            //Draw string to PDF page.
            graphics.DrawString("Hello World!", font, PdfBrushes.Black, new RectangleF(0, 0, 200, 100), format);
            //Save the document.
            document.Save("Output.pdf");
            //Close the document.
            document.Close(true);
            </code>
            <code lang="VB">
            'Create a new PDF document.
            Dim document As New PdfDocument()
            'Add a page to the document.
            Dim page As PdfPage = document.Pages.Add()
            'Create PDF graphics for the page.
            Dim graphics As PdfGraphics = page.Graphics
            'Create a new PDF font instance.
            Dim font As PdfFont = New PdfStandardFont(PdfFontFamily.Helvetica, 12)
            'Create a new PDF string format instance.
            Dim format As PdfStringFormat = New PdfStringFormat()
            'Set the text alignment.
            format.Alignment = PdfTextAlignment.Center
            'Set the line alignment.
            format.LineAlignment = PdfVerticalAlignment.Middle;
            'Set character spacing.
            format.CharacterSpacing = 1       
            'Draw string to PDF page.
            graphics.DrawString("Hello World!", font, PdfBrushes.Black, New RectangleF(0, 0, 200, 100), format);
            'Save the document.
            document.Save("Output.pdf")
            'Close the document.
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.Office.TrueTypeFontStringFormat.WordSpacing">
            <summary>
            Gets or sets value that indicates a size among the words in the text.
            Word spacing works the same way as character spacing but applies only to the
            space character, code 32.
            </summary>
            <remarks>Default value is 0.</remarks>
            <example> 
            <code lang="C#">
            //Create a new PDF document.
            PdfDocument document = new PdfDocument();
            //Add a page to the document.
            PdfPage page = document.Pages.Add();
            //Create PDF graphics for the page.
            PdfGraphics graphics = page.Graphics;
            //Create a new PDF font instance.
            PdfFont font = new PdfStandardFont(PdfFontFamily.Helvetica, 12);
            //Create a new PDF string format instance.
            PdfStringFormat format = new PdfStringFormat();
            //Set the text alignment.
            format.Alignment = PdfTextAlignment.Center;
            //Set the line alignment.
            format.LineAlignment = PdfVerticalAlignment.Middle;        
            //Set word spacing.
            format.WordSpacing = 1.5f;        
            //Draw string to PDF page.
            graphics.DrawString("Hello World!", font, PdfBrushes.Black, new RectangleF(0, 0, 200, 100), format);
            //Save the document.
            document.Save("Output.pdf");
            //Close the document.
            document.Close(true);
            </code>
            <code lang="VB">
            'Create a new PDF document.
            Dim document As New PdfDocument()
            'Add a page to the document.
            Dim page As PdfPage = document.Pages.Add()
            'Create PDF graphics for the page.
            Dim graphics As PdfGraphics = page.Graphics
            'Create a new PDF font instance.
            Dim font As PdfFont = New PdfStandardFont(PdfFontFamily.Helvetica, 12)
            'Create a new PDF string format instance.
            Dim format As PdfStringFormat = New PdfStringFormat()
            'Set the text alignment.
            format.Alignment = PdfTextAlignment.Center
            'Set the line alignment.
            format.LineAlignment = PdfVerticalAlignment.Middle;       
            'Set word spacing.
            format.WordSpacing = 1.5F       
            'Draw string to PDF page.
            graphics.DrawString("Hello World!", font, PdfBrushes.Black, New RectangleF(0, 0, 200, 100), format);
            'Save the document.
            document.Save("Output.pdf")
            'Close the document.
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.Office.TrueTypeFontStringFormat.LineSpacing">
            <summary>
            Gets or sets value that indicates the vertical distance between the baselines of adjacent lines of text.
            </summary>
            <remarks>Default value is 0.</remarks>
            <example> 
            <code lang="C#">
            //Create a new PDF document.
            PdfDocument document = new PdfDocument();
            //Add a page to the document.
            PdfPage page = document.Pages.Add();
            //Create PDF graphics for the page.
            PdfGraphics graphics = page.Graphics;
            //Create a new PDF font instance.
            PdfFont font = new PdfStandardFont(PdfFontFamily.Helvetica, 12);
            //Create a new PDF string format instance.
            PdfStringFormat format = new PdfStringFormat();
            //Set the text alignment.
            format.Alignment = PdfTextAlignment.Center;
            //Set the line alignment.
            format.LineAlignment = PdfVerticalAlignment.Middle;       
            //Set line spacing.
            format.LineSpacing = 1.1f;      
            //Draw string to PDF page.
            graphics.DrawString("Hello World!", font, PdfBrushes.Black, new RectangleF(0, 0, 200, 100), format);
            //Save the document.
            document.Save("Output.pdf");
            //Close the document.
            document.Close(true);
            </code>
            <code lang="VB">
            'Create a new PDF document.
            Dim document As New PdfDocument()
            'Add a page to the document.
            Dim page As PdfPage = document.Pages.Add()
            'Create PDF graphics for the page.
            Dim graphics As PdfGraphics = page.Graphics
            'Create a new PDF font instance.
            Dim font As PdfFont = New PdfStandardFont(PdfFontFamily.Helvetica, 12)
            'Create a new PDF string format instance.
            Dim format As PdfStringFormat = New PdfStringFormat()
            'Set the text alignment.
            format.Alignment = PdfTextAlignment.Center
            'Set the line alignment.
            format.LineAlignment = PdfVerticalAlignment.Middle;       
            'Set line spacing.
            format.LineSpacing = 1.1F       
            'Draw string to PDF page.
            graphics.DrawString("Hello World!", font, PdfBrushes.Black, New RectangleF(0, 0, 200, 100), format);
            'Save the document.
            document.Save("Output.pdf")
            'Close the document.
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.Office.TrueTypeFontStringFormat.ClipPath">
            <summary>
            Gets or sets a value indicating whether the text
            should be a part of the clipping path.
            </summary>
            <value><c>true</c> if ClipPath; otherwise, <c>false</c>.</value>
            <example> 
            <code lang="C#">
            //Create a new PDF document.
            PdfDocument document = new PdfDocument();
            //Add a page to the document.
            PdfPage page = document.Pages.Add();
            //Create PDF graphics for the page.
            PdfGraphics graphics = page.Graphics;
            //Create a new PDF font instance.
            PdfFont font = new PdfStandardFont(PdfFontFamily.Helvetica, 12);
            //Create a new PDF string format instance.
            PdfStringFormat format = new PdfStringFormat();
            //Set the text alignment.
            format.Alignment = PdfTextAlignment.Center;
            //Set the line alignment.
            format.LineAlignment = PdfVerticalAlignment.Middle;
            //Set character spacing.
            format.CharacterSpacing = 1;
            //Set clip path.
            format.ClipPath = true;      
            //Draw string to PDF page.
            graphics.DrawString("Hello World!", font, PdfBrushes.Black, new RectangleF(0, 0, 200, 100), format);
            //Save the document.
            document.Save("Output.pdf");
            //Close the document.
            document.Close(true);
            </code>
            <code lang="VB">
            'Create a new PDF document.
            Dim document As New PdfDocument()
            'Add a page to the document.
            Dim page As PdfPage = document.Pages.Add()
            'Create PDF graphics for the page.
            Dim graphics As PdfGraphics = page.Graphics
            'Create a new PDF font instance.
            Dim font As PdfFont = New PdfStandardFont(PdfFontFamily.Helvetica, 12)
            'Create a new PDF string format instance.
            Dim format As PdfStringFormat = New PdfStringFormat()
            'Set the text alignment.
            format.Alignment = PdfTextAlignment.Center
            'Set the line alignment.
            format.LineAlignment = PdfVerticalAlignment.Middle;
            'Set character spacing.
            format.CharacterSpacing = 1
            'Set clip path.
            format.ClipPath = True       
            'Draw string to PDF page.
            graphics.DrawString("Hello World!", font, PdfBrushes.Black, New RectangleF(0, 0, 200, 100), format);
            'Save the document.
            document.Save("Output.pdf")
            'Close the document.
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.Office.TrueTypeFontStringFormat.ParagraphIndent">
            <summary>
            Gets or sets the indent of the first line in the paragraph.
            </summary>
            <example> 
            <code lang="C#">
            //Create a new PDF document.
            PdfDocument document = new PdfDocument();
            //Add a page to the document.
            PdfPage page = document.Pages.Add();
            //Create PDF graphics for the page.
            PdfGraphics graphics = page.Graphics;
            //Create a new PDF font instance.
            PdfFont font = new PdfStandardFont(PdfFontFamily.Helvetica, 12);
            //Create a new PDF string format instance.
            PdfStringFormat format = new PdfStringFormat();
            //Set the text alignment.
            format.Alignment = PdfTextAlignment.Center;
            //Set the line alignment.
            format.LineAlignment = PdfVerticalAlignment.Middle;       
            //Set paragraph indent.
            format.ParagraphIndent = 2.1f;      
            //Draw string to PDF page.
            graphics.DrawString("Hello World!", font, PdfBrushes.Black, new RectangleF(0, 0, 200, 100), format);
            //Save the document.
            document.Save("Output.pdf");
            //Close the document.
            document.Close(true);
            </code>
            <code lang="VB">
            'Create a new PDF document.
            Dim document As New PdfDocument()
            'Add a page to the document.
            Dim page As PdfPage = document.Pages.Add()
            'Create PDF graphics for the page.
            Dim graphics As PdfGraphics = page.Graphics
            'Create a new PDF font instance.
            Dim font As PdfFont = New PdfStandardFont(PdfFontFamily.Helvetica, 12)
            'Create a new PDF string format instance.
            Dim format As PdfStringFormat = New PdfStringFormat()
            'Set the text alignment.
            format.Alignment = PdfTextAlignment.Center
            'Set the line alignment.
            format.LineAlignment = PdfVerticalAlignment.Middle;      
            'Set paragraph indent.
            format.ParagraphIndent = 2.1F      
            'Draw string to PDF page.
            graphics.DrawString("Hello World!", font, PdfBrushes.Black, New RectangleF(0, 0, 200, 100), format);
            'Save the document.
            document.Save("Output.pdf")
            'Close the document.
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.Office.TrueTypeFontStringFormat.LineLimit">
            <summary>
            Gets or sets a value indicating whether [line limit].
            </summary>
            <value><c>true</c> if [line limit]; otherwise, <c>false</c>.</value>
            <example> 
            <code lang="C#">
            //Create a new PDF document.
            PdfDocument document = new PdfDocument();
            //Add a page to the document.
            PdfPage page = document.Pages.Add();
            //Create PDF graphics for the page.
            PdfGraphics graphics = page.Graphics;
            //Create a new PDF font instance.
            PdfFont font = new PdfStandardFont(PdfFontFamily.Helvetica, 12);
            //Create a new PDF string format instance.
            PdfStringFormat format = new PdfStringFormat();
            //Set the text alignment.
            format.Alignment = PdfTextAlignment.Center;
            //Set the line alignment.
            format.LineAlignment = PdfVerticalAlignment.Middle;
            //Set character spacing.
            format.CharacterSpacing = 1;
            //Set clip path.
            format.ClipPath = true;
            //Set line limit.
            format.LineLimit = true;
            //Set line spacing.
            format.LineSpacing = 1.1f;
            //Set measure trailing spaces.
            format.MeasureTrailingSpaces = true;
            //Set no clip
            format.NoClip = true;
            //Set paragraph indent.
            format.ParagraphIndent = 2.1f;
            //Set right to left.
            format.RightToLeft = false;
            //Set word spacing.
            format.WordSpacing = 1.5f;
            //Set word wrap type.
            format.WordWrap = PdfWordWrapType.Word;
            //Set sub/super script type.
            format.SubSuperScript = PdfSubSuperScript.SubScript;
            //Draw string to PDF page.
            graphics.DrawString("Hello World!", font, PdfBrushes.Black, new RectangleF(0, 0, 200, 100), format);
            //Save the document.
            document.Save("Output.pdf");
            //Close the document.
            document.Close(true);
            </code>
            <code lang="VB">
            'Create a new PDF document.
            Dim document As New PdfDocument()
            'Add a page to the document.
            Dim page As PdfPage = document.Pages.Add()
            'Create PDF graphics for the page.
            Dim graphics As PdfGraphics = page.Graphics
            'Create a new PDF font instance.
            Dim font As PdfFont = New PdfStandardFont(PdfFontFamily.Helvetica, 12)
            'Create a new PDF string format instance.
            Dim format As PdfStringFormat = New PdfStringFormat()
            'Set the text alignment.
            format.Alignment = PdfTextAlignment.Center
            'Set the line alignment.
            format.LineAlignment = PdfVerticalAlignment.Middle;
            'Set character spacing.
            format.CharacterSpacing = 1
            'Set clip path.
            format.ClipPath = True
            'Set line limit.
            format.LineLimit = True
            'Set line spacing.
            format.LineSpacing = 1.1F
            'Set measure trailing spaces.
            format.MeasureTrailingSpaces = True
            'Set no clip
            format.NoClip = True
            'Set paragraph indent.
            format.ParagraphIndent = 2.1F
            'Set right to left.
            format.RightToLeft = False
            'Set word spacing.
            format.WordSpacing = 1.5F
            'Set word wrap type.
            format.WordWrap = PdfWordWrapType.Word
            'Set sub/super script type.
            format.SubSuperScript = PdfSubSuperScript.SubScript
            'Draw string to PDF page.
            graphics.DrawString("Hello World!", font, PdfBrushes.Black, New RectangleF(0, 0, 200, 100), format);
            'Save the document.
            document.Save("Output.pdf")
            'Close the document.
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.Office.TrueTypeFontStringFormat.MeasureTrailingSpaces">
            <summary>
            Gets or sets a value indicating whether [measure trailing spaces].
            </summary>
            <value>
            	<c>true</c> if [measure trailing spaces]; otherwise, <c>false</c>.
            </value>
            <example> 
            <code lang="C#">
            //Create a new PDF document.
            PdfDocument document = new PdfDocument();
            //Add a page to the document.
            PdfPage page = document.Pages.Add();
            //Create PDF graphics for the page.
            PdfGraphics graphics = page.Graphics;
            //Create a new PDF font instance.
            PdfFont font = new PdfStandardFont(PdfFontFamily.Helvetica, 12);
            //Create a new PDF string format instance.
            PdfStringFormat format = new PdfStringFormat();
            //Set the text alignment.
            format.Alignment = PdfTextAlignment.Center;
            //Set the line alignment.
            format.LineAlignment = PdfVerticalAlignment.Middle;
            //Set character spacing.
            format.CharacterSpacing = 1;
            //Set clip path.
            format.ClipPath = true;
            //Set line limit.
            format.LineLimit = true;
            //Set line spacing.
            format.LineSpacing = 1.1f;
            //Set measure trailing spaces.
            format.MeasureTrailingSpaces = true;
            //Set no clip
            format.NoClip = true;
            //Set paragraph indent.
            format.ParagraphIndent = 2.1f;
            //Set right to left.
            format.RightToLeft = false;
            //Set word spacing.
            format.WordSpacing = 1.5f;
            //Set word wrap type.
            format.WordWrap = PdfWordWrapType.Word;
            //Set sub/super script type.
            format.SubSuperScript = PdfSubSuperScript.SubScript;
            //Draw string to PDF page.
            graphics.DrawString("Hello World!", font, PdfBrushes.Black, new RectangleF(0, 0, 200, 100), format);
            //Save the document.
            document.Save("Output.pdf");
            //Close the document.
            document.Close(true);
            </code>
            <code lang="VB">
            'Create a new PDF document.
            Dim document As New PdfDocument()
            'Add a page to the document.
            Dim page As PdfPage = document.Pages.Add()
            'Create PDF graphics for the page.
            Dim graphics As PdfGraphics = page.Graphics
            'Create a new PDF font instance.
            Dim font As PdfFont = New PdfStandardFont(PdfFontFamily.Helvetica, 12)
            'Create a new PDF string format instance.
            Dim format As PdfStringFormat = New PdfStringFormat()
            'Set the text alignment.
            format.Alignment = PdfTextAlignment.Center
            'Set the line alignment.
            format.LineAlignment = PdfVerticalAlignment.Middle;
            'Set character spacing.
            format.CharacterSpacing = 1
            'Set clip path.
            format.ClipPath = True
            'Set line limit.
            format.LineLimit = True
            'Set line spacing.
            format.LineSpacing = 1.1F
            'Set measure trailing spaces.
            format.MeasureTrailingSpaces = True
            'Set no clip
            format.NoClip = True
            'Set paragraph indent.
            format.ParagraphIndent = 2.1F
            'Set right to left.
            format.RightToLeft = False
            'Set word spacing.
            format.WordSpacing = 1.5F
            'Set word wrap type.
            format.WordWrap = PdfWordWrapType.Word
            'Set sub/super script type.
            format.SubSuperScript = PdfSubSuperScript.SubScript
            'Draw string to PDF page.
            graphics.DrawString("Hello World!", font, PdfBrushes.Black, New RectangleF(0, 0, 200, 100), format);
            'Save the document.
            document.Save("Output.pdf")
            'Close the document.
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.Office.TrueTypeFontStringFormat.NoClip">
            <summary>
            Gets or sets a value indicating whether [no clip].
            </summary>
            <value><c>true</c> if [no clip]; otherwise, <c>false</c>.</value>
            <example> 
            <code lang="C#">
            //Create a new PDF document.
            PdfDocument document = new PdfDocument();
            //Add a page to the document.
            PdfPage page = document.Pages.Add();
            //Create PDF graphics for the page.
            PdfGraphics graphics = page.Graphics;
            //Create a new PDF font instance.
            PdfFont font = new PdfStandardFont(PdfFontFamily.Helvetica, 12);
            //Create a new PDF string format instance.
            PdfStringFormat format = new PdfStringFormat();
            //Set the text alignment.
            format.Alignment = PdfTextAlignment.Center;
            //Set the line alignment.
            format.LineAlignment = PdfVerticalAlignment.Middle;
            //Set character spacing.
            format.CharacterSpacing = 1;
            //Set clip path.
            format.ClipPath = true;
            //Set line limit.
            format.LineLimit = true;
            //Set line spacing.
            format.LineSpacing = 1.1f;
            //Set measure trailing spaces.
            format.MeasureTrailingSpaces = true;
            //Set no clip
            format.NoClip = true;
            //Set paragraph indent.
            format.ParagraphIndent = 2.1f;
            //Set right to left.
            format.RightToLeft = false;
            //Set word spacing.
            format.WordSpacing = 1.5f;
            //Set word wrap type.
            format.WordWrap = PdfWordWrapType.Word;
            //Set sub/super script type.
            format.SubSuperScript = PdfSubSuperScript.SubScript;
            //Draw string to PDF page.
            graphics.DrawString("Hello World!", font, PdfBrushes.Black, new RectangleF(0, 0, 200, 100), format);
            //Save the document.
            document.Save("Output.pdf");
            //Close the document.
            document.Close(true);
            </code>
            <code lang="VB">
            'Create a new PDF document.
            Dim document As New PdfDocument()
            'Add a page to the document.
            Dim page As PdfPage = document.Pages.Add()
            'Create PDF graphics for the page.
            Dim graphics As PdfGraphics = page.Graphics
            'Create a new PDF font instance.
            Dim font As PdfFont = New PdfStandardFont(PdfFontFamily.Helvetica, 12)
            'Create a new PDF string format instance.
            Dim format As PdfStringFormat = New PdfStringFormat()
            'Set the text alignment.
            format.Alignment = PdfTextAlignment.Center
            'Set the line alignment.
            format.LineAlignment = PdfVerticalAlignment.Middle;
            'Set character spacing.
            format.CharacterSpacing = 1
            'Set clip path.
            format.ClipPath = True
            'Set line limit.
            format.LineLimit = True
            'Set line spacing.
            format.LineSpacing = 1.1F
            'Set measure trailing spaces.
            format.MeasureTrailingSpaces = True
            'Set no clip
            format.NoClip = True
            'Set paragraph indent.
            format.ParagraphIndent = 2.1F
            'Set right to left.
            format.RightToLeft = False
            'Set word spacing.
            format.WordSpacing = 1.5F
            'Set word wrap type.
            format.WordWrap = PdfWordWrapType.Word
            'Set sub/super script type.
            format.SubSuperScript = PdfSubSuperScript.SubScript
            'Draw string to PDF page.
            graphics.DrawString("Hello World!", font, PdfBrushes.Black, New RectangleF(0, 0, 200, 100), format);
            'Save the document.
            document.Save("Output.pdf")
            'Close the document.
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.Office.TrueTypeFontStringFormat.HorizontalScalingFactor">
            <summary>
            Gets or sets the scaling factor.
            </summary>
            <remarks>The default scaling factor is 100, which means 100% and original size.
            It's used to make PDF font looking smaller when metafile is rendered into PDF.</remarks>
        </member>
        <member name="P:Syncfusion.Office.TrueTypeFontStringFormat.FirstLineIndent">
            <summary>
            Gets or sets the indent of the first line in the text.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFontStringFormat.Clone">
            <summary>
            Clones the object.
            </summary>
            <returns>The new created object.</returns>
            <example>
            <code lang="C#">
            PdfStringFormat format = new PdfStringFormat();
            //Set the text alignment.
            format.Alignment = PdfTextAlignment.Center;
            //Set the line alignment.
            format.LineAlignment = PdfVerticalAlignment.Middle;
            //Clone the string format.
            PdfStringFormat format1 = format.Clone() as PdfStringFormat;
            </code>
            <code lang="VB">
            'Create a new PDF string format instance.
            Dim format As New PdfStringFormat()
            'Set the text alignment.
            format.Alignment = PdfTextAlignment.Center
            'Set the line alignment.
            format.LineAlignment = PdfVerticalAlignment.Middle
            'Clone the string format.
            Dim format1 As PdfStringFormat = TryCast(format.Clone(), PdfStringFormat)
            </code>
            </example>
        </member>
        <member name="T:Syncfusion.Office.TrueTypeFont">
             <summary>
             Represents TrueType font.
             </summary>
            [System.Security.Permissions.PermissionSet( System.Security.Permissions.SecurityAction.Assert, Name = "FullTrust" )]
             <example> 
             <code lang="C#">
             //Create a new PDF document.
             PdfDocument document = new PdfDocument();
             //Add a page to the document.
             PdfPage page = document.Pages.Add();
             //Create PDF graphics for the page.
             PdfGraphics graphics = page.Graphics;
             //Create new system font.
             Font sFont = new Font("Arial", 12, FontStyle.Regular);
             //Create a new PDF true type font instance.
             PdfFont font = new PdfTrueTypeFont(sFont);
             //Draw string to PDF page.
             graphics.DrawString("Hello World!", font, PdfBrushes.Black, PointF.Empty);
             //Save the document.
             document.Save("Output.pdf");
             //Close the document.
             document.Close(true);
             </code>
             <code lang="VB">
             'Create a new PDF document.
             Dim document As New PdfDocument()
             'Add a page to the document.
             Dim page As PdfPage = document.Pages.Add()
             'Create PDF graphics for the page.
             Dim graphics As PdfGraphics = page.Graphics
             'Create new system font.
             Dim sFont As New Font("Arial", 12, FontStyle.Regular)
             'Create a new PDF true type font instance.
             Dim font As PdfFont = New PdfTrueTypeFont(sFont)
             'Draw string to PDF page.
             graphics.DrawString("Hello World!", font, PdfBrushes.Black, PointF.Empty)
             'Save the document.
             document.Save("Output.pdf")
             'Close the document.
             document.Close(True)
             </code>
             </example>
        </member>
        <member name="F:Syncfusion.Office.TrueTypeFont.Encoding">
            <summary>
            Encoding for the font.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TrueTypeFont.c_codePage">
            <summary>
            Code page for the encoding.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TrueTypeFont.s_rtlRenderLock">
            <summary>
            Create Instance of the rtl render lock.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TrueTypeFont.m_embed">
            <summary>
            Indicates whether the font should be embeded.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TrueTypeFont.m_unicode">
            <summary>
            Indicates whether the font should use unicode symbols.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TrueTypeFont.m_fontInternal">
            <summary>
            Internal font object.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TrueTypeFont.m_bUseTrueType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TrueTypeFont.m_style">
            <summary>
            used to store style of the font
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TrueTypeFont.m_isEmbedFont">
            <summary>
            Indicates whether the font embeding is enabled or disabled .
            </summary>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFont.#ctor(System.IO.Stream,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Office.TrueTypeFont"/> class.
            </summary>
            <param name="fontFile">The font file.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFont.#ctor(System.IO.Stream,System.Single,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Office.TrueTypeFont"/> class.
            </summary>
            <param name="fontFile">The font file.</param>
            <param name="size">The size.</param>
            <param name="isTrueType">Type of the is true.</param>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFont.#ctor(System.IO.Stream,System.Single,Syncfusion.Office.TTFFontStyle)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Office.TrueTypeFont"/> class.
            </summary>
            <param name="fontFile">The font file.</param>
            <param name="size">The size.</param>
            <param name="style">The style.</param>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFont.#ctor(System.IO.Stream,System.Single,Syncfusion.Office.TTFFontStyle,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Office.TrueTypeFont"/> class.
            </summary>
            <param name="fontFile">The font file.</param>
            <param name="size">The size.</param>
            <param name="style">The style.</param>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFont.#ctor(System.IO.Stream,System.Single,Syncfusion.Office.TTFFontStyle,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Office.TrueTypeFont"/> class.
            </summary>
            <param name="fontFile">The font file.</param>
            <param name="size">The size.</param>
            <param name="style">The style.</param>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFont.#ctor(System.IO.Stream,System.Single,System.Boolean,System.String,Syncfusion.Office.TTFFontStyle)">
            <summary>
            Initialize this constructor to avoid embedding fonts.
            </summary>
            <param name="fontStream"></param>
            <param name="size"></param>
            <param name="isUnicode"></param>
            <param name="metricsName"></param>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFont.#ctor(System.IO.Stream,System.Single,System.Boolean,System.String,Syncfusion.Office.TTFFontStyle,System.String)">
            <summary>
            Initialize this constructor to avoid embedding fonts.
            </summary>
            <param name="fontStream"></param>
            <param name="size"></param>
            <param name="isUnicode"></param>
            <param name="metricsName"></param>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFont.#ctor(System.IO.Stream,System.Single,System.Boolean,Syncfusion.Office.TTFFontStyle)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Office.TrueTypeFont"/> class.
            </summary>
            <param name="fontStream">Font Stream.</param>
            <param name="size">Size of the font.</param>
            <param name="fontStyle">Style of the font.</param>
            <param name="isEnableEmbedding">Embedding.</param>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFont.#ctor(Syncfusion.Office.TrueTypeFont,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Office.TrueTypeFont"/> class with prototype and it's size
            </summary>
            <param name="prototype">The PdfTrutypeFont using as a prototype.</param>
            <param name="size">The size of the font.</param>
            <example> 
            <code lang="C#">
            //Create a new PDF document.
            PdfDocument document = new PdfDocument();
            //Add a page to the document.
            PdfPage page = document.Pages.Add();
            //Create PDF graphics for the page.
            PdfGraphics graphics = page.Graphics;     
            //Create a new PDF true type font instance.
            PdfFont font = new PdfTrueTypeFont(new PdfTrueTypeFont(new Font("Arial",12,FontStyle.Regular)), 12);
            //Draw string to PDF page.
            graphics.DrawString("Hello World!", font, PdfBrushes.Black, PointF.Empty);
            //Save the document.
            document.Save("Output.pdf");
            //Close the document.
            document.Close(true);
            </code>
            <code lang="VB">
            'Create a new PDF document.
            Dim document As New PdfDocument()
            'Add a page to the document.
            Dim page As PdfPage = document.Pages.Add()
            'Create PDF graphics for the page.
            Dim graphics As PdfGraphics = page.Graphics       
            'Create a new PDF true type font instance.
            Dim font As PdfFont = New PdfTrueTypeFont(New PdfTrueTypeFont(New Font("Arial",12,FontStyle.Regular)), 12)
            'Draw string to PDF page.
            graphics.DrawString("Hello World!", font, PdfBrushes.Black, PointF.Empty)
            'Save the document.
            document.Save("Output.pdf")
            'Close the document.
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFont.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="!:PdfTrueTypeFont"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.TrueTypeFont.Unicode">
            <summary>Gets a value indicating whether this <see cref="T:Syncfusion.Office.TrueTypeFont"/> is Unicode enabled (Read only).</summary>
            <value>
            <c>true</c> if Unicode; otherwise, <c>false</c>.</value>
            <example> 
            <code lang="C#">
            //Create a new PDF document.
            PdfDocument document = new PdfDocument();
            //Add a page to the document.
            PdfPage page = document.Pages.Add();
            //Create PDF graphics for the page.
            PdfGraphics graphics = page.Graphics;
            //Create new system font.
            Font sFont = new Font("Arial", 12, FontStyle.Regular);
            //Create a new PDF true type font instance.
            PdfTrueTypeFont font = new PdfTrueTypeFont(sFont, 12, true);
            //Check unicode support.
            bool isUnicode = font.Unicode;
            //Draw string to PDF page.
            graphics.DrawString("Unicode Font = " + isUnicode, font, PdfBrushes.Black, PointF.Empty);
            //Save the document.
            document.Save("Output.pdf");
            //Close the document.
            document.Close(true);
            </code>
            <code lang="VB">
            'Create a new PDF document.
            Dim document As New PdfDocument()
            'Add a page to the document.
            Dim page As PdfPage = document.Pages.Add()
            'Create PDF graphics for the page.
            Dim graphics As PdfGraphics = page.Graphics
            'Create new system font.
            Dim sFont As New Font("Arial", 12, FontStyle.Regular)
            'Create a new PDF true type font instance.
            Dim font As PdfTrueTypeFont = New PdfTrueTypeFont(sFont, 12, True)
            'Check unicode support.
            Dim isUnicode As Boolean = font.Unicode
            'Draw string to PDF page.
            graphics.DrawString("Unicode Font = " + isUnicode, font, PdfBrushes.Black, PointF.Empty)
            'Save the document.
            document.Save("Output.pdf")
            'Close the document.
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.Office.TrueTypeFont.Embed">
            <summary>
            Gets a value indicating whether this <see cref="T:Syncfusion.Office.TrueTypeFont"/> is embeded it to the PDF document
            </summary>
            <value><c>true</c> if embeded; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Office.TrueTypeFont.InternalFont">
            <summary>
            Gets internals of the font.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.TrueTypeFont.FontFile">
            <summary>
            Gets path to the font file if the font was created from a file.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFont.Dispose">
            <summary>
            Releases all resources of the font.
            </summary>
            <remarks>Don't dispose the font until the corresponding document is closed.</remarks>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFont.GetCharWidth(System.Char,Syncfusion.Office.TrueTypeFontStringFormat)">
            <summary>
            Returns width of the char.
            </summary>
            <param name="charCode">Char symbol.</param>
            <param name="format">String format.</param>
            <returns>Width of the symbol.</returns>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFont.GetLineWidth(System.String,Syncfusion.Office.TrueTypeFontStringFormat)">
            <summary>
            Returns width of the line.
            </summary>
            <param name="line">Text line.</param>
            <param name="format">String format.</param>
            <returns>Width of the line.</returns>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFont.EqualsToFont(Syncfusion.Office.Font)">
            <summary>
            Checks whether fonts are equals.
            </summary>
            <param name="font">Font to compare.</param>
            <returns>True if fonts are equal, False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFont.SetSymbols(System.String)">
            <summary>
            Stores used symbols.
            </summary>
            <param name="text">String text.</param>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFont.SetSymbols(System.UInt16[])">
            <summary>
            Stores used symbols.
            </summary>
            <param name="glyphs">Glyphs, used by the line of the text.</param>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFont.CreateFontInternal(System.IO.Stream,Syncfusion.Office.TTFFontStyle)">
            <summary>
            Creates internal font object.
            </summary>
            <param name="fontFile">Font file.</param>
            <param name="style">Suggested style of the font.</param>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFont.CreateFontInternal(System.IO.Stream,Syncfusion.Office.TTFFontStyle,System.String)">
            <summary>
            Creates internal font object.
            </summary>
            <param name="fontFile">Font file.</param>
            <param name="style">Suggested style of the font.</param>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFont.InitializeInternals">
            <summary>
            Initializes font internals.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFont.InitializeInternals(System.String)">
            <summary>
            Initializes font internals.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFont.CalculateStyle(Syncfusion.Office.TTFFontStyle)">
            <summary>
            Sets the style of the font.
            </summary>
            <param name="style">Suggested style of the font.</param>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFont.GetSymbolSize(System.Char,Syncfusion.Office.TrueTypeFontStringFormat)">
            <summary>
            Calculates size of the symbol.
            </summary>
            <param name="ch">Symbol.</param>
            <param name="format">String format.</param>
            <returns>Symbol size.</returns>
        </member>
        <member name="M:Syncfusion.Office.TrueTypeFont.GetUnicodeLineWidth(System.String,System.Single@,Syncfusion.Office.TrueTypeFontStringFormat)">
            <summary>
            Calcuates width of the unicode line.
            </summary>
            <param name="line">String text.</param>
            <param name="width">Width of the line.</param>
            <returns>True if success, false otherwise.</returns>
        </member>
        <member name="T:Syncfusion.Office.RtlRenderer">
            <summary>
            Renderers text and layouts it for RTL support.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.RtlRenderer.c_openBracket">
            <summary>
            Open bracket symbol.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.RtlRenderer.c_closeBracket">
            <summary>
            Close bracket symbol.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.RtlRenderer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Office.RtlRenderer"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.RtlRenderer.SplitLayout(System.String,Syncfusion.Office.TrueTypeFont,System.Boolean,System.Boolean,Syncfusion.Office.TrueTypeFontStringFormat)">
            <summary>
            Layouts a string and splits it by the words and using correct lay outing.
            </summary>
            <param name="line">Text line.</param>
            <param name="font">Font object.</param>
            <param name="rtl">Indicates whether RTL should be applied.</param>
            <param name="wordSpace">Indicates whether word spacing is used.</param>
            <returns>Array of words if converted, null otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Office.RtlRenderer.IsEnglish(System.String)">
            <summary>
            Determines whether the specified word is english.
            </summary>
            <param name="word">The word.</param>
            <returns>
            	<c>true</c> if the specified word is english; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Office.RtlRenderer.KeepOrder(System.String[],System.Int32,System.Int32,System.String[],System.Int32)">
            <summary>
            Copies words remaining their order.
            </summary>
            <param name="words">The words.</param>
            <param name="startIndex">The start index.</param>
            <param name="count">The number of the words.</param>
            <param name="result">The resulting array.</param>
            <param name="resultIndex">Index of the result.</param>
        </member>
        <member name="M:Syncfusion.Office.RtlRenderer.CustomLayout(System.String,System.Boolean,Syncfusion.Office.TrueTypeFontStringFormat)">
            <summary>
            Uses manual algorithm for text lay outing.
            </summary>
            <param name="line">Line of the text to be layouted.</param>
            <param name="rtl">Indicates whether we use RTL or LTR layouting of the text container.</param>
            <returns>layout string.</returns>
        </member>
        <member name="M:Syncfusion.Office.RtlRenderer.ReverseWords(System.String[])">
            <summary>
            Reverses the words if they're RTL.
            </summary>
            <param name="words">The words.</param>
            <returns>The reversed words.</returns>
            <remarks>Keep English words in original order.</remarks>
        </member>
        <member name="M:Syncfusion.Office.RtlRenderer.CustomSplitLayout(System.String,Syncfusion.Office.TrueTypeFont,System.Boolean,System.Boolean,Syncfusion.Office.TrueTypeFontStringFormat)">
            <summary>
            Layouts a string and splits it by the words by using custom lay outing.
            </summary>
            <param name="line">Text line.</param>
            <param name="font">Font object.</param>
            <param name="rtl">Indicates whether RTL should be applied.</param>
            <param name="wordSpace">Indicates whether word spacing is used.</param>
            <returns>Array of words if converted, null otherwise.</returns>
        </member>
        <member name="T:Syncfusion.Office.StringLayouter">
            <summary>
            Class lay outing the text.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.StringLayouter.m_text">
            <summary>
            Text data.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.StringLayouter.m_font">
            <summary>
            Pdf font.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.StringLayouter.m_format">
            <summary>
            String format.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.StringLayouter.m_size">
            <summary>
            Bounds of the text.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.StringLayouter.m_reader">
            <summary>
            String tokenizer.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.StringLayouter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Office.StringLayouter"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.StringLayouter.Layout(System.String,Syncfusion.Office.Font,Syncfusion.Office.TrueTypeFontStringFormat,Syncfusion.Drawing.RectangleF,System.Single)">
            <summary>
            Layouts the text.
            </summary>
            <param name="text">String text.</param>
            <param name="font">Font for the text.</param>
            <param name="format">String format.</param>
            <param name="rect">Bounds of the text.</param>
            <param name="pageHeight">Page height of the text.</param>
            <returns>Layout result.</returns>
        </member>
        <member name="M:Syncfusion.Office.StringLayouter.Layout(System.String,Syncfusion.Office.Font,Syncfusion.Office.TrueTypeFontStringFormat,Syncfusion.Drawing.SizeF)">
            <summary>
            Layouts the text.
            </summary>
            <param name="text">String text.</param>
            <param name="font">Font for the text.</param>
            <param name="format">String format.</param>
            <param name="size">Bounds of the text.</param>
            <returns>Layout result.</returns>
        </member>
        <member name="M:Syncfusion.Office.StringLayouter.Initialize(System.String,Syncfusion.Office.Font,Syncfusion.Office.TrueTypeFontStringFormat,Syncfusion.Drawing.RectangleF,System.Single)">
            <summary>
            Initializes internal data.
            </summary>
            <param name="text">String text.</param>
            <param name="font">Font for the text.</param>
            <param name="format">String format.</param>
            <param name="size">Bounds of the text.</param>
        </member>
        <member name="M:Syncfusion.Office.StringLayouter.DoLayout">
            <summary>
            Layouts the text.
            </summary>
            <returns>Lay outing data.</returns>
        </member>
        <member name="M:Syncfusion.Office.StringLayouter.CopyToResult(Syncfusion.Office.StringLayoutResult,Syncfusion.Office.StringLayoutResult,System.Collections.Generic.List{Syncfusion.Office.LineInfo},System.Int32@)">
            <summary>
            Copies layout result from line result to entire result. Checks whether we can proceed lay outing or not.
            </summary>
            <param name="result">Final result.</param>
            <param name="lineResult">Line result.</param>
            <param name="lines">Lines array.</param>
            <param name="numInserted">Number of symbols inserted.</param>
            <returns>True if we can proceed, False - to stop lay outing.</returns>
        </member>
        <member name="M:Syncfusion.Office.StringLayouter.FinalizeResult(Syncfusion.Office.StringLayoutResult,System.Collections.Generic.List{Syncfusion.Office.LineInfo})">
            <summary>
            Finalizes final result.
            </summary>
            <param name="result">Final result.</param>
            <param name="lines">Lines array.</param>
        </member>
        <member name="M:Syncfusion.Office.StringLayouter.Clear">
            <summary>
            Cleares all resources.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.StringLayouter.GetLineHeight">
            <summary>
            Calculates height of the line.
            </summary>
            <returns>Height of the line.</returns>
        </member>
        <member name="M:Syncfusion.Office.StringLayouter.LayoutLine(System.String,System.Single)">
            <summary>
            Layouts line.
            </summary>
            <param name="line">Text line.</param>
            <param name="lineIndent">Line indent.</param>
            <returns>Layout result.</returns>
        </member>
        <member name="M:Syncfusion.Office.StringLayouter.AddToLineResult(Syncfusion.Office.StringLayoutResult,System.Collections.Generic.List{Syncfusion.Office.LineInfo},System.String,System.Single,Syncfusion.Office.LineType,Syncfusion.Office.OtfGlyphInfoList)">
            <summary>
            Adds line to line result.
            </summary>
            <param name="lineResult">Line resut.</param>
            <param name="lines">Array of the lines.</param>
            <param name="line">Text line.</param>
            <param name="lineWidth">Line width.</param>
            <param name="breakType">Line break type.</param>
        </member>
        <member name="M:Syncfusion.Office.StringLayouter.TrimLine(Syncfusion.Office.LineInfo,System.Boolean)">
            <summary>
            Trims whitespaces at the line.
            </summary>
            <param name="info">Line info.</param>
            <param name="firstLine">Indicates whether the line is the first in the text.</param>
            <returns>Trimed line info.</returns>
        </member>
        <member name="M:Syncfusion.Office.StringLayouter.GetLineWidth(System.String)">
            <summary>
            Calculates width of the line.
            </summary>
            <param name="line">String line.</param>
            <returns>Width of the line.</returns>
        </member>
        <member name="M:Syncfusion.Office.StringLayouter.GetLineIndent(System.Boolean)">
            <summary>
            Returns line indent for the line.
            </summary>
            <param name="firstLine">If true - the line is the first in the text.</param>
            <returns>Line indent for the line.</returns>
        </member>
        <member name="M:Syncfusion.Office.StringLayouter.GetWrapType">
            <summary>
            Returns wrap type.
            </summary>
            <returns>Returns wrap type.</returns>
        </member>
        <member name="T:Syncfusion.Office.StringLayoutResult">
            <summary>
            Layouter result.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.StringLayoutResult.m_lines">
            <summary>
            Layouted lines.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.StringLayoutResult.m_remainder">
            <summary>
            The text wasn't lay outed.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.StringLayoutResult.m_actualSize">
            <summary>
            Actual layouted text bounds.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.StringLayoutResult.m_lineHeight">
            <summary>
            Height of the line.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.StringLayoutResult.Remainder">
            <summary>
            Gets the text which is not lay outed
            </summary>
        </member>
        <member name="P:Syncfusion.Office.StringLayoutResult.ActualSize">
            <summary>
            Gets the actual layouted text bounds
            </summary>
        </member>
        <member name="P:Syncfusion.Office.StringLayoutResult.Lines">
            <summary>
            Gets layouted lines information.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.StringLayoutResult.LineHeight">
            <summary>
            Gets the height of the line.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.StringLayoutResult.Empty">
            <summary>
            Gets value that indicates whether any text was layouted.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.StringLayoutResult.LineCount">
            <summary>
            Gets number of the lines layouted.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.LineInfo">
            <summary>
            Provides a line information
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LineInfo.m_text">
            <summary>
            Line text.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LineInfo.m_width">
            <summary>
            Width of the text.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LineInfo.m_lineType">
            <summary>
            Breaking type of the line.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.LineInfo.LineType">
            <summary>
            Gets the width of the line text.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.LineInfo.Text">
            <summary>
            Gets the line text.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.LineInfo.Width">
            <summary>
            Gets width of the line text.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.LineType">
            <summary>
            Break type of the line.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LineType.None">
            <summary>
            Unknown type line.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LineType.NewLineBreak">
            <summary>
            The line has new line symbol.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LineType.LayoutBreak">
            <summary>
            layout break.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LineType.FirstParagraphLine">
            <summary>
            The line is the first in the paragraph.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LineType.LastParagraphLine">
            <summary>
            The line is the last in the paragraph.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.StringTokenizer">
            <summary>
            Utility class for working with strings.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.StringTokenizer.WhiteSpace">
            <summary>
            Whitespace symbol.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.StringTokenizer.Tab">
            <summary>
            Whitespace symbol.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.StringTokenizer.Spaces">
            <summary>
            Array of spaces.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.StringTokenizer.c_regexOptions">
            <summary>
            Default RegEx checks object's options.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.StringTokenizer.c_whiteSpacePatterm">
            <summary>
            Pattern for WhiteSpace.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.StringTokenizer.s_whiteSpaceRegex">
            <summary>
            Whitespace regex.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.StringTokenizer.m_text">
            <summary>
            Text data.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.StringTokenizer.m_position">
            <summary>
            Current position.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.StringTokenizer.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Office.StringTokenizer"/> class.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="P:Syncfusion.Office.StringTokenizer.EOF">
            <summary>
            Gets a value indicating whether this <see cref="T:Syncfusion.Office.StringTokenizer"/> is EOF.
            </summary>
            <value><c>true</c> if EOF; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Office.StringTokenizer.Length">
            <summary>
            Gets text length.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.StringTokenizer.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>The position.</value>
        </member>
        <member name="M:Syncfusion.Office.StringTokenizer.GetCharsCount(System.String,System.Char)">
            <property name="flag" value="Finished" />
            <summary>
            Returns number of symbols occurred in the text.
            </summary>
            <param name="text">Text data.</param>
            <param name="symbol">Symbol to be searched.</param>
            <returns>
            Number of symbols occurred in the text.
            </returns>
        </member>
        <member name="M:Syncfusion.Office.StringTokenizer.GetCharsCount(System.String,System.Char[])">
            <property name="flag" value="Finished" />
            <summary>
            Returns number of symbols occurred in the text.
            </summary>
            <param name="text">Text data.</param>
            <param name="symbols"> Array of symbols to be searched.</param>
            <returns>
            Number of symbols occurred in the text.
            </returns>
        </member>
        <member name="M:Syncfusion.Office.StringTokenizer.ReadLine">
            <summary>
            Reads line of the text.
            </summary>
            <returns>Text line.</returns>
        </member>
        <member name="M:Syncfusion.Office.StringTokenizer.PeekLine">
            <summary>
            Reads line of the text.
            </summary>
            <returns>Text line.</returns>
        </member>
        <member name="M:Syncfusion.Office.StringTokenizer.ReadWord">
            <summary>
            reads a word from the text.
            </summary>
            <returns>A word from the data.</returns>
        </member>
        <member name="M:Syncfusion.Office.StringTokenizer.PeekWord">
            <summary>
            Peeks a word from the text.
            </summary>
            <returns>A word from the data.</returns>
        </member>
        <member name="M:Syncfusion.Office.StringTokenizer.Read">
            <summary>
            Reads char form the data.
            </summary>
            <returns>Char symbol.</returns>
        </member>
        <member name="M:Syncfusion.Office.StringTokenizer.Read(System.Int32)">
            <summary>
            Reads count of the symbols.
            </summary>
            <param name="count">Number of symbols.</param>
            <returns>String text.</returns>
        </member>
        <member name="M:Syncfusion.Office.StringTokenizer.ReadToSymbol(System.Char,System.Boolean)">
            <summary>
            Reads data till the symbol.
            </summary>
            <param name="symbol">Specified symbol.</param>
            <param name="readSymbol">If true - to read the symbol.</param>
            <returns>The data read.</returns>
        </member>
        <member name="M:Syncfusion.Office.StringTokenizer.Peek">
            <summary>
            Peeks char form the data.
            </summary>
            <returns>Char symbol.</returns>
        </member>
        <member name="M:Syncfusion.Office.StringTokenizer.Close">
            <summary>
            Closes a reader.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.StringTokenizer.ReadToEnd">
            <summary>
            Reads text to the end.
            </summary>
            <returns>Reads text to the end.</returns>
        </member>
        <member name="M:Syncfusion.Office.StringTokenizer.IsWhitespace(System.String)">
            <summary>
            Indicates whether user specified token is whitespace symbols or not.
            </summary>
            <param name="token">Token to check.</param>
            <returns>True if token is whitespace; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Office.StringTokenizer.IsSpace(System.Char)">
            <summary>
            Indicates whether user specified token is whitespace symbols or not.
            </summary>
            <param name="token">Token to check.</param>
            <returns>True if token is whitespace; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Office.StringTokenizer.IsTab(System.Char)">
            <summary>
            Indicates whether user specified token is tab symbols or not.
            </summary>
            <param name="token">Token to check.</param>
            <returns>True if token is whitespace; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Office.StringTokenizer.GetWhitespaceCount(System.String,System.Boolean)">
            <summary>
            Calculates number of the whitespace symbols at the start or at the end of the line.
            </summary>
            <param name="line">String line.</param>
            <param name="start">If true - check start of the line, end of the line otherwise.</param>
            <returns>Number of the whitespace symbols at the start or at the end of the line.</returns>
        </member>
        <member name="M:Syncfusion.Office.StringTokenizer.Contains(System.Char[],System.Char)">
            <summary>
            Checks whether array contains a symbol.
            </summary>
            <param name="array">Array of symbols.</param>
            <param name="symbol">Char symbol.</param>
            <returns>True - if comtains, False otherwise.</returns>
        </member>
        <member name="T:Syncfusion.Office.TtfReader">
            <summary>
            Reader of the TTF data.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfReader.Encoding">
            <summary>
            Encoding class.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfReader.WidthMultiplier">
            <summary>
            Width multiplier.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfReader.c_ttfVersion1">
            <summary>
            Version of Ttf file.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfReader.c_ttfVersion2">
            <summary>
            Version of Ttf file.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfReader.c_macTtfVersion">
            <summary>
            Version of Mac Ttf file
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfReader.c_fp">
            <summary>
            FP.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfReader.s_tableNames">
            <summary>
            Aray of table names.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfReader.m_tableNames">
            <summary>
            Array of table names.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfReader.s_entrySelectors">
            <summary>
            Integer's table. One of this integer would be used as a key
            for writing some info in the header of the font program.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfReader.m_reader">
            <summary>
            Binary reader object.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfReader.m_tableDirectory">
            <summary>
            The whole list of tables loaded from Ttf.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfReader.m_metrics">
            <summary>
            Ttf metrics.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfReader.m_width">
            <summary>
            Width table.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfReader.m_macintosh">
            <summary>
            Glyphs for Macintosh or Symbol fonts (char - key, glyph - value).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfReader.m_microsoft">
            <summary>
            Glyphs for Microsoft Unicode fonts (char - key, glyph - value)..
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfReader.m_macintoshGlyphs">
            <summary>
            Glyphs for Macintosh or Symbol fonts (glyph index - key, glyph - value).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfReader.m_microsoftGlyphs">
            <summary>
            Glyphs for Microsoft Unicode fonts (glyph index - key, glyph - value).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfReader.m_bIsLocaShort">
            <summary>
            Indicates whether loca table is short.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfReader.m_subset">
            <summary>
            Indicates whether font is truetype subset
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfReader.m_isAzureCompatible">
            <summary>
            Indicates the azure rendering
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfReader.isOpenTypeFont">
            <summary>
            Indicates whether the font is opentype or not.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfReader.m_AnsiEncode">
            <summary>
            Indicated whether the Encoding with Ansi or not
            </summary>
        </member>
        <member name="F:Syncfusion.Office.TtfReader.m_missedGlyphCount">
            <summary>
            Indicates the number of glyphs missed during measure string
            </summary>
        </member>
        <member name="P:Syncfusion.Office.TtfReader.Reader">
            <summary>
            Gets or sets binary reader.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.TtfReader.InternalReader">
            <summary>
            Gets BigEndian internal reader.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.TtfReader.Metrics">
            <summary>
            Gets metrics of the font.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.TtfReader.TableDirectory">
            <summary>
            The whole list of tables loaded from Ttf.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.TtfReader.Macintosh">
            <summary>
            Gets glyphs for Macintosh or Symbol fonts (char - key, glyph - value).
            </summary>
        </member>
        <member name="P:Syncfusion.Office.TtfReader.Microsoft">
            <summary>
            Gets glyphs for Microsoft Unicode fonts (char - key, glyph - value)..
            </summary>
        </member>
        <member name="P:Syncfusion.Office.TtfReader.MacintoshGlyphs">
            <summary>
            Gets glyphs for Macintosh or Symbol fonts (glyph index - key, glyph - value).
            </summary>
        </member>
        <member name="P:Syncfusion.Office.TtfReader.MicrosoftGlyphs">
            <summary>
            Gets glyphs for Microsoft Unicode fonts (glyph index - key, glyph - value).
            </summary>
        </member>
        <member name="P:Syncfusion.Office.TtfReader.TableNames">
            /// <summary>
            Array of table names.
            </summary>
            <value>Table names</value>
        </member>
        <member name="M:Syncfusion.Office.TtfReader.#cctor">
            <summary>
            Static constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.TtfReader.#ctor(System.IO.BinaryReader)">
            <summary>
            Creates a new object.
            </summary>
            <param name="reader">The reader.</param>
        </member>
        <member name="M:Syncfusion.Office.TtfReader.Close">
            <summary>
            Closes all the resources.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.TtfReader.GetGlyph(System.Char)">
            <summary>
            Gets glyph's info by char code.
            </summary>
            <param name="charCode">Char symbol.</param>
        </member>
        <member name="M:Syncfusion.Office.TtfReader.GetGlyph(System.Int32)">
            <summary>
            Gets glyph's info by glyph index..
            </summary>
            <param name="glyphIndex">Glyph index.</param>
        </member>
        <member name="M:Syncfusion.Office.TtfReader.CreateInternals">
            <summary>
            Creates fonts internals.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.TtfReader.CreateInternals(System.String)">
            <summary>
            Creates fonts internals.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.TtfReader.ReadFontProgram(System.Collections.Generic.Dictionary{System.Char,System.Char})">
            <summary>
            Reads a font's program.
            </summary>
            <param name="chars">Array of used chars.</param>
            <returns>Binary font data.</returns>
        </member>
        <member name="M:Syncfusion.Office.TtfReader.ConvertString(System.String)">
            <summary>
            Reconverts string to be in proper format saved into PDF file.
            Return value would be in string.
            </summary>
            <param name="text">String to be reconverted.</param>
            <returns>Reconverted string.</returns>
        </member>
        <member name="M:Syncfusion.Office.TtfReader.GetCharWidth(System.Char)">
            <summary>
            Gets char width.
            </summary>
            <param name="code">Char for which to measure the width.</param>
            <returns>Char width.</returns>
        </member>
        <member name="M:Syncfusion.Office.TtfReader.GetGlyphChars(System.Collections.Generic.Dictionary{System.Char,System.Char})">
            <summary>
            Gets hashtable with chars indexed by glyph index.
            </summary>
            <param name="chars">Chars that are used in destination output.</param>
            <returns>Hashtable with chars indexed by glyph index.</returns>
        </member>
        <member name="M:Syncfusion.Office.TtfReader.Initialize">
            <summary>
            Provides basic parsing required for font comparing (FontFamily and MacStyle).
            </summary>
        </member>
        <member name="M:Syncfusion.Office.TtfReader.ReadFontDirectory">
            <summary>
            Reads font directory.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.TtfReader.FixOffsets">
            <summary>
            Fixes the offsets of the font tables.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.TtfReader.ReadMetrics">
            <summary>
            Reads font metrics.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.TtfReader.InitializeMetrics(Syncfusion.Office.TtfNameTable,Syncfusion.Office.TtfHeadTable,Syncfusion.Office.TtfHorizontalHeaderTable,Syncfusion.Office.TtfOS2Table,Syncfusion.Office.TtfPostTable,Syncfusion.Office.TtfCmapSubTable[])">
            <summary>
            Initializes metrics.
            </summary>
            <param name="nameTable">Name table.</param>
            <param name="headTable">Head table.</param>
            <param name="horizontalHeadTable">Horizontal head table.</param>
            <param name="os2Table">OS/2 table.</param>
            <param name="postTable">Post table.</param>
            <param name="cmapTables">Cmap subtables.</param>
        </member>
        <member name="M:Syncfusion.Office.TtfReader.ReadNameTable">
            <summary>
            Reads name table.
            </summary>
            <returns>Name table.</returns>
        </member>
        <member name="M:Syncfusion.Office.TtfReader.ReadHeadTable">
            <summary>
            Reads head table.
            </summary>
            <returns>Head table.</returns>
        </member>
        <member name="M:Syncfusion.Office.TtfReader.ReadHorizontalHeaderTable">
            <summary>
            Reads horizontal header table.
            </summary>
            <returns>Horizontal header table.</returns>
        </member>
        <member name="M:Syncfusion.Office.TtfReader.ReadOS2Table">
            <summary>
            Reads OS2 table.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Office.TtfReader.ReadPostTable">
            <summary>
            Reads post table.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Office.TtfReader.ReadWidthTable(System.Int32,System.Int32)">
            <summary>
            Reads Width of the glyphs.
            </summary>
            <param name="glyphCount">Number of glyphs.</param>
            <param name="unitsPerEm">Power of 2.</param>
            <returns>Width of the glyphs.</returns>
        </member>
        <member name="M:Syncfusion.Office.TtfReader.ReadCmapTable">
            <summary>
            Reads cmap table.
            </summary>
            <returns>Array of subtables.</returns>
        </member>
        <member name="M:Syncfusion.Office.TtfReader.ReadCmapSubTable(Syncfusion.Office.TtfCmapSubTable)">
            <summary>
            Reads cmap subtables.
            </summary>
            <param name="subTable">Cmap subtable.</param>
        </member>
        <member name="M:Syncfusion.Office.TtfReader.ReadAppleCmapTable(Syncfusion.Office.TtfCmapSubTable,Syncfusion.Office.TtfCmapEncoding)">
            <summary>
            Reads Symbol cmap table.
            </summary>
            <param name="subTable">Cmap subtable.</param>
            <param name="encoding">Encoding ID.</param>
        </member>
        <member name="M:Syncfusion.Office.TtfReader.ReadMicrosoftCmapTable(Syncfusion.Office.TtfCmapSubTable,Syncfusion.Office.TtfCmapEncoding)">
            <summary>
            Reads Symbol cmap table.
            </summary>
            <param name="subTable">Cmap subtable.</param>
            <param name="encoding">Encoding ID.</param>
        </member>
        <member name="M:Syncfusion.Office.TtfReader.ReadTrimmedCmapTable(Syncfusion.Office.TtfCmapSubTable,Syncfusion.Office.TtfCmapEncoding)">
            <summary>
            Reads Trimed cmap table.
            </summary>
            <param name="subTable">Cmap subtable.</param>
            <param name="encoding">Encoding ID.</param>
        </member>
        <member name="M:Syncfusion.Office.TtfReader.ReadLocaTable(System.Boolean)">
            <summary>
            Reads loca table.
            </summary>
            <param name="bShort">If True - table is int16, int32 otherwise.</param>
            <returns>Loca table.</returns>
        </member>
        <member name="M:Syncfusion.Office.TtfReader.ReadUshortArray(System.Int32)">
            <summary>
            Reads ushort array.
            </summary>
            <param name="len">Length of the array.</param>
            <returns>Ushort array.</returns>
        </member>
        <member name="M:Syncfusion.Office.TtfReader.ReadUintArray(System.Int32)">
            <summary>
            Reads uint array.
            </summary>
            <param name="len">Length of the array.</param>
            <returns>Uint array.</returns>
        </member>
        <member name="M:Syncfusion.Office.TtfReader.AddGlyph(Syncfusion.Office.TtfGlyphInfo,Syncfusion.Office.TtfCmapEncoding)">
            <summary>
            Adds glyph to the collection.
            </summary>
            <param name="glyph">Glyph info.</param>
            <param name="encoding">Encoding ID.</param>
        </member>
        <member name="M:Syncfusion.Office.TtfReader.GetWidth(System.Int32)">
            <summary>
            Returns width of the glyph.
            </summary>
            <param name="glyphCode">Code of the glyph.</param>
            <returns>Returns width of the glyph.</returns>
        </member>
        <member name="M:Syncfusion.Office.TtfReader.UpdateWidth">
            <summary>
            Updates chars structure which is used in the case
            of ansi encoding (256 bytes).
            </summary>
        </member>
        <member name="M:Syncfusion.Office.TtfReader.CheckPreambula">
            <summary>
            Indicates whether code is right Ttf preambula code:
            </summary>
        </member>
        <member name="M:Syncfusion.Office.TtfReader.GetCmapEncoding(System.Int32,System.Int32)">
            <summary>
            Gets CMAP encoding based on platform ID and encoding ID.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.TtfReader.GetTable(System.String)">
            <summary>
            Returns table.
            </summary>
            <param name="name">Name of the table.</param>
            <returns>Returns table.</returns>
        </member>
        <member name="M:Syncfusion.Office.TtfReader.UpdateGlyphChars(System.Collections.Generic.Dictionary{System.Int32,System.Int32},Syncfusion.Office.TtfLocaTable)">
            <summary>
            Updates hashtable of used glyphs.
            </summary>
            <param name="glyphChars">Dictionary of used glyphs.</param>
            <param name="locaTable">Loca table.</param>
        </member>
        <member name="M:Syncfusion.Office.TtfReader.ProcessCompositeGlyph(System.Collections.Generic.Dictionary{System.Int32,System.Int32},System.Int32,Syncfusion.Office.TtfLocaTable)">
            <summary>
            Checks if glyph is composite or not.
            If True, it provides additional work.
            </summary>
            <param name="glyphChars">Dictionary of glyphs.</param>
            <param name="glyph">Glyph index.</param>
            <param name="locaTable">Loca table.</param>
        </member>
        <member name="M:Syncfusion.Office.TtfReader.GenerateGlyphTable(System.Collections.Generic.Dictionary{System.Int32,System.Int32},Syncfusion.Office.TtfLocaTable,System.Int32[]@,System.Byte[]@)">
            <summary>
            Creates new glyph tables based on chars that are used for output.
            </summary>
            <param name="glyphChars">dictionary of glyphs.</param>
            <param name="locaTable">Loca table.</param>
            <param name="newLocaTable">The updated table that stores the offsets to the
            locations of the glyphs in the font.</param>
            <param name="newGlyphTable">The updated glyph table that holds only the glyphs that
            are used for destination output.</param>
            <returns>Glyph table size.</returns>
        </member>
        <member name="M:Syncfusion.Office.TtfReader.UpdateLocaTable(System.Int32[],System.Boolean,System.Byte[]@)">
            <summary>
            Updates new Loca table.
            </summary>
            <param name="newLocaTable">New Loca table.</param>
            <param name="bLocaIsShort">Indicates whether loca is short.</param>
            <param name="newLocaTableOut">Updated new loca table.</param>
            <returns>Updated loca table size.</returns>
        </member>
        <member name="M:Syncfusion.Office.TtfReader.GetFontProgram(System.Byte[],System.Byte[],System.UInt32,System.UInt32)">
            <summary>
            Returns font program data.
            </summary>
            <param name="newLocaTableOut">New updated loca table.</param>
            <param name="newGlyphTable">New glyph table.</param>
            <param name="glyphTableSize">Size of glyph table.</param>
            <param name="locaTableSize">Size of loca table.</param>
            <returns>Font program data.</returns>
        </member>
        <member name="M:Syncfusion.Office.TtfReader.GetFontProgramLength(System.Byte[],System.Byte[],System.Int16@)">
            <summary>
            Calculate size of the font program.
            </summary>
            <param name="newLocaTableOut">Updated new loca table.</param>
            <param name="newGlyphTable">New glyph table.</param>
            <param name="numTables">Number of tables used.</param>
            <returns>Size of the font program.</returns>
        </member>
        <member name="M:Syncfusion.Office.TtfReader.CalculateCheckSum(System.Byte[])">
            <summary>
            Gets checksum from source buffer.
            </summary>
            <param name="bytes">Byte array.</param>
        </member>
        <member name="M:Syncfusion.Office.TtfReader.WriteCheckSums(Syncfusion.Office.BigEndianWriter,System.Int16,System.Byte[],System.Byte[],System.UInt32,System.UInt32)">
            <summary>
            Writing to destination buffer - checksums and sizes of used tables.
            </summary>
            <param name="writer">Writer object.</param>
            <param name="numTables">Number of tables.</param>
            <param name="newLocaTableOut">New updated loca table.</param>
            <param name="newGlyphTable">New glyph table.</param>
            <param name="glyphTableSize">Size of glyph table.</param>
            <param name="locaTableSize">Size of loca table.</param>
        </member>
        <member name="M:Syncfusion.Office.TtfReader.WriteGlyphs(Syncfusion.Office.BigEndianWriter,System.Byte[],System.Byte[])">
            <summary>
            // Writing to destination buffer - used glyphs.
            </summary>
            <param name="writer">Writer object.</param>
            <param name="newLocaTableOut">New updated loca table.</param>
            <param name="newGlyphTable">New glyph table.</param>
        </member>
        <member name="M:Syncfusion.Office.TtfReader.InitializeFontName(Syncfusion.Office.TtfNameTable)">
            <summary>
            Initializes font name.
            </summary>
            <param name="nameTable">Name table.</param>
        </member>
        <member name="M:Syncfusion.Office.TtfReader.Align(System.UInt32)">
            <summary>
            Aligns number to be divisible on 4.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.TtfReader.GetDefaultGlyph">
            <summary>
            Returns default glyph.
            </summary>
            <returns>Returns default glyph.</returns>
        </member>
        <member name="M:Syncfusion.Office.TtfReader.CompareArrays(System.Byte[],System.Byte[])">
            <summary>
            Checks whether two arrays are equal.
            </summary>
            <param name="buff1">The first array.</param>
            <param name="buff2">The second array.</param>
            <returns>True if arrays are equal.</returns>
        </member>
        <member name="M:Syncfusion.Office.TtfReader.FormatTableName(System.String)">
            <summary>
            Formats name of the table to int value.
            </summary>
            <param name="name">Name of the table.</param>
            <returns>Code of the table name.</returns>
        </member>
        <member name="T:Syncfusion.Office.UnicodeTrueTypeFont">
            <summary>
            Creator of Unicode TrueType type font.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.UnicodeTrueTypeFont.c_driverName">
            <summary>
            Display driver name.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.UnicodeTrueTypeFont.c_nameString">
            <summary>
            String for generating font name.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.UnicodeTrueTypeFont.c_cmapPrefix">
            <summary>
            Cmap table's start prefix.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.UnicodeTrueTypeFont.c_cmapEndCodespaceRange">
            <summary>
            Cmap table's start suffix.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.UnicodeTrueTypeFont.c_cmapSuffix">
            <summary>
            Cmap table's end
            </summary>
        </member>
        <member name="F:Syncfusion.Office.UnicodeTrueTypeFont.c_cmapBeginRange">
            <summary>
            Cmap's begin range marker.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.UnicodeTrueTypeFont.c_cmapEndRange">
            <summary>
            Cmap's end range marker.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.UnicodeTrueTypeFont.c_cmapNextRangeValue">
            <summary>
            Cmap's next range default value
            </summary>
        </member>
        <member name="F:Syncfusion.Office.UnicodeTrueTypeFont.c_registry">
            <summary>
            Default registry's value
            </summary>
        </member>
        <member name="F:Syncfusion.Office.UnicodeTrueTypeFont.c_defWidthIndex">
            <summary>
            Index of the default symbol.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.UnicodeTrueTypeFont.c_cidStreamLength">
            <summary>
            Length of Cid Stream
            </summary>
        </member>
        <member name="F:Syncfusion.Office.UnicodeTrueTypeFont.m_fontStream">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Office.UnicodeTrueTypeFont.m_filePath">
            <summary>
            Path to ttf file.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.UnicodeTrueTypeFont.m_size">
            <summary>
            Size of the font.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.UnicodeTrueTypeFont.m_metrics">
            <summary>
            Font metrics.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.UnicodeTrueTypeFont.m_fontProgram">
            <summary>
            Font program.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.UnicodeTrueTypeFont.m_cmap">
            <summary>
            Cmap stream.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.UnicodeTrueTypeFont.m_CidStream">
            <summary>
            Cid set stream
            </summary>
        </member>
        <member name="F:Syncfusion.Office.UnicodeTrueTypeFont.m_ttfReader">
            <summary>
            ttf reader object.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.UnicodeTrueTypeFont.m_usedChars">
            <summary>
            Array of used chars.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.UnicodeTrueTypeFont.m_subsetName">
            <summary>
            Name of the font subset.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.UnicodeTrueTypeFont.m_ttfMetrics">
            <summary>
            Ttf metrics structure.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.UnicodeTrueTypeFont.m_type">
            <summary>
            Specifies the composite font types.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.UnicodeTrueTypeFont.m_isAzureCompatible">
            <summary>
            Indicates the azure rendering
            </summary>
        </member>
        <member name="P:Syncfusion.Office.UnicodeTrueTypeFont.Size">
            <summary>
            Gets size of the font.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.UnicodeTrueTypeFont.IsEmbed">
            <summary>
            Gets or set Embed font.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.UnicodeTrueTypeFont.Metrics">
            <summary>
            Gets font metrics.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.UnicodeTrueTypeFont.TtfReader">
            <summary>
            Gets ttf reader.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.UnicodeTrueTypeFont.FontFile">
            <summary>
            Gets path to the font file if the font was created from a file.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.UnicodeTrueTypeFont.TtfMetrics">
            <summary>
            Gets TtfMetrics structure.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.UnicodeTrueTypeFont.FontType">
            <summary>
            Gets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Syncfusion.Office.UnicodeTrueTypeFont.SkipFontEmbed">
            <summary>
            Get or set the font embed type.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.UnicodeTrueTypeFont.#ctor(System.IO.Stream,System.Single,Syncfusion.Office.CompositeFontType)">
            <summary>
            creates a new object.
            </summary>
            <param name="font">Font object.</param>
            <param name="size">Font size.</param>
        </member>
        <member name="M:Syncfusion.Office.UnicodeTrueTypeFont.#ctor(Syncfusion.Office.UnicodeTrueTypeFont)">
            <summary>
            Creates a new object from a prototype object.
            </summary>
            <param name="prototype">Prototype object.</param>
        </member>
        <member name="M:Syncfusion.Office.UnicodeTrueTypeFont.SetSymbols(System.UInt16[])">
            <summary>
            Stores used symbols.
            </summary>
            <param name="glyphs">Glyphs, used by the line of the text.</param>
        </member>
        <member name="M:Syncfusion.Office.UnicodeTrueTypeFont.GetInternals">
            <summary>
            Gets Pdf primitive reprsenting font.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.UnicodeTrueTypeFont.EqualsToFont(Syncfusion.Office.Font)">
            <summary>
            Checks whether fonts are equals.
            </summary>
            <param name="font">Font to compare.</param>
            <returns>True if fonts are equal, False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Office.UnicodeTrueTypeFont.IsEqualFontStream(System.IO.Stream,System.IO.Stream)">
            <summary>
            Compare font stream and return true when it's have same font stream
            </summary>
            <param name="currentFont"></param>
            <param name="previousFont"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Office.UnicodeTrueTypeFont.CreateInternals">
            <summary>
            Creates font internals.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.UnicodeTrueTypeFont.CreateInternals(System.String)">
            <summary>
            Creates font internals.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.UnicodeTrueTypeFont.GetCharWidth(System.Char)">
            <summary>
            Returns width of the char symbol.
            </summary>
            <param name="charCode">Char symbol.</param>
            <returns>Width of the char symbol in universal units.</returns>
        </member>
        <member name="M:Syncfusion.Office.UnicodeTrueTypeFont.GetLineWidth(System.String)">
            <summary>
            Returns width of the text line.
            </summary>
            <param name="line">String line.</param>
            <returns>Width of the char symbol in universal units.</returns>
        </member>
        <member name="M:Syncfusion.Office.UnicodeTrueTypeFont.GetLineWidth(System.String,Syncfusion.Office.TrueTypeFontStringFormat)">
            <summary>
            Returns width of the text line.
            </summary>
            <param name="line">String line.</param>
            <returns>Width of the char symbol in universal units.</returns>
        </member>
        <member name="M:Syncfusion.Office.UnicodeTrueTypeFont.GetLineWidth(System.String,Syncfusion.Office.TrueTypeFontStringFormat,System.Single@)">
            <summary>
            Returns width of the text line.
            </summary>
            <param name="line">String line.</param>
            <returns>Width of the char symbol in universal units.</returns>
        </member>
        <member name="M:Syncfusion.Office.UnicodeTrueTypeFont.Close">
            <summary>
            All resources are being to be closed.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.UnicodeTrueTypeFont.Initialize(System.IO.Stream)">
            <summary>
            Initializes the object.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.UnicodeTrueTypeFont.InitializeMetrics">
            <summary>
            Initializes metrics.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.UnicodeTrueTypeFont.GetUsedCharsCount">
            <summary>
            Creates descendant font.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.UnicodeTrueTypeFont.GenerateCmap">
            <summary>
            Creates cmap.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.UnicodeTrueTypeFont.FormatName(System.String)">
            <summary>
            Generates name of the font.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.UnicodeTrueTypeFont.GetFontName">
            <summary>
            Gets random string.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.UnicodeTrueTypeFont.GetGlyphInfo">
            <summary>
            Gets width description pad array for cid font.
            </summary>
            <returns>Width description pad array for cid font.</returns>
        </member>
        <member name="M:Syncfusion.Office.UnicodeTrueTypeFont.ToHexString(System.Int32)">
            <summary>
            Converts integer of decimal system to hex integer.
            </summary>
            <param name="n">Integer to be converted.</param>
            <returns>Hex string.</returns>
        </member>
        <member name="M:Syncfusion.Office.UnicodeTrueTypeFont.GetDescriptorFlags">
            <summary>
            Calculates flags for the font descriptor.
            </summary>
            <returns>Flags for the font descriptor.</returns>
        </member>
        <member name="M:Syncfusion.Office.UnicodeTrueTypeFont.GetBoundBox">
            <summary>
            Calculates BoundBox of the descriptor.
            </summary>
            <returns>BoundBox of the descriptor.</returns>
        </member>
        <member name="M:Syncfusion.Office.UnicodeTrueTypeFont.GenerateCidSet">
            <summary>
            This is important for PDF/A conformance validation
            </summary>
            <param name="sender"></param>
            <param name="ars"></param>
        </member>
        <member name="P:Syncfusion.Office.OtfGlyphInfoList.IsThaiShaping">
            <summary>
            Gets or Set ThaiShape 
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OtfGlyphInfoList.MoveGlyph(System.Int32,System.Int32,System.Int32)">
            <summary>
            Move Glyph
            </summary>
            <param name="end"></param>
            <param name="start"></param>
            <param name="count"></param>
        </member>
        <member name="M:Syncfusion.Office.OtfGlyphInfoList.ThaiToneMark(System.Int32)">
            <summary>
            ThaiToneMark 
            </summary>
            <param name="charcode"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Office.OtfGlyphInfoList.ThaiGlyphRanges(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            ThaiGlyphRanges
            </summary>
            <param name="charcode"></param>
            <param name="lowest1"></param>
            <param name="heighest1"></param>
            <param name="lowest2"></param>
            <param name="heighest2"></param>
            <param name="lowest3"></param>
            <param name="heighest3"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Office.OtfGlyphInfoList.ThaiGlyphRange(System.Int32,System.Int32,System.Int32)">
            <summary>
            ThaiGlyphRange
            </summary>
            <param name="charcode"></param>
            <param name="low"></param>
            <param name="high"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Office.TokenType">
            <summary>
            Holds all tokens which might appear in every PDF file.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.PDFType">
            <summary>
            All element types.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.ObjectStatus">
            <summary>
            Specfies the status of the IPdfPrmitive. Status is registered if it has a reference or else none.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.BigEndianReader">
            <summary>
            Reader of the big endian data.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.BigEndianReader.Int32Size">
            <summary>
            Size of Int32 type.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.BigEndianReader.Int16Size">
            <summary>
            Size of Int16 type.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.BigEndianReader.Int64Size">
            <summary>
            Size of long type.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.BigEndianReader.c_encoding">
            <summary>
            Reader encoding.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.BigEndianReader.c_fraction">
            <summary>
            Fraction coefficient for getting fixed type.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.BigEndianReader.m_reader">
            <summary>
            Binary reader.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.BigEndianReader.Reader">
            <summary>
            Gets or sets binary reader.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.BigEndianReader.BaseStream">
            <summary>
            Gets base stream.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.BigEndianReader.#ctor(System.IO.BinaryReader)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Office.BigEndianReader"/> class.
            </summary>
            <param name="reader">The reader.</param>
        </member>
        <member name="M:Syncfusion.Office.BigEndianReader.Close">
            <summary>
            Closes all resources.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.BigEndianReader.Seek(System.Int64)">
            <summary>
            Seeks reader to the sepcified position.
            </summary>
            <param name="position">Position of the reader.</param>
        </member>
        <member name="M:Syncfusion.Office.BigEndianReader.Skip(System.Int64)">
            <summary>
            Skips number of bytes.
            </summary>
            <param name="numBytes">Number of bytes to skip.</param>
        </member>
        <member name="M:Syncfusion.Office.BigEndianReader.Reverse(System.Byte[])">
            <summary>
            Reverts array elements.
            </summary>
            <param name="buffer">Byte array.</param>
            <returns>Reverted array.</returns>
        </member>
        <member name="M:Syncfusion.Office.BigEndianReader.ReadInt64">
            <summary>
            Reads 64 bit integer.
            </summary>
            <returns>64 bit integer.</returns>
        </member>
        <member name="M:Syncfusion.Office.BigEndianReader.ReadUInt64">
            <summary>
            Reads 64 bit integer.
            </summary>
            <returns>64 bit integer.</returns>
        </member>
        <member name="M:Syncfusion.Office.BigEndianReader.ReadInt32">
            <summary>
            Reads 32 bit integer.
            </summary>
            <returns>32 bit integer.</returns>
        </member>
        <member name="M:Syncfusion.Office.BigEndianReader.ReadUInt32">
            <summary>
            Reads 32 bit integer.
            </summary>
            <returns>32 bit integer.</returns>
        </member>
        <member name="M:Syncfusion.Office.BigEndianReader.ReadInt16">
            <summary>
            Reads 16 bit integer.
            </summary>
            <returns>16 bit integer.</returns>
        </member>
        <member name="M:Syncfusion.Office.BigEndianReader.ReadUInt16">
            <summary>
            Reads 16 bit integer.
            </summary>
            <returns>16 bit integer.</returns>
        </member>
        <member name="M:Syncfusion.Office.BigEndianReader.ReadByte">
            <summary>
            Reads one byte.
            </summary>
            <returns>One byte.</returns>
        </member>
        <member name="M:Syncfusion.Office.BigEndianReader.ReadFixed">
            <summary>
            Reads FIXED data type (16.16) fixed point number.
            </summary>
            <returns>FIXED data type (16.16) fixed point number.</returns>
        </member>
        <member name="M:Syncfusion.Office.BigEndianReader.ReadBytes(System.Int32)">
            <summary>
            Reads bytes from the reader.
            </summary>
            <param name="count">Number of bytes.</param>
            <returns>Byte array.</returns>
        </member>
        <member name="M:Syncfusion.Office.BigEndianReader.ReadString(System.Int32)">
            <summary>
            Reads string.
            </summary>
            <param name="len">Size of the string in bytes.</param>
            <returns>String data.</returns>
        </member>
        <member name="M:Syncfusion.Office.BigEndianReader.ReadString(System.Int32,System.Boolean)">
            <summary>
            Reads string.
            </summary>
            <param name="len">Size of the string in bytes.</param>
            <param name="unicode">Indicates whethere string is unicode or not.</param>
            <returns>String data.</returns>
        </member>
        <member name="M:Syncfusion.Office.BigEndianReader.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads bytes to array in BigEndian order.
            </summary>
            <param name="buffer">Byte array.</param>
            <param name="index">Start index.</param>
            <param name="count">Number bytes to read.</param>
            <returns>Number bytes that was read.</returns>
        </member>
        <member name="T:Syncfusion.Office.BigEndianWriter">
            <summary>
            Writes data in BigEndian order.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.BigEndianWriter.Int32Size">
            <summary>
            Size of Int32 type.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.BigEndianWriter.Int16Size">
            <summary>
            Size of Int16 type.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.BigEndianWriter.Int64Size">
            <summary>
            Size of long type.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.BigEndianWriter.c_encoding">
            <summary>
            Reader encoding.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.BigEndianWriter.c_fraction">
            <summary>
            Fraction coefficient for getting fixed type.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.BigEndianWriter.m_buffer">
            <summary>
            Internal buffer.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.BigEndianWriter.m_position">
            <summary>
            Current position.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.BigEndianWriter.Data">
            <summary>
            Gets data written to the writter.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.BigEndianWriter.Position">
            <summary>
            Gets position of the internal buffer.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.BigEndianWriter.#ctor(System.Int32)">
            <summary>
            Creates a new writer.
            </summary>
            <param name="capacity">Capacity of the data.</param>
        </member>
        <member name="M:Syncfusion.Office.BigEndianWriter.Write(System.Int16)">
            <summary>
            Writes short value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Syncfusion.Office.BigEndianWriter.Write(System.UInt16)">
            <summary>
            Writes ushort value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Syncfusion.Office.BigEndianWriter.Write(System.Int32)">
            <summary>
            Writes int value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Syncfusion.Office.BigEndianWriter.Write(System.UInt32)">
            <summary>
            Writes uint value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Syncfusion.Office.BigEndianWriter.Write(System.String)">
            <summary>
            Writes string value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Syncfusion.Office.BigEndianWriter.Write(System.Byte[])">
            <summary>
            Writes byte[] value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Syncfusion.Office.BigEndianWriter.Flush(System.Byte[])">
            <summary>
            Writes array to the buffer.
            </summary>
            <param name="buff">Byte data.</param>
        </member>
        <member name="T:Syncfusion.Office.Operators">
            <summary>
            Class of string PDF common operators.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.obj">
            <summary>
            Operator for starting indirect object.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.endobj">
            <summary>
            Operator for ending indirect object.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.R">
            <summary>
            Operator for reference on indirect object.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.WhiteSpace">
            <summary>
            Whitespace symbol.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.Slash">
            <summary>
            Slash symbol.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.LessThan">
            <summary>
            Less than symbol.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.GreaterThan">
            <summary>
            Greater than symbol.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.NewLine">
            <summary>
            New Line symbol.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.RegexNewLine">
            <summary>
            Regex New Line symbol.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.stream">
            <summary>
            Operator for starting stream object.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.endstream">
            <summary>
            Operator for ending indirect object.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.xref">
            <summary>
            Operator for starting cross-reference table.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.f">
            <summary>
            Operator in cross-reference table.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.n">
            <summary>
            Operator in cross-reference table.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.trailer">
            <summary>
            Trailer begining.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.startxref">
            <summary>
            Operator in trailer object.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.EOF">
            <summary>
            End of File (trailer) operator.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.header">
            <summary>
            Start of File (trailer) operator.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.BeginText">
            <summary>
            Begin text operator.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.EndText">
            <summary>
            End text operator.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.BeginPath">
            <summary>
            Begin path operator.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.AppendLineSegment">
            <summary>
            Append line segment operator.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.Stroke">
            <summary>
            Stroke operator.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.Fill">
            <summary>
            Fill by nonzero winding rule operator.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.Fill_EvenOdd">
            <summary>
            Fill by even-odd rule operator.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.FillStroke">
            <summary>
            Fill &amp;&amp; Stroke operator.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.FillStroke_EvenOdd">
            <summary>
            Fill &amp;&amp; Stroke operator.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.AppendBezierCurve">
            <summary>
            Append a cubic Bezier curve to the current path.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.AppendRectangle">
            <summary>
            Append a rectangle to the current path as a complete subpath.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.SaveState">
            <summary>
            Save graphics state operator.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.RestoreState">
            <summary>
            Restore graphics state operator.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.PaintXObject">
            <summary>
            Paint XObject operator.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.ModifyCTM">
            <summary>
            Modifies CTM (current transformation matrix).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.ModifyTM">
            <summary>
            Modifies CTM (current transformation matrix).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.SetLineWidth">
            <summary>
            Sets line width.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.SetLineCapStyle">
            <summary>
            Sets line cap style.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.SetLineJoinStyle">
            <summary>
            Sets line join style.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.SetDashPattern">
            <summary>
            Sets dash pattern.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.SetFlatnessTolerance">
            <summary>
            Sets flatness tolerance.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.ClosePath">
            <summary>
            Closes path.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.CloseStrokePath">
            <summary>
            Closes and strokes path.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.CloseFillStrokePath">
            <summary>
            Operator for closing then filling and stroking a path.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.SetCharacterSpace">
            <summary>
            Sets character space.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.SetWordSpace">
            <summary>
            Sets word space.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.SetHorizontalScaling">
            <summary>
            Sets horizontal scaling.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.SetTextLeading">
            <summary>
            Sets text leading.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.SetFont">
            <summary>
            Sets font operator.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.SetRenderingMode">
            <summary>
            Sets rendering mode.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.SetTextRise">
            <summary>
            Sets text rise.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.SetTextScaling">
            <summary>
            Sets text horizontal scaling.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.SetCoords">
            <summary>
            Set coordinates operator.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.SetCoordsAndLeading">
            <summary>
            Operator that sets the start of the new line and leading simultaneously.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.GoToNextLine">
            <summary>
            Sets text pointer to next line.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.SetText">
            <summary>
            Set text operator
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.SetTextWithFormatting">
            <summary>
            Operator to set text with formatting.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.SetTextOnNewLine">
            <summary>
            Operator that writes text on the new line.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.SetTextOnNewLineWithSpacings">
            <summary>
            Operator that writes text on the new line and set spacings.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.SelectColorSpaceForStroking">
            <summary>
            Selects a color space for the stroking color.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.SelectColorSpaceForNonStroking">
            <summary>
            Selects a color space for the nonstroking color.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.SetRGBColorForStroking">
            <summary>
            Sets RGB color for stroking operations.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.SetRGBColorForNonStroking">
            <summary>
            Same as RGB but for nonstroking operations.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.SetCMYKColorForStroking">
            <summary>
            Sets CMYK color for stroking operations.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.SetCMYKColorForNonstroking">
            <summary>
            Same as CMYK but for nonstroking operations.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.SetGrayColorForStroking">
            <summary>
            Sets gray color for stroking operations.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.SetGrayColorForNonstroking">
            <summary>
            Same as RGB but for nonstroking operations.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.Pattern">
            <summary>
            Set pattern operator.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.SetColorAndPattern">
            <summary>
            Same as SC, but also supports Pattern, Separation, DeviceN, and ICCBased
            color spaces. For non-stroking operations.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.SetColorAndPatternStroking">
            <summary>
            Same as SC, but also supports Pattern, Separation, DeviceN, and ICCBased
            color spaces. For stroking.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.ClipPath">
            <summary>
            Modify the current clipping path by intersecting it with the current path, using the
            nonzero winding number rule to determine which regions lie inside the clipping path.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.ClipPath_EvenOdd">
            <summary>
            Modify the current clipping path by intersecting it with the current path, using the
            odd-even rule to determine which regions lie inside the clipping path.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.EndPath">
            <summary>
            End the path object without filling or stroking it. This operator is a "path-painting
            no-op," used primarily for the side effect of changing the current clipping path (see
            "Clipping Path Operators").
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.SetGraphicsState">
            <summary>
            Graphics state operator.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.Comment">
            <summary>
            Symbol of commenting.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.AnyRegexSymbol">
            <summary>
            Indicates any symbol (regex syntax).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.BeginMarkedSequence">
            <summary>
            Begins a marked-content sequence.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.EndMarkedSequence">
            <summary>
            Ends a marked-content sequence.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.EvenOdd">
            <summary>
            Even-odd filling method marker.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.AppendBezierCurve2">
            <summary>
            The operator to apped bezier curve with x2 y2 x3 y3 set.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.AppendBezierCurve1">
            <summary>
            The operator to apped bezier curve with x1 y1 x3 y3 set.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.SetMiterLimit">
            <summary>
            Set miter limit operator.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.SetColorRenderingIntent">
            <summary>
            Set color rendering intent operator.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.SetColorStroking">
            <summary>
            Set colour of the current colour space for stroking.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Operators.SetColorNonStroking">
            <summary>
            Set colour of the current colour space for non-stroking operations.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.Operators.#ctor">
            <summary>
            Private constructor.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.CDEFTable">
            <summary>
            Represents the open type class definition table.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.GSUBTable">
            <summary>
            Represents the open type glyph substitution table.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.LookupSubTable1">
            <summary>
            Represents the GSUB lookup table type 1.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.LookupTable2">
            <summary>
            Represents the lookup table type 2.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.LookupTable4">
            <summary>
            Represents GPOS lookup table type 4.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.LookupTable5">
            <summary>
            Represents the GPOS lookup table type 5.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.LookupTable6">
            <summary>
            Represents GPOS lookup table type 6.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.OtfTable">
            <summary>
            Represents the open type font table.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.ArabicShapeRenderer.Dispose">
            <summary>
            Dispose a ArabicShapeRenderer instance.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.RTLCharacters.m_types">
            <summary>
            Specifies the character types.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.RTLCharacters.m_textOrder">
            <summary>
            Specifies the text order (RTL or LTR).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.RTLCharacters.m_length">
            <summary>
            Specifies the text length.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.RTLCharacters.m_result">
            <summary>
            Specifies the resultant types.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.RTLCharacters.m_levels">
            <summary>
            Specifies the resultant levels.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.RTLCharacters.m_rtlCharacterTypes">
            <summary>
            Specifies the RTL character types.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.RTLCharacters.L">
            <summary>
            Left-to-Right (Non-European or non-Arabic digits).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.RTLCharacters.LRE">
            <summary>
            Left-to-Right Embedding
            </summary>
        </member>
        <member name="F:Syncfusion.Office.RTLCharacters.LRO">
            <summary>
            Left-to-Right Override
            </summary>
        </member>
        <member name="F:Syncfusion.Office.RTLCharacters.R">
            <summary>
            Right-to-Left (Hebrew alphabet, and related punctuation).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.RTLCharacters.AL">
            <summary>
            Right-to-Left Arabic 
            </summary>
        </member>
        <member name="F:Syncfusion.Office.RTLCharacters.RLE">
            <summary>
            Right-to-Left Embedding.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.RTLCharacters.RLO">
            <summary>
            Right-to-Left Override
            </summary>
        </member>
        <member name="F:Syncfusion.Office.RTLCharacters.PDF">
            <summary>
            Pop Directional Format
            </summary>
        </member>
        <member name="F:Syncfusion.Office.RTLCharacters.EN">
            <summary>
            European Number (European digits, Eastern Arabic-Indic digits).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.RTLCharacters.ES">
            <summary>
            European Number Separator (Plus sign, Minus sign).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.RTLCharacters.ET">
            <summary>
            European Number Terminator (Degree sign, currency symbols).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.RTLCharacters.AN">
            <summary>
            Arabic Number (Arabic-Indic digits, Arabic decimal and thousands separators).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.RTLCharacters.CS">
            <summary>
            Common Number Separator (Colon, Comma, Full Stop, No-Break Space.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.RTLCharacters.NSM">
            <summary>
            Nonspacing Mark (Characters with the General_Category values).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.RTLCharacters.BN">
            <summary>
            Boundary Neutral (Default ignorables, non-characters, and control characters, other than those explicitly given other types.)
            </summary>
        </member>
        <member name="F:Syncfusion.Office.RTLCharacters.B">
            <summary>
            Paragraph Separator (Paragraph separator, appropriate Newline Functions, higher-level protocol paragraph determination).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.RTLCharacters.S">
            <summary>
            	Segment Separator (tab).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.RTLCharacters.WS">
            <summary>
            Whitespace (Space, Figure space, Line separator, Form feed, General Punctuation spaces).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.RTLCharacters.ON">
            <summary>
            Other Neutrals (All other characters, including object replacement character).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.RTLCharacters.CharTypes">
            <summary>
            RTL character types.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.TextSplitter">
            <summary>
            Represent a text splitter class and it can be used to split the input text based on the FontScriptType.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.TextSplitter.IsEastAsiaScript(Syncfusion.Office.FontScriptType)">
            <summary>
            Check whether specified script is EastAsia script or not.
            </summary>
            <param name="scriptType">Represent a FontScriptType to check.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Office.TextSplitter.GetFontScriptType(System.Char)">
            <summary>
            Gets a FontScriptType of input character.
            </summary>
            <param name="inputCharacter">Represent a input character to check.</param>
            <returns>Returns a FontScriptType of input character.</returns>
        </member>
        <member name="M:Syncfusion.Office.TextSplitter.SplitTextByFontScriptType(System.String,System.Collections.Generic.List{Syncfusion.Office.FontScriptType}@)">
            <summary>
            Split the input text based on the FontScriptType.
            </summary>
            <param name="inputText">Represent the input text to split.</param>
            <param name="fontScriptTypes">Represent the FontScriptType of a splitted text.</param>
            <returns>Retruns the array of splitted text.</returns>
        </member>
        <member name="M:Syncfusion.Office.TextSplitter.SplitTextByConsecutiveLtrAndRtl(System.String,System.Boolean,System.Boolean,System.Collections.Generic.List{Syncfusion.Office.CharacterRangeType}@,System.Nullable{System.Boolean}@,System.Boolean@)">
            <summary>
            Split the text by consicutive LTR and RTL
            </summary>
            <param name="text">Represent the source text to split</param>
            <param name="isTextBidi">Represent text range bidi</param>
            <param name="isRTLLang">Represent bidi language of text range</param>
            <param name="characterRangeTypes">Represent characterRangeType collection</param>
            <param name="isPrevLTRText">Represent whether previous text is LTR or not</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Office.TextSplitter.IsRTLChar(System.Char)">
            <summary>
            To check whether the specified character is RTL character or not.
            </summary>
            <param name="character">Specify the character</param>
            <returns>Return true if the specified character is RTL character</returns>
        </member>
        <member name="M:Syncfusion.Office.TextSplitter.IsNonWordSplitCharacter(System.String)">
            <summary>
            To check whether the specified string is non-word split character (%$#).
            </summary>
            <param name="character">Specify the string to check</param>
            <returns>Return true if the string is non-word split character</returns>
        </member>
        <member name="M:Syncfusion.Office.TextSplitter.IsNumberNonReversingCharacter(System.String,System.Boolean)">
            <summary>
            To check whether the specified character is act as non-word split character or not.
            </summary>
            <param name="character">Specify the character to check</param>
            <param name="isTextBidi">Specify the text range bidi value</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Office.TextSplitter.IsWordSplitChar(System.Char)">
            <summary>
            To check whether the specified character is word split character ([/;) or not.
            </summary>
            <param name="character">Specify the character</param>
            <returns>Return true if the specified character is word split character</returns>
        </member>
        <member name="M:Syncfusion.Office.TextSplitter.IsArabicChar(System.Char)">
            <summary>
            To check whether the specified character is Arabic character or not.
            </summary>
            <param name="character">Specify the character</param>
            <returns>Return true if the specified character is Arabic character</returns>
        </member>
        <member name="M:Syncfusion.Office.TextSplitter.IsHebrewChar(System.Char)">
            <summary>
            To check whether the specified character is Hebrew character or not.
            </summary>
            <param name="character">Specify the character</param>
            <returns>Return true if the specified character is Hebrew character</returns>
        </member>
        <member name="M:Syncfusion.Office.TextSplitter.IsHindiChar(System.Char)">
            <summary>
            To check whether the specified character is Hindi character or not.
            </summary>
            <param name="character">Specify the character</param>
            <returns>Return true if the specified character is Hindi character</returns>
        </member>
        <member name="M:Syncfusion.Office.TextSplitter.IsKoreanChar(System.Char)">
            <summary>
            To check whether the specified character is Korean character or not.
            </summary>
            <param name="character">Specify the character</param>
            <returns>Return true if the specified character is Korean character</returns>
        </member>
        <member name="M:Syncfusion.Office.TextSplitter.IsJapanese(System.Char)">
            <summary>
            To check whether the specified character is Japanese character or not.
            </summary>
            <param name="character">Specify the character</param>
            <returns>Return true if the specified character is Japanese character</returns>
        </member>
        <member name="M:Syncfusion.Office.TextSplitter.IsThaiCharacter(System.Char)">
            <summary>
            To check whether the specified character is Thai character or not.
            </summary>
            <param name="character">Specify the character</param>
            <returns>Return true if the specified character is Thai character</returns>
        </member>
        <member name="M:Syncfusion.Office.TextSplitter.IsChineseChar(System.Char)">
            <summary>
            To check whether the specified character is Chinese character or not.
            </summary>
            <param name="character">Specify the character</param>
            <returns>Return true if the specified character is Chinese character</returns>
        </member>
        <member name="T:Syncfusion.Office.FallbackFont">
            <summary>
            FallbackFont class used to represent a start, end Unicode ranges and font names of fall back font.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.FallbackFont.#ctor(System.UInt32,System.UInt32,System.String)">
            <summary>
            Create a instance of FallbackFont class.
            </summary>
            <param name=" startUnicodeRange ">Represent a start Unicode range of fall back font.</param>
            <param name=" endUnicodeRange ">Represent a end Unicode range of fall back font.</param>
            <param name="fontNames">Represent a fall back font name or names (split by comma).</param>
        </member>
        <member name="P:Syncfusion.Office.FallbackFont.StartUnicodeRange">
            <summary>
            Gets or Sets a Unicode range of start character which use a fall back font.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.FallbackFont.EndUnicodeRange">
            <summary>
            Gets or Sets a Unicode range of end character which use a fall back font.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.FallbackFont.FontNames">
            <summary>
            Gets or Sets a fall back font names (split by comma).
            </summary>
        </member>
        <member name="M:Syncfusion.Office.FallbackFont.IsWithInRange(System.String)">
            <summary>
            Check whether any character of input text is with in the start and end Unicode ranges.
            </summary>
            <param name="inputText">Represent a input text to check.</param>
            <returns>Returns true, if any character of input text is in-between start and end Unicode range; Otherwise false.</returns>
        </member>
        <member name="T:Syncfusion.Office.LocaleIDs">
            <summary>
            Specifies the local ID's.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.af_ZA">
            <summary>
            African.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.sq_AL">
            <summary>
            Albanian.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.am_ET">
            <summary>
            Amharic.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.gsw_FR">
            <summary>
            Alsatian.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.ar_DZ">
            <summary>
            Arabic Algerian.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.ar_BH">
            <summary>
            Arabic Bahraini.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.ar_EG">
            <summary>
            Arabic Egyptian.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.ar_IQ">
            <summary>
            Arabic Iraqi.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.ar_JO">
            <summary>
            Arabic Jordanian.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.ar_KW">
            <summary>
            Arabic Kuwaiti.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.ar_LB">
            <summary>
            Arabic Lebanese.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.ar_LY">
            <summary>
            Arabic Libyan.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.ar_MA">
            <summary>
            Arabic Moroccan.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.ar_OM">
            <summary>
            Arabic Omani.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.ar_QA">
            <summary>
            Arabic Qatari.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.ar_SA">
            <summary>
            Arabic Saudi.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.ar_SY">
            <summary>
            Arabic Syrian.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.ar_TN">
            <summary>
            Arabic Tunisian.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.ar_AE">
            <summary>
            Arabic United Arab Emirates.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.ar_YE">
            <summary>
            Arabic Yemeni.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.hy_AM">
            <summary>
            Armenian.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.as_IN">
            <summary>
            Assamese.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.az_Cyrl_AZ">
            <summary>
            Azeri Cyrillic.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.az_Latn_AZ">
            <summary>
            Azeri Latin.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.ba_RU">
            <summary>
            Bashkir.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.eu_ES">
            <summary>
            Basque.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.be_BY">
            <summary>
            Belarusian.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.bn_BD">
            <summary>
            Bengali (Bangladesh).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.bn_IN">
            <summary>
            Bengali (India).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.bs_Cyrl_BA">
            <summary>
            Bosnian (Cyrillic, Bosnia and Herzegovina).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.bs_Latn_BA">
            <summary>
            Bosnian (Bosnia/Herzegovina).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.bg_BG">
            <summary>
            Bulgarian.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.br_FR">
            <summary>
            Breton.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.my_MM">
            <summary>
            Burmese.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.ca_ES">
            <summary>
            Catalan.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.chr_US">
            <summary>
            Cherokee - United States.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.zh_HK">
            <summary>
            Chinese - Hong Kong SAR.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.zh_MO">
            <summary>
            Chinese - Macao SAR.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.zh_CN">
            <summary>
            Chinese - People's Republic of China.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.zh_SG">
            <summary>
            Chinese - Singapore.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.zh_TW">
            <summary>
            Chinese - Taiwan.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.co_FR">
            <summary>
            Corsican.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.hr_BA">
            <summary>
            Croatian (Bosnia/Herzegovina).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.hr_HR">
            <summary>
            Croatian.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.cs_CZ">
            <summary>
            Czech.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.da_DK">
            <summary>
            Danish.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.prs_AF">
            <summary>
            Dari.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.dv_MV">
            <summary>
            Divehi.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.nl_BE">
            <summary>
            Dutch - Belgium.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.nl_NL">
            <summary>
            Dutch - Netherlands.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.bin_NG">
            <summary>
            Edo.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.et_EE">
            <summary>
            Estonian.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.en_AU">
            <summary>
            English - Australia.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.en_BZ">
            <summary>
            English - Belize.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.en_CA">
            <summary>
            English - Canada.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.en_029">
            <summary>
            English - Caribbean.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.en_HK">
            <summary>
            English - Hong Kong SAR.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.en_IN">
            <summary>
            English - India.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.en_ID">
            <summary>
            English - Indonesia.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.en_IE">
            <summary>
            English - Ireland.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.en_JM">
            <summary>
            English - Jamaica.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.en_MY">
            <summary>
            English - Malaysia.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.en_NZ">
            <summary>
            English - New Zealand.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.en_PH">
            <summary>
            English - Philippines.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.en_SG">
            <summary>
            English - Singapore.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.en_ZA">
            <summary>
            English - South Africa.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.en_TT">
            <summary>
            English - Trinidad.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.en_GB">
            <summary>
            English - United Kingdom.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.en_US">
            <summary>
            English - United States.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.en_ZW">
            <summary>
            English - Zimbabwe.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.fo_FO">
            <summary>
            Faroese.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.fil_PH">
            <summary>
            Filipino.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.fi_FI">
            <summary>
            Finnish.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.fr_BE">
            <summary>
            French - Belgium.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.fr_CM">
            <summary>
            French - Cameroon.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.fr_CA">
            <summary>
            French - Canada.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.fr_CD">
            <summary>
            French - Democratic Rep. of Congo.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.fr_CI">
            <summary>
            French - Cote d'Ivoire.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.fr_FR">
            <summary>
            French - France.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.fr_HT">
            <summary>
            French - Haiti.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.fr_LU">
            <summary>
            French - Luxembourg.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.fr_ML">
            <summary>
            French - Mali.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.fr_MC">
            <summary>
            French - Monaco.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.fr_MA">
            <summary>
            French - Morocco.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.fr_RE">
            <summary>
            French - Reunion.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.fr_SN">
            <summary>
            French - Senegal.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.fr_CH">
            <summary>
            French - Switzerland.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.fr_fr_WINDIES">
            <summary>
            French - West Indies.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.fy_NL">
            <summary>
            Frisian - Netherlands.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.ff_NG">
            <summary>
            Fulfulde - Nigeria.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.gd_GB">
            <summary>
            Scottish Gaelic.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.gl_ES">
            <summary>
            Galician.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.ka_GE">
            <summary>
            Georgian.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.de_AT">
            <summary>
            German - Austria.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.de_DE">
            <summary>
            German - Germany.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.de_LI">
            <summary>
            German - Liechtenstein.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.de_LU">
            <summary>
            German - Luxembourg.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.de_CH">
            <summary>
            German - Switzerland.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.el_GR">
            <summary>
            Greek.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.gn_PY">
            <summary>
            Guarani - Paraguay.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.gu_IN">
            <summary>
            Gujarati.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.kl_GL">
            <summary>
            Greenlandic.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.ha_Latn_NG">
            <summary>
            Hausa - Nigeria.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.haw_US">
            <summary>
            Hawaiian - United States.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.he_IL">
            <summary>
            Hebrew.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.hi_IN">
            <summary>
            Hindi.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.hu_HU">
            <summary>
            Hungarian.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.ibb_NG">
            <summary>
            Ibibio - Nigeria.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.is_IS">
            <summary>
            Icelandic.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.ig_NG">
            <summary>
            Igbo - Nigeria.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.id_ID">
            <summary>
            Indonesian.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.iu_Latn_CA">
            <summary>
            Inuktitut (Latin, Canada).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.iu_Cans_CA">
            <summary>
            Inuktitut.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.it_IT">
            <summary>
            Italian - Italy.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.it_CH">
            <summary>
            Italian - Switzerland.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.ga_IE">
            <summary>
            Irish.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.xh_ZA">
            <summary>
            Xhosa.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.zu_ZA">
            <summary>
            Zulu.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.kn_IN">
            <summary>
            Kannada (India).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.kr_NG">
            <summary>
            Kanuri - Nigeria.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.ks_Deva">
            <summary>
            Kashmiri.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.ks_Arab">
            <summary>
            Kashmiri (Arabic).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.kk_KZ">
            <summary>
            Kazakh.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.km_KH">
            <summary>
            Khmer.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.kok_IN">
            <summary>
            Konkani.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.ko_KR">
            <summary>
            Korean.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.ky_KG">
            <summary>
            Kyrgyz (Cyrillic).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.qut_GT">
            <summary>
            K'iche.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.rw_RW">
            <summary>
            Kinyarwanda.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.lo_LA">
            <summary>
            Lao.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.la_Latn">
            <summary>
            Latin.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.lv_LV">
            <summary>
            Latvian.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.lt_LT">
            <summary>
            Lithuanian.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.dsb_DE">
            <summary>
            Lower Sorbian (Germany).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.lb_LU">
            <summary>
            Luxembourgish.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.mk_MK">
            <summary>
            FYRO Macedonian.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.ms_BN">
            <summary>
            Malay - Brunei Darussalam.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.ms_MY">
            <summary>
            Malay - Malaysia.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.ml_IN">
            <summary>
            Malayalam.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.mt_MT">
            <summary>
            Maltese.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.mni_IN">
            <summary>
            Manipuri.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.mi_NZ">
            <summary>
            Maori - New Zealand.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.mr_IN">
            <summary>
            Marathi.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.arn_CL">
            <summary>
            Mapudungun.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.mn_MN">
            <summary>
            Mongolian (Cyrillic).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.mn_Mong_CN">
            <summary>
            Mongolian (Mongolian).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.ne_NP">
            <summary>
            Nepali.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.ne_IN">
            <summary>
            Nepali - India.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.nb_NO">
            <summary>
            Norwegian (Bokml).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.nn_NO">
            <summary>
            Norwegian (Nynorsk).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.oc_FR">
            <summary>
            Occitan.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.or_IN">
            <summary>
            Oriya.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.om_Ethi_ET">
            <summary>
            Oromo.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.pap_AN">
            <summary>
            Papiamentu.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.ps_AF">
            <summary>
            Pashto.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.fa_IR">
            <summary>
            Farsi.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.pl_PL">
            <summary>
            Polish.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.pt_BR">
            <summary>
            Portuguese - Brazil.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.pt_PT">
            <summary>
            Portuguese - Portugal.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.pa_IN">
            <summary>
            Punjabi (India).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.pa_PK">
            <summary>
            Punjabi (Pakistan).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.quz_BO">
            <summary>
            Quecha - Bolivia.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.guz_EC">
            <summary>
            Quecha - Ecuador.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.guz_PE">
            <summary>
            Quecha - Peru.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.ro_RO">
            <summary>
            Romanian.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.ro_MO">
            <summary>
            Romanian - Moldava.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.rm_CH">
            <summary>
            Rhaeto-Romanic.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.ru_RU">
            <summary>
            Russian.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.ru_MO">
            <summary>
            Russian - Moldava.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.smn_FI">
            <summary>
            Sami, Inari (Finland).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.smj_NO">
            <summary>
            Sami, Lule (Norway).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.smj_SE">
            <summary>
            Sami, Lule (Sweden).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.se_FI">
            <summary>
            Sami, Northern (Finland).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.se_NO">
            <summary>
            Sami (Lappish).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.se_SE">
            <summary>
            Sami, Northern (Sweden).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.sms_FI">
            <summary>
            Sami, Skolt (Finland).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.sma_NO">
            <summary>
            Sami, Southern (Norway).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.sma_SE">
            <summary>
            Sami, Southern (Sweden).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.sa_IN">
            <summary>
            Sanskrit - India.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.sr_Cyrl_BA">
            <summary>
            Serbian (Cyrillic, Bosnia and Herzegovina).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.sr_Cyrl_CS">
            <summary>
            Serbian (Cyrillic).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.sr_Latn_BA">
            <summary>
            Serbian (Latin, Bosnia and Herzegovina).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.sr_Latn_CS">
            <summary>
            Serbian (Latin, Serbia and Montenegro (Former)).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.nso_ZA">
            <summary>
            Serbian (Latin).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.tn_ZA">
            <summary>
            Tswana.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.sd_Arab_PK">
            <summary>
            Sindhi - Pakistan.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.sd_Deva_IN">
            <summary>
            Sindhi - India.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.si_LK">
            <summary>
            Sinhalese - Sri Lanka.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.sk_SK">
            <summary>
            Slovak.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.sl_SI">
            <summary>
            Slovenian.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.so_SO">
            <summary>
            Somali.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.es_AR">
            <summary>
            Spanish - Argentina.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.es_BO">
            <summary>
            Spanish - Bolivia.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.es_CL">
            <summary>
            Spanish - Chile.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.es_CO">
            <summary>
            Spanish - Colombia.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.es_CR">
            <summary>
            Spanish - Costa Rica.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.es_DO">
            <summary>
            Spanish - Dominican Republic.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.es_EC">
            <summary>
            Spanish - Ecuador.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.es_SV">
            <summary>
            Spanish - El Salvador.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.es_GT">
            <summary>
            Spanish - Guatemala.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.es_HN">
            <summary>
            Spanish - Honduras.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.es_MX">
            <summary>
            Spanish - Mexico.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.es_NI">
            <summary>
            Spanish - Nicaragua.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.es_PA">
            <summary>
            Spanish - Panama.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.es_PY">
            <summary>
            Spanish - Paraguay.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.es_PE">
            <summary>
            Spanish - Peru.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.es_PR">
            <summary>
            Spanish - Puerto Rico.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.es_ES">
            <summary>
            Spanish - International Sort.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.es_ES_tradnl">
            <summary>
            Spanish - Spain (Traditional Sort).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.es_US">
            <summary>
            Spanish - United States.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.es_UY">
            <summary>
            Spanish - Uruguay.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.es_VE">
            <summary>
            Spanish - Venezuela.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.st_ZA">
            <summary>
            Sutu.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.sw_KE">
            <summary>
            Swahili.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.sv_FI">
            <summary>
            Swedish - Finland.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.sv_SE">
            <summary>
            Swedish.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.syr_SY">
            <summary>
            Syriac.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.tg_Cyrl_TJ">
            <summary>
            Tajik.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.tzm_Arab_MA">
            <summary>
            Tamazight.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.tzm_Latn_DZ">
            <summary>
            Tamazight (Latin).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.ta_IN">
            <summary>
            Tamil.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.tt_RU">
            <summary>
            Tatar.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.te_IN">
            <summary>
            Telugu.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.th_TH">
            <summary>
            Thai.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.bo_CN">
            <summary>
            Tibetan (PRC).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.ti_ER">
            <summary>
            Tigrigna (Eritrea).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.ti_ET">
            <summary>
            Tigrigna (Ethiopia).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.ts_ZA">
            <summary>
            Tsonga.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.tr_TR">
            <summary>
            Turkish.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.tk_TM">
            <summary>
            Turkmen.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.ug_CN">
            <summary>
            Uighur - China.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.uk_UA">
            <summary>
            Ukrainian.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.hsb_DE">
            <summary>
            Sorbian.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.ur_PK">
            <summary>
            Urdu.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.uz_Cyrl_UZ">
            <summary>
            Uzbek (Cyrillic).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.uz_Latn_UZ">
            <summary>
            Uzbek (Latin).
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.ve_ZA">
            <summary>
            Venda.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.vi_VN">
            <summary>
            Vietnamese.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.cy_GB">
            <summary>
            Welsh.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.wo_SN">
            <summary>
            Wolof.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.sah_RU">
            <summary>
            Yakut.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.ii_CN">
            <summary>
            Yi.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.yi_Hebr">
            <summary>
            Yiddish.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.yo_NG">
            <summary>
            Yoruba.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LocaleIDs.ja_JP">
            <summary>
            Japanese.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.FontScriptType">
            <summary>
            Used to represent the font script type of the text.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.CharacterRangeType">
            <summary>
            Used to represent the character range type of the text.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.CollectionBase`1.m_arrItems">
            <summary>
            List with collection items.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.CollectionBase`1.Capacity">
            <summary>
            Gets or sets the number of elements that the System.Collections.CollectionBase can contain.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.CollectionBase`1.Count">
            <summary>
            Gets the number of elements contained in the System.Collections.CollectionBase instance.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.CollectionBase`1.InnerList">
            <summary>
            Gets the list of elements in the instance.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.CollectionBase`1.List">
            <summary>
            Gets the list of elements in the instance.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.CollectionBase`1.#ctor">
            <summary>
            Initializes a new instance of the class with the default initial capacity.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.CollectionBase`1.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the class with the specified capacity.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
        </member>
        <member name="M:Syncfusion.Office.CollectionBase`1.Clear">
            <summary>
            Removes all objects from the System.Collections.CollectionBase instance.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.CollectionBase`1.Insert(System.Int32,`0)">
            <summary>
            Inserts an element into the list at the specified index.
            </summary>
            <param name="index">The zero-based index at which item should be inserted.</param>
            <param name="item">The object to insert. The value can be null for reference types.</param>
        </member>
        <member name="M:Syncfusion.Office.CollectionBase`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through this instance.
            </summary>
            <returns>An enumerator for this instance.</returns>
        </member>
        <member name="M:Syncfusion.Office.CollectionBase`1.OnClear">
            <summary>
            Performs additional custom processes when clearing the contents of this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.CollectionBase`1.OnClearComplete">
            <summary>
            Performs additional custom processes after clearing the contents of this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.CollectionBase`1.OnInsert(System.Int32,`0)">
            <summary>
             Performs additional custom processes before inserting a new element into this instance.
            </summary>
            <param name="index">The zero-based index at which to insert value.</param>
            <param name="value">The new value of the element at index.</param>
        </member>
        <member name="M:Syncfusion.Office.CollectionBase`1.OnInsertComplete(System.Int32,`0)">
            <summary>
             Performs additional custom processes after inserting a new element into this instance.
            </summary>
            <param name="index">The zero-based index at which to insert value.</param>
            <param name="value">The new value of the element at index.</param>
        </member>
        <member name="M:Syncfusion.Office.CollectionBase`1.OnRemove(System.Int32,`0)">
            <summary>
             Performs additional custom processes when removing an element from this instance.
            </summary>
            <param name="index">The zero-based index at which value can be found.</param>
            <param name="value">The value of the element to remove from index.</param>
        </member>
        <member name="M:Syncfusion.Office.CollectionBase`1.OnRemoveComplete(System.Int32,`0)">
            <summary>
             Performs additional custom processes after removing an element from this instance.
            </summary>
            <param name="index">The zero-based index at which value can be found.</param>
            <param name="value">The value of the element to remove from index.</param>
        </member>
        <member name="M:Syncfusion.Office.CollectionBase`1.OnSet(System.Int32,`0,`0)">
            <summary>
            Performs additional custom processes before setting a value in this instance.
            </summary>
            <param name="index">The zero-based index at which oldValue can be found.</param>
            <param name="oldValue">The value to replace with newValue.</param>
            <param name="newValue">The new value of the element at index.</param>
        </member>
        <member name="M:Syncfusion.Office.CollectionBase`1.OnSetComplete(System.Int32,`0,`0)">
            <summary>
            Performs additional custom processes after setting a value in this instance.
            </summary>
            <param name="index">The zero-based index at which oldValue can be found.</param>
            <param name="oldValue">The value to replace with newValue.</param>
            <param name="newValue">The new value of the element at index.</param>
        </member>
        <member name="M:Syncfusion.Office.CollectionBase`1.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of this instance.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
        </member>
        <member name="M:Syncfusion.Office.CollectionBase`1.Clone">
            <summary>
            Creates copy of the collection.
            </summary>
            <param name="count">Count for the new collection.</param>
            <returns>A copy of the collection.</returns>
        </member>
        <member name="T:Syncfusion.Office.MetaProperties">
            <summary>
            Represents a collection of properties describing the metadata stored in a document.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.MetaProperties.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Syncfusion.Office.MetaProperty"/> at the specified index.
            </summary>
            <param name="index">The <b>integer </b>that represents the position of the metadata property in the document to get. </param>
            <value>The <see cref="T:Syncfusion.Office.MetaProperty"/> at the specified index.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">The index is not valid in the <see cref="T:Syncfusion.Office.MetaProperties"/></exception>
        </member>
        <member name="P:Syncfusion.Office.MetaProperties.Count">
            <summary>
            Gets the number of items in the collection.
            </summary>
            <value>The <b>integer</b> that specifies the count of items.</value>
        </member>
        <member name="P:Syncfusion.Office.MetaProperties.InnerList">
            <summary>
            Gets the inner list.
            </summary>
            <value>The inner list.</value>
        </member>
        <member name="M:Syncfusion.Office.MetaProperties.FindByName(System.String)">
            <summary>
             Finds a metadata property in the collection with specified display name.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Office.MetaProperties.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Office.MetaProperties"/> class with the specified 
            <see cref="T:Syncfusion.Office.MetaProperties"/> instance.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MetaProperties.Add(Syncfusion.Office.MetaProperty)">
            <summary>
            Adds the specified Metaproperty.
            </summary>
            <param name="metaProperty">The metaProperty.</param>
        </member>
        <member name="M:Syncfusion.Office.MetaProperties.Remove(Syncfusion.Office.MetaProperty)">
            <summary>
            Removes the specified MetaProperty.
            </summary>
            <param name="MetaProperty">The metaProperty.</param>
        </member>
        <member name="M:Syncfusion.Office.MetaProperties.Close">
            <summary>
            Clears the object.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.MetaPropertyType">
            <summary>
            Specifies the metadata property type.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MetaPropertyType.Unknown">
            <summary>
            Represents an unknown value.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MetaPropertyType.Boolean">
            <summary>
            Represents a Boolean value.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MetaPropertyType.Choice">
            <summary>
            Represents a value from one or more choices.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MetaPropertyType.Currency">
            <summary>
            Represents a Currency value.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MetaPropertyType.DateTime">
            <summary>
            Represents a DateTime value.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MetaPropertyType.Lookup">
            <summary>
            Represents a value used to lookup another value.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MetaPropertyType.Note">
            <summary>
            Represents a value of one or more sentences.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MetaPropertyType.Number">
            <summary>
            Represents a generic number data type.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MetaPropertyType.Text">
            <summary>
            Represents a Text value.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MetaPropertyType.Url">
            <summary>
            Represents a URL.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MetaPropertyType.User">
            <summary>
            Represents a category of user.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.IVbaModule">
            <summary>
            Interface for using Vba project module 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IVbaModule.Name">
            <summary>
            Specifies the Vba module name
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IVbaModule.Type">
            <summary>
            Indicates the Vba module type.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IVbaModule.Code">
            <summary>
            Specifies the Vba code for the module
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IVbaModule.DesignerStorage">
            <summary>
            Specifies the Vba project Form module designer.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IVbaModules.Count">
            <summary>
            Specifies the number of Vba modules in the collection.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IVbaModules.Item(System.Int32)">
            <summary>
            Get the Vba module at the specified index.
            </summary>
            <param name="index">Index</param>
            <returns>Vba Module</returns>
        </member>
        <member name="P:Syncfusion.Office.IVbaModules.Item(System.String)">
            <summary>
            Get the Vba module with the specified name.
            </summary>
            <param name="index">Name</param>
            <returns>Vba Module</returns>
        </member>
        <member name="M:Syncfusion.Office.IVbaModules.Add(System.String,Syncfusion.Office.VbaModuleType)">
            <summary>
            Add a Vba module to the Vba project module collection
            </summary>
            <param name="name">Name</param>
            <param name="type">Type</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Office.IVbaModules.Remove(System.String)">
            <summary>
            Removes a Vba module with the specified name
            </summary>
            <param name="name">Name</param>
        </member>
        <member name="M:Syncfusion.Office.IVbaModules.RemoveAt(System.Int32)">
            <summary>
            Removes a Vba module at the specified index.
            </summary>
            <param name="index">Index</param>
        </member>
        <member name="M:Syncfusion.Office.IVbaModules.Clear">
            <summary>
            Clears Vba Module Collection
            </summary>
        </member>
        <member name="T:Syncfusion.Office.IVbaProject">
            <summary>
            Interface used for Vba project in the workbook.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IVbaProject.Name">
            <summary>
            Specifies the Vba project name.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IVbaProject.Description">
            <summary>
            Specifies the Vba project description details.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IVbaProject.Constants">
            <summary>
            Specifies the vba project contants.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IVbaProject.HelpFile">
            <summary>
            Specifies the path of the Help file.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IVbaProject.HelpContextId">
            <summary>
            Indicates the help context id in the help file.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IVbaProject.Modules">
            <summary>
            Contains the Vba project module collection.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.SystemKind">
            <summary>
            Specifies the type of system
            </summary>
        </member>
        <member name="F:Syncfusion.Office.SystemKind.Win16">
            <summary>
            16 bit Windows.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.SystemKind.Win32">
            <summary>
            32 bit Windows
            </summary>
        </member>
        <member name="F:Syncfusion.Office.SystemKind.Mac">
            <summary>
            Macintosh
            </summary>
        </member>
        <member name="F:Syncfusion.Office.SystemKind.Win64">
            <summary>
            64 bit Windows
            </summary>
        </member>
        <member name="T:Syncfusion.Office.VbaModuleType">
            <summary>
            Specifies the Vba module type
            </summary>
        </member>
        <member name="F:Syncfusion.Office.VbaModuleType.StdModule">
            <summary>
            Module
            </summary>
        </member>
        <member name="F:Syncfusion.Office.VbaModuleType.ClassModule">
            <summary>
            Class module
            </summary>
        </member>
        <member name="F:Syncfusion.Office.VbaModuleType.MsForm">
            <summary>
            User form 
            </summary>
        </member>
        <member name="F:Syncfusion.Office.VbaModuleType.Document">
            <summary>
            Workbook or Worksheet code
            </summary>
        </member>
        <member name="T:Syncfusion.Office.VbaReferenceType">
            <summary>
            Specifies the Vba reference type
            </summary>
        </member>
        <member name="F:Syncfusion.Office.VbaReferenceType.ReferenceControl">
            <summary>
            Control reference
            </summary>
        </member>
        <member name="F:Syncfusion.Office.VbaReferenceType.ReferenceOriginal">
            <summary>
            Original reference
            </summary>
        </member>
        <member name="F:Syncfusion.Office.VbaReferenceType.ReferenceRegister">
            <summary>
            Register reference
            </summary>
        </member>
        <member name="F:Syncfusion.Office.VbaReferenceType.ReferenceProject">
            <summary>
            Project reference
            </summary>
        </member>
        <member name="T:Syncfusion.Office.MetaProperty">
            <summary>
            Represents a single property in a collection of properties describing the metadata stored in a document.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.MetaProperty.Id">
            <summary>
            Gets the ID of the MetaProperty object. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.MetaProperty.IsReadOnly">
            <summary>
            Gets a Boolean value that specifies whether the meta property is read-only
            </summary>
        </member>
        <member name="P:Syncfusion.Office.MetaProperty.IsRequired">
            <summary>
            Gets a Boolean value that specifies whether the meta property is required.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.MetaProperty.DisplayName">
            <summary>
            Gets the name of the MetaProperty object. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.MetaProperty.Type">
            <summary>
            Gets the data type of the MetaProperty object. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.MetaProperty.Value">
            <summary>
            Gets or sets the value of metadata property.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.MetaProperty.Parent">
            <summary>
            Gets the owner of the MetaProperty.
            </summary>
            <value>The <see cref="T:Syncfusion.Office.MetaProperties"/> that specifies the owner.</value>
        </member>
        <member name="M:Syncfusion.Office.MetaProperty.MapContentTypeProperties(System.String,System.String,System.String,System.String,System.String,System.Object,Syncfusion.Office.MetaProperty)">
            <summary>
            Map the content type meta data properties.
            </summary>
            <param name="id"></param>
            <param name="nillable"></param>
            <param name="isreadonly"></param>
            <param name="displayName"></param>
            <param name="type"></param>
            <param name="value"></param>
            <param name="metaProperty"></param>
        </member>
        <member name="M:Syncfusion.Office.MetaProperty.ParseMetaProperty(System.Collections.Generic.IEnumerable{System.Xml.Linq.XNode},System.String,System.Object,Syncfusion.Office.MetaProperty,System.Xml.Linq.XNamespace)">
            <summary>
            Parse the meta data property value.
            </summary>
            <param name="nodes"></param>
            <param name="id"></param>
            <param name="value"></param>
            <param name="property"></param>
        </member>
        <member name="M:Syncfusion.Office.MetaProperty.ParseMetaProperty(System.Xml.Linq.XElement,System.Xml.Linq.XDocument)">
            <summary>
            Parse meta properties from contentTypeSchema.
            </summary>
            <param name="contentTypeSchema"></param>
            <param name="contentTypeSchemaProperties"></param>
        </member>
        <member name="M:Syncfusion.Office.MetaProperty.ChecksValidMetaValue(System.Object@)">
            <summary>
            Checks whether the user setting value is valid or not.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Office.MetaProperty.GetValueAsPerMetaPropertyType(Syncfusion.Office.MetaPropertyType,System.Object)">
            <summary>
            Gets the proper value based on the metaproperty data type. 
            </summary>
            <param name="type"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Office.MetaProperty.SetValueInXmlDocument">
            <summary>
            Set value to the XmlDocument element after changing of the MetaProperty data.  
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MetaProperty.ValidateBooleanMetaType(System.Object@)">
            <summary>
            Validate the value of boolean metaproperty type.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Office.MetaProperty.ValidateLookupMetaType(System.Object@)">
            <summary>
            Validate the value of lookup metaproperty type.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Office.MetaProperty.ValidateUserMetaType(System.Object@)">
            <summary>
            Validate the value of user metaproperty type.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Office.MetaProperty.ValidateUrlMetaType(System.Object@)">
            <summary>
            Validate the value of url metaproperty type.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Office.MetaProperty.ValidateDateTimeMetaType(System.Object@)">
            <summary>
            Validate the value of datetime metaproperty type.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Office.MetaProperty.ValidateNumberAndCurrencyMetaType(System.Object@)">
            <summary>
            Validate the value of number and currency metaproperty type.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Office.MetaProperty.ValidateTextNoteChoiceUnknownMetaType(System.Object@)">
            <summary>
            Validate the value of text,note,choice,unknown metaproperty type.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Office.ReferenceControlRecord">
            <summary>
            Control reference record.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.ReferenceControlRecord.m_Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="F:Syncfusion.Office.ReferenceControlRecord.m_libTwiddled">
            <summary>
            Libid twiddled
            </summary>
        </member>
        <member name="F:Syncfusion.Office.ReferenceControlRecord.m_extLibid">
            <summary>
            Extended Libid
            </summary>
        </member>
        <member name="F:Syncfusion.Office.ReferenceControlRecord.m_originalType">
            <summary>
            Original
            </summary>
        </member>
        <member name="F:Syncfusion.Office.ReferenceControlRecord.m_cookie">
            <summary>
            Cookie
            </summary>
        </member>
        <member name="F:Syncfusion.Office.ReferenceControlRecord.m_name">
            <summary>
            Reference name
            </summary>
        </member>
        <member name="F:Syncfusion.Office.ReferenceControlRecord.m_type">
            <summary>
            Encoding type
            </summary>
        </member>
        <member name="P:Syncfusion.Office.ReferenceControlRecord.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Syncfusion.Office.ReferenceControlRecord.LibTwiddled">
            <summary>
            Libid Twiddled
            </summary>
        </member>
        <member name="P:Syncfusion.Office.ReferenceControlRecord.ExtLibId">
            <summary>
            Extended Libid
            </summary>
        </member>
        <member name="P:Syncfusion.Office.ReferenceControlRecord.OriginalType">
            <summary>
            Original
            </summary>
        </member>
        <member name="P:Syncfusion.Office.ReferenceControlRecord.Cookie">
            <summary>
            Cookie value
            </summary>
        </member>
        <member name="P:Syncfusion.Office.ReferenceControlRecord.Name">
            <summary>
            Reference name
            </summary>
        </member>
        <member name="P:Syncfusion.Office.ReferenceControlRecord.EncodingType">
            <summary>
            Encoding Type
            </summary>
        </member>
        <member name="M:Syncfusion.Office.ReferenceControlRecord.ParseRecord(System.IO.Stream)">
            <summary>
            Parses Control Reference.
            </summary>
            <param name="dirData">Dir Stream</param>
        </member>
        <member name="M:Syncfusion.Office.ReferenceControlRecord.SerializeRecord(System.IO.Stream)">
            <summary>
            Serializes Control reference
            </summary>
            <param name="dirData">Dir Stream</param>
        </member>
        <member name="T:Syncfusion.Office.ReferenceOriginalRecord">
            <summary>
            Original Reference record
            </summary>
        </member>
        <member name="F:Syncfusion.Office.ReferenceOriginalRecord.m_Id">
            <summary>
            ID
            </summary>
        </member>
        <member name="F:Syncfusion.Office.ReferenceOriginalRecord.m_Libid">
            <summary>
            Libid
            </summary>
        </member>
        <member name="F:Syncfusion.Office.ReferenceOriginalRecord.m_type">
            <summary>
            Encoding type
            </summary>
        </member>
        <member name="F:Syncfusion.Office.ReferenceOriginalRecord.m_name">
            <summary>
            Reference name
            </summary>
        </member>
        <member name="P:Syncfusion.Office.ReferenceOriginalRecord.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Syncfusion.Office.ReferenceOriginalRecord.Libid">
            <summary>
            Libid value
            </summary>
        </member>
        <member name="P:Syncfusion.Office.ReferenceOriginalRecord.Name">
            <summary>
            Reference name
            </summary>
        </member>
        <member name="P:Syncfusion.Office.ReferenceOriginalRecord.EncodingType">
            <summary>
            Encoding type
            </summary>
        </member>
        <member name="M:Syncfusion.Office.ReferenceOriginalRecord.ParseRecord(System.IO.Stream)">
            <summary>
            Parses the original reference.
            </summary>
            <param name="dirData">Dir Stream</param>
        </member>
        <member name="M:Syncfusion.Office.ReferenceOriginalRecord.SerializeRecord(System.IO.Stream)">
            <summary>
            Serializes the original reference.
            </summary>
            <param name="dirData">Dir Stream</param>
        </member>
        <member name="T:Syncfusion.Office.ReferenceProjectRecord">
            <summary>
            Project reference record
            </summary>
        </member>
        <member name="F:Syncfusion.Office.ReferenceProjectRecord.m_Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="F:Syncfusion.Office.ReferenceProjectRecord.m_LibAbsolute">
            <summary>
            Libid Absolute
            </summary>
        </member>
        <member name="F:Syncfusion.Office.ReferenceProjectRecord.m_LibRelative">
            <summary>
            Libid Relative
            </summary>
        </member>
        <member name="F:Syncfusion.Office.ReferenceProjectRecord.m_MajorVersion">
            <summary>
            Major Version
            </summary>
        </member>
        <member name="F:Syncfusion.Office.ReferenceProjectRecord.m_MinorVersion">
            <summary>
            Minor Version
            </summary>
        </member>
        <member name="F:Syncfusion.Office.ReferenceProjectRecord.m_type">
            <summary>
            Encoding type
            </summary>
        </member>
        <member name="F:Syncfusion.Office.ReferenceProjectRecord.m_name">
            <summary>
            Reference name
            </summary>
        </member>
        <member name="P:Syncfusion.Office.ReferenceProjectRecord.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Syncfusion.Office.ReferenceProjectRecord.LibAbsolute">
            <summary>
            Libid Absolute
            </summary>
        </member>
        <member name="P:Syncfusion.Office.ReferenceProjectRecord.LibRelative">
            <summary>
            Libid Relative
            </summary>
        </member>
        <member name="P:Syncfusion.Office.ReferenceProjectRecord.MajorVersion">
            <summary>
            Major version of project
            </summary>
        </member>
        <member name="P:Syncfusion.Office.ReferenceProjectRecord.MinorVersion">
            <summary>
            Minor version of Project
            </summary>
        </member>
        <member name="P:Syncfusion.Office.ReferenceProjectRecord.Name">
            <summary>
            Reference Name
            </summary>
        </member>
        <member name="P:Syncfusion.Office.ReferenceProjectRecord.EncodingType">
            <summary>
            Encoding Type
            </summary>
        </member>
        <member name="M:Syncfusion.Office.ReferenceProjectRecord.ParseRecord(System.IO.Stream)">
            <summary>
            Parses the Project reference record.
            </summary>
            <param name="dirData">Dir stream</param>
        </member>
        <member name="M:Syncfusion.Office.ReferenceProjectRecord.SerializeRecord(System.IO.Stream)">
            <summary>
            Serializes the project reference record.
            </summary>
            <param name="dirData">Dir Stream</param>
        </member>
        <member name="T:Syncfusion.Office.ReferenceRecord">
            <summary>
            Vba reference record
            </summary>
        </member>
        <member name="P:Syncfusion.Office.ReferenceRecord.Name">
            <summary>
            Reference name
            </summary>
        </member>
        <member name="P:Syncfusion.Office.ReferenceRecord.EncodingType">
            <summary>
            Reference encoding type
            </summary>
        </member>
        <member name="M:Syncfusion.Office.ReferenceRecord.ParseRecord(System.IO.Stream)">
            <summary>
            Parse reference record.
            </summary>
            <param name="dirData"></param>
        </member>
        <member name="M:Syncfusion.Office.ReferenceRecord.SerializeRecord(System.IO.Stream)">
            <summary>
            Serialize reference record.
            </summary>
            <param name="dirData"></param>
        </member>
        <member name="M:Syncfusion.Office.ReferenceRecord.Clone">
            <summary>
            Clone.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.ReferenceRecordsCollection">
            <summary>
            Reference Records Collection
            </summary>
        </member>
        <member name="F:Syncfusion.Office.ReferenceRecordsCollection.m_parent">
            <summary>
            Parent Vba Project
            </summary>
        </member>
        <member name="M:Syncfusion.Office.ReferenceRecordsCollection.Add(Syncfusion.Office.VbaReferenceType)">
            <summary>
            Add a reference with the specified type.
            </summary>
            <param name="type">Reference type</param>
            <returns>Reference</returns>
        </member>
        <member name="M:Syncfusion.Office.ReferenceRecordsCollection.Dispose">
            <summary>
            Dispose 
            </summary>
        </member>
        <member name="M:Syncfusion.Office.ReferenceRecordsCollection.Clone(Syncfusion.Office.VbaProject)">
            <summary>
            Clone
            </summary>
            <returns>Vba reference collection</returns>
        </member>
        <member name="T:Syncfusion.Office.ReferenceRegisterRecord">
            <summary>
            Register reference record.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.ReferenceRegisterRecord.m_Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="F:Syncfusion.Office.ReferenceRegisterRecord.m_Libid">
            <summary>
            Libid
            </summary>
        </member>
        <member name="F:Syncfusion.Office.ReferenceRegisterRecord.m_name">
            <summary>
            Reference name
            </summary>
        </member>
        <member name="F:Syncfusion.Office.ReferenceRegisterRecord.m_type">
            <summary>
            Encoding type
            </summary>
        </member>
        <member name="P:Syncfusion.Office.ReferenceRegisterRecord.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Syncfusion.Office.ReferenceRegisterRecord.Libid">
            <summary>
            Libid
            </summary>
        </member>
        <member name="P:Syncfusion.Office.ReferenceRegisterRecord.Name">
            <summary>
            Reference name
            </summary>
        </member>
        <member name="P:Syncfusion.Office.ReferenceRegisterRecord.EncodingType">
            <summary>
            Encoding type
            </summary>
        </member>
        <member name="M:Syncfusion.Office.ReferenceRegisterRecord.ParseRecord(System.IO.Stream)">
            <summary>
            Parses register reference.
            </summary>
            <param name="dirData">Dir Stream</param>
        </member>
        <member name="M:Syncfusion.Office.ReferenceRegisterRecord.SerializeRecord(System.IO.Stream)">
            <summary>
            Serializes register reference.
            </summary>
            <param name="dirData">Dir Stream</param>
        </member>
        <member name="T:Syncfusion.Office.VbaAttribute">
            <summary>
            Vba attribute
            </summary>
        </member>
        <member name="F:Syncfusion.Office.VbaAttribute.m_name">
            <summary>
            Name
            </summary>
        </member>
        <member name="F:Syncfusion.Office.VbaAttribute.m_value">
            <summary>
            Value
            </summary>
        </member>
        <member name="F:Syncfusion.Office.VbaAttribute.m_isText">
            <summary>
            Indicates whether the value is string type
            </summary>
        </member>
        <member name="P:Syncfusion.Office.VbaAttribute.Name">
            <summary>
            Specifies the name of the attribute
            </summary>
        </member>
        <member name="P:Syncfusion.Office.VbaAttribute.Value">
            <summary>
            Specifies the value for a attribute
            </summary>
        </member>
        <member name="P:Syncfusion.Office.VbaAttribute.IsText">
            <summary>
            Indicates whether the attribute value is string.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.VbaAttribute.Clone">
            <summary>
            Clone
            </summary>
            <returns>VbaAttribute</returns>
        </member>
        <member name="T:Syncfusion.Office.VbaAttributesCollection">
            <summary>
            Vba attribute collection
            </summary>
        </member>
        <member name="F:Syncfusion.Office.VbaAttributesCollection.m_module">
            <summary>
            Parent Vba Module
            </summary>
        </member>
        <member name="M:Syncfusion.Office.VbaAttributesCollection.#ctor(Syncfusion.Office.VbaModule)">
            <summary>
            Initializes a Vba Attribute
            </summary>
            <param name="module"></param>
        </member>
        <member name="P:Syncfusion.Office.VbaAttributesCollection.Item(System.String)">
            <summary>
            Gets the attribute with the specified name
            </summary>
            <param name="name">Name of the attribute</param>
            <returns>Vba Attribute</returns>
        </member>
        <member name="M:Syncfusion.Office.VbaAttributesCollection.AddAttribute(System.String,System.String,System.Boolean)">
            <summary>
            Add a attribute to the collection
            </summary>
            <param name="name">Name of the attribute</param>
            <param name="value">Value of the attribute</param>
            <param name="isText">Indicates whether the value is a text</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Office.VbaAttributesCollection.Clone(Syncfusion.Office.VbaModule)">
            <summary>
            Clone
            </summary>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Office.VbaDataProcess">
            <summary>
            Vba data process
            </summary>
        </member>
        <member name="M:Syncfusion.Office.VbaDataProcess.Compress(System.IO.Stream)">
            <summary>
            Compression a data using Vba Compression algorithm
            </summary>
            <param name="compressed">DeCompressed data</param>
            <returns>Compressed data</returns>
        </member>
        <member name="M:Syncfusion.Office.VbaDataProcess.Decompress(System.IO.Stream)">
            <summary>
            Decompression a data using Vba decompression algorithm
            </summary>
            <param name="compressed">Compressed data</param>
            <returns>Decompressed data</returns>
        </member>
        <member name="M:Syncfusion.Office.VbaDataProcess.Decrypt(System.Byte[])">
            <summary>
            Decrypting a data using Vba decryption
            </summary>
            <param name="data">Encrypted data</param>
            <returns>Decrypted data</returns>
        </member>
        <member name="M:Syncfusion.Office.VbaDataProcess.Encrypt(System.Byte[],System.String)">
            <summary>
            Erypting a data using Vba Encryption
            </summary>
            <param name="data">Decrypted data</param>
            <returns>Encrypted data</returns>
        </member>
        <member name="T:Syncfusion.Office.VbaModule">
            <summary>
            Vba Module base
            </summary>
        </member>
        <member name="F:Syncfusion.Office.VbaModule.m_name">
            <summary>
            Specifies the name of the module.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.VbaModule.m_description">
            <summary>
            Module description
            </summary>
        </member>
        <member name="F:Syncfusion.Office.VbaModule.m_streamName">
            <summary>
            Module stream name
            </summary>
        </member>
        <member name="F:Syncfusion.Office.VbaModule.m_offSet">
            <summary>
            Module offset
            </summary>
        </member>
        <member name="F:Syncfusion.Office.VbaModule.m_helpTopic">
            <summary>
            Help context id
            </summary>
        </member>
        <member name="F:Syncfusion.Office.VbaModule.m_attributeCollection">
            <summary>
            Vba attributes collection
            </summary>
        </member>
        <member name="F:Syncfusion.Office.VbaModule.m_designerStorage">
            <summary>
            Designer storage
            </summary>
        </member>
        <member name="F:Syncfusion.Office.VbaModule.m_packages">
            <summary>
            Designer packages.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.VbaModule.m_type">
            <summary>
            Vba module type.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.VbaModule.m_code">
            <summary>
            Vb Program code.
            </summary>
        </member>
        <member name="E:Syncfusion.Office.VbaModule.CodeNameChanged">
            <summary>
            Name changing event hanler.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.VbaModule.m_vbaModules">
            <summary>
            Vba Module collection
            </summary>
        </member>
        <member name="M:Syncfusion.Office.VbaModule.#ctor(Syncfusion.Office.VbaModulesCollection)">
            <summary>
            Instantiate a Vba Module
            </summary>
            <param name="m_vbaModules"></param>
        </member>
        <member name="P:Syncfusion.Office.VbaModule.Name">
            <summary>
            Specifies the module name
            </summary>
        </member>
        <member name="P:Syncfusion.Office.VbaModule.Type">
            <summary>
            Indicates the module type.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.VbaModule.Code">
            <summary>
            Specifies the Vba code for the module
            </summary>
        </member>
        <member name="P:Syncfusion.Office.VbaModule.HelpTopicId">
            <summary>
            Help context id
            </summary>
        </member>
        <member name="P:Syncfusion.Office.VbaModule.Description">
            <summary>
            Specifies the project description.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.VbaModule.StreamName">
            <summary>
            Specifies the module stream name.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.VbaModule.ModuleOffSet">
            <summary>
            Indicates the starting position of the data in the module stream
            </summary>
        </member>
        <member name="P:Syncfusion.Office.VbaModule.Attributes">
            <summary>
            Vba code attributes
            </summary>
        </member>
        <member name="P:Syncfusion.Office.VbaModule.DesignerStorage">
            <summary>
            Designer storage
            </summary>
        </member>
        <member name="P:Syncfusion.Office.VbaModule.Package">
            <summary>
            Designer module package
            </summary>
        </member>
        <member name="M:Syncfusion.Office.VbaModule.InitializeAttributes(System.String,System.String)">
            <summary>
            Initializes Vba attributes collection.
            </summary>
            <param name="name">module name</param>
            <param name="clsID">Class Id</param>
            <returns>Attributes collection</returns>
        </member>
        <member name="M:Syncfusion.Office.VbaModule.ParseModuleRecord(System.IO.Stream)">
            <summary>
            Parses Vba module.
            </summary>
            <param name="moduleStream">Module stream</param>
        </member>
        <member name="M:Syncfusion.Office.VbaModule.SerializeModuleRecord(System.IO.Stream)">
            <summary>
            Serializes module record
            </summary>
            <param name="dirStream"></param>
        </member>
        <member name="M:Syncfusion.Office.VbaModule.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:Syncfusion.Office.NameChangedEventHandler">
            <summary>
            Name change event handler
            </summary>
            <param name="sender">sender</param>
            <param name="name">new name</param>
        </member>
        <member name="F:Syncfusion.Office.VbaModulesCollection.m_project">
            <summary>
            VbaProject object
            </summary>
        </member>
        <member name="P:Syncfusion.Office.VbaModulesCollection.Project">
            <summary>
            Parent Vba project
            </summary>
        </member>
        <member name="P:Syncfusion.Office.VbaModulesCollection.Item(System.String)">
            <summary>
            Get the Vba module with the specified name
            </summary>
            <param name="name">Name</param>
            <returns>Vba Module</returns>
        </member>
        <member name="P:Syncfusion.Office.VbaModulesCollection.Item(System.Int32)">
            <summary>
            Get the Vba module at the specified index.
            </summary>
            <param name="index">Index</param>
            <returns>Vba Module</returns>
        </member>
        <member name="M:Syncfusion.Office.VbaModulesCollection.#ctor(Syncfusion.Office.VbaProject)">
            <summary>
            Initializes a Vba module collection.
            </summary>
            <param name="project">Vba Project</param>
        </member>
        <member name="M:Syncfusion.Office.VbaModulesCollection.Add(System.String,Syncfusion.Office.VbaModuleType)">
            <summary>
            Add a Vba module to the Vba project module collection
            </summary>
            <param name="name">Name</param>
            <param name="type">Type</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Office.VbaModulesCollection.Remove(System.String)">
            <summary>
            Removes a Vba module with the specified name
            </summary>
            <param name="name">Name</param>
        </member>
        <member name="M:Syncfusion.Office.VbaModulesCollection.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="M:Syncfusion.Office.VbaModulesCollection.Clone(Syncfusion.Office.VbaProject)">
            <summary>
            Clone Vba Modules Collection
            </summary>
            <param name="parent">Parent</param>
            <returns>Vba Modules</returns>
        </member>
        <member name="T:Syncfusion.Office.VbaProject">
            <summary>
            Vba project base
            </summary>
        </member>
        <member name="F:Syncfusion.Office.VbaProject.m_modules">
            <summary>
            Vba modules collection.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.VbaProject.m_references">
            <summary>
            Vba project references.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.VbaProject.m_parent">
            <summary>
            Parent
            </summary>
        </member>
        <member name="F:Syncfusion.Office.VbaProject.m_kind">
            <summary>
            System Kind
            </summary>
        </member>
        <member name="F:Syncfusion.Office.VbaProject.m_name">
            <summary>
            Vba project name.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.VbaProject.m_description">
            <summary>
            Project description.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.VbaProject.m_password">
            <summary>
            Password
            </summary>
        </member>
        <member name="F:Syncfusion.Office.VbaProject.m_constants">
            <summary>
            Project constants.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.VbaProject.m_IsViewLocked">
            <summary>
            Indicates whether to lock the project view
            </summary>
        </member>
        <member name="F:Syncfusion.Office.VbaProject.m_helpFile1">
            <summary>
            Primary Help File
            </summary>
        </member>
        <member name="F:Syncfusion.Office.VbaProject.m_helpFile2">
            <summary>
            Secondary help file.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.VbaProject.m_helpTopic">
            <summary>
            Help topic context id;
            </summary>
        </member>
        <member name="F:Syncfusion.Office.VbaProject.m_lcId">
            <summary>
            LCID
            </summary>
        </member>
        <member name="F:Syncfusion.Office.VbaProject.m_lcInvoke">
            <summary>
            LCInvoke
            </summary>
        </member>
        <member name="F:Syncfusion.Office.VbaProject.m_codePage">
            <summary>
            Code page of the project
            </summary>
        </member>
        <member name="F:Syncfusion.Office.VbaProject.m_majorVersion">
            <summary>
            Major version
            </summary>
        </member>
        <member name="F:Syncfusion.Office.VbaProject.m_minorVersion">
            <summary>
            Minor version
            </summary>
        </member>
        <member name="F:Syncfusion.Office.VbaProject.m_clsID">
            <summary>
            Project Class Id
            </summary>
        </member>
        <member name="F:Syncfusion.Office.VbaProject.m_protectionData">
            <summary>
            Data preserved for protection.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.VbaProject.m_passwordData">
            <summary>
            Data preserved for password
            </summary>
        </member>
        <member name="F:Syncfusion.Office.VbaProject.m_lockviewData">
            <summary>
            Data preserved for lock view.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.VbaProject.#ctor(System.Object)">
            <summary>
            Initializes the Vba Project.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.VbaProject.SystemType">
            <summary>
            Specifies the type of System that the Vba project created.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.VbaProject.Name">
            <summary>
            Specifies the Vba project name.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.VbaProject.Description">
            <summary>
            Specifies the Vba project description details.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.VbaProject.Password">
            <summary>
            Specifies the password for the Vba project.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.VbaProject.Constants">
            <summary>
            Specifies the vba project contants.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.VbaProject.LockView">
            <summary>
            Indicates whether to lock the project view.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.VbaProject.HelpFile">
            <summary>
            Specifies the path of the Help file.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.VbaProject.SecondaryHelpFile">
            <summary>
            Specifies the secondary help file.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.VbaProject.HelpContextId">
            <summary>
            Indicates the help context id in the help file.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.VbaProject.LcId">
            <summary>
            LCID of the project.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.VbaProject.LcInvoke">
            <summary>
            LC Invoke
            </summary>
        </member>
        <member name="P:Syncfusion.Office.VbaProject.CodePage">
            <summary>
            Specifies the code page no of the Encoding used in the Vba project.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.VbaProject.MajorVersion">
            <summary>
            Major version
            </summary>
        </member>
        <member name="P:Syncfusion.Office.VbaProject.MinorVersion">
            <summary>
            Minor version
            </summary>
        </member>
        <member name="P:Syncfusion.Office.VbaProject.EncodingType">
            <summary>
            Encoding used in the Vba project.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.VbaProject.ProjectCLSID">
            <summary>
            Vba project Class Id
            </summary>
        </member>
        <member name="P:Syncfusion.Office.VbaProject.Modules">
            <summary>
            Contains the Vba project module collection.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.VbaProject.References">
            <summary>
            Contains the Vba project references.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.VbaProject.ParseDirStream(System.IO.Stream)">
            <summary>
            Parse Dir Stream
            </summary>
            <param name="dirStream">Stream</param>
        </member>
        <member name="M:Syncfusion.Office.VbaProject.ParseModuleStream(System.IO.Stream,Syncfusion.Office.VbaModule)">
            <summary>
            Parse Module Stream
            </summary>
            <param name="storage"></param>
        </member>
        <member name="M:Syncfusion.Office.VbaProject.ParseProjectStream(System.IO.Stream)">
            <summary>
            Parse Project stream
            </summary>
            <param name="rootStorage">Vba root storage</param>
        </member>
        <member name="M:Syncfusion.Office.VbaProject.ParseProjectInfo(System.IO.Stream)">
            <summary>
            Parse project properties.
            </summary>
            <param name="dirData">Dir stream</param>
        </member>
        <member name="M:Syncfusion.Office.VbaProject.ParseReferences(System.IO.Stream)">
            <summary>
            Parse project references
            </summary>
            <param name="dirData">Dir stream</param>
        </member>
        <member name="M:Syncfusion.Office.VbaProject.SerializeVbaStream(System.IO.Stream)">
            <summary>
            Creates Vba Project stream
            </summary>
            <param name="vbaRootStorage">Root storage</param>
        </member>
        <member name="M:Syncfusion.Office.VbaProject.SerializeDirStream(System.IO.Stream)">
            <summary>
            Creates Dir stream
            </summary>
        </member>
        <member name="M:Syncfusion.Office.VbaProject.SerializeProjectInfo(System.IO.Stream)">
            <summary>
            Writes project properties into Dir stream
            </summary>
            <param name="dirStream">Dir stream</param>
        </member>
        <member name="M:Syncfusion.Office.VbaProject.SerializeReferences(System.IO.Stream)">
            <summary>
            Serialize refereces
            </summary>
            <param name="stream">Dir stream</param>
        </member>
        <member name="M:Syncfusion.Office.VbaProject.SerializeModules(System.IO.Stream)">
            <summary>
            Serialize modules
            </summary>
            <param name="stream">Die Stream</param>
        </member>
        <member name="M:Syncfusion.Office.VbaProject.SerializeModuleStream(Syncfusion.Office.VbaModule,System.IO.Stream)">
            <summary>
            Creates module stream
            </summary>
        </member>
        <member name="M:Syncfusion.Office.VbaProject.SerializeProjectStream(System.IO.Stream)">
            <summary>
            Creates project stream.
            </summary>
            <param name="vbaRootStorage">Root storage</param>
        </member>
        <member name="M:Syncfusion.Office.VbaProject.SerializeProjectWmStream(System.IO.Stream)">
            <summary>
            Creates project wm stream
            </summary>
            <param name="vbaRootStorage">Root storage</param>
        </member>
        <member name="M:Syncfusion.Office.VbaProject.ConvertHexString(System.String)">
            <summary>
            Converts Hex string into byte array
            </summary>
            <param name="value">Hex value</param>
            <returns>byte array</returns>
        </member>
        <member name="M:Syncfusion.Office.VbaProject.ConvertByteArray(System.Byte[])">
            <summary>
            Converts the byte array into Hex string
            </summary>
            <param name="value">byte array</param>
            <returns>Hex value</returns>
        </member>
        <member name="M:Syncfusion.Office.VbaProject.ReadUInt32(System.IO.Stream)">
            <summary>
            Extracts UInt32 value from the stream.
            </summary>
            <param name="stream">Stream to read data from.</param>
            <returns>Extracted value.</returns>
        </member>
        <member name="M:Syncfusion.Office.VbaProject.ReadInt16(System.IO.Stream)">
            <summary>
            Extracts UInt16 value from the stream.
            </summary>
            <param name="stream">Stream to read data from.</param>
            <returns>Extracted value.</returns>
        </member>
        <member name="M:Syncfusion.Office.VbaProject.ReadUInt16(System.IO.Stream)">
            <summary>
            Extracts unsigned UInt16 value from the stream.
            </summary>
            <param name="stream">Stream to read data from.</param>
            <returns>Extracted value.</returns>
        </member>
        <member name="M:Syncfusion.Office.VbaProject.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="M:Syncfusion.Office.VbaProject.Clone(System.Object)">
            <summary>
            Clone
            </summary>
            <returns>Vba Project Base</returns>
        </member>
        <member name="T:Syncfusion.Office.CollectionImpl">
            <summary>
            Represents the collection interface.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.CollectionImpl.Count">
            <summary>
            Gets the number of Math in the document.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.CollectionImpl.InnerList">
            <summary>
            Gets the innerList.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.CollectionImpl.#ctor(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Office.CollectionImpl"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.CollectionImpl.Close">
            <summary>
            Closes this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.CollectionImpl.Add(System.Object)">
            <summary>
            Adds the item in collection
            </summary>
        </member>
        <member name="M:Syncfusion.Office.CollectionImpl.Remove(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Removes the item in collection
            </summary>
            <param name="item">Represents a <see cref="T:Syncfusion.Office.IOfficeMathEntity"/> to remove.</param>
        </member>
        <member name="M:Syncfusion.Office.CollectionImpl.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.DocumentParser">
            <summary>
            Represents an abstract class to read MathML item and its format in document
            </summary>
        </member>
        <member name="M:Syncfusion.Office.DocumentParser.ParseMathControlFormat(System.Xml.XmlReader,Syncfusion.Office.IOfficeMathFunctionBase)">
            <summary>
            Parse the control properties of MathML elements.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.DocumentParser.ParseMathRun(System.Xml.XmlReader,Syncfusion.Office.IOfficeMathRunElement)">
            <summary>
            Parse the MathML run elements.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.MatrixColumnProperties.Count">
            <summary>
            Gets an integer that represents the number of columns the property is applied to
            </summary>
        </member>
        <member name="P:Syncfusion.Office.MatrixColumnProperties.Alignment">
            <summary>
            Gets or sets a MathHorizontalAlignment constant that represents the horizontal alignment for arguments in a matrix column.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MatrixColumnProperties.Clone(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Clones the item
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Office.MatrixColumnProperties.Close">
            <summary>
            Closes the instances.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.DocumentSerializer">
            <summary>
            Represents an abstract class to write the MathML item and its format in document
            </summary>
        </member>
        <member name="M:Syncfusion.Office.DocumentSerializer.SerializeRunCharacterFormat(Syncfusion.Office.IOfficeMathRunElement)">
            <summary>
            Serializes the character format of Math run element
            </summary>
        </member>
        <member name="M:Syncfusion.Office.DocumentSerializer.SerializeControlProperties(Syncfusion.Office.IOfficeRunFormat)">
            <summary>
            Serializes control properties of all functions in mathematical equation
            </summary>
            <param name="mathFunction">Represents a math function</param>
        </member>
        <member name="M:Syncfusion.Office.DocumentSerializer.SerializeMathRun(Syncfusion.Office.IOfficeMathRunElement)">
            <summary>
            Serializes paragraph items.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.ICollectionBase">
            <summary>
            Represents base interface for collections.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.ICollectionBase.Count">
            <summary>
             Gets the number of items in collection.
            </summary>
            <value>The <b>integer</b> represents the count of the items.</value>
        </member>
        <member name="M:Syncfusion.Office.ICollectionBase.Remove(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Removes the item from the collection.
            </summary>
            <param name="item">Represents a <see cref="T:Syncfusion.Office.IOfficeMathEntity"/> to remove.</param>
        </member>
        <member name="M:Syncfusion.Office.ICollectionBase.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.IOfficeMathBar">
            <summary>
            Represents an equation with a bar above or below the base. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathBar.BarTop">
             <summary>
            Gets or sets a boolean that represents the position of a bar in a bar object.
             </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathBar.Equation">
            <summary>
            Gets a <see cref="T:Syncfusion.Office.OfficeMath"/> object that represents the base of the specified equation object. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathBar.ControlProperties">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Office.IOfficeRunFormat"/> object that represent the control property of MathML function.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.IOfficeMathBorderBox">
             <summary>
            Represents an interface for border box.
             </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathBorderBox.HideTop">
            <summary>
            Gets or sets a value that represents whether to hide the top border of an equation's bounding box.
            </summary>
            <value><b>True</b> if to hide the top border; otherwise, <b>false</b>.</value>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathBorderBox.HideBottom">
            <summary>
            Gets or sets a value that represents whether to hide the bottom border of an equation's bounding box. 
            </summary>
            <value><b>True</b> if to hide the bottom border; otherwise, <b>false</b>.</value>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathBorderBox.HideRight">
             <summary>
            Gets or sets a value that represents whether to hide the right border of an equation's bounding box. 
             </summary>
             <value><b>True</b> if to hide the right border; otherwise, <b>false</b>.</value>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathBorderBox.HideLeft">
            <summary>
            Gets or sets a value that represents whether to hide the left border of an equation's bounding box.
            </summary>
            <value><b>True</b> if to hide the left border; otherwise, <b>false</b>.</value>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathBorderBox.StrikeDiagonalUp">
            <summary>
            Gets or sets a value that represents a diagonal strikethrough from lower left to upper right. 
            </summary>
            <value><b>True</b> if diagonal strikethrough from lower left to upper right; otherwise, <b>false</b>.</value>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathBorderBox.StrikeDiagonalDown">
            <summary>
            Gets or sets a value that represents a diagonal strikethrough from upper left to lower right.
            </summary>
            <value><b>True</b> if diagonal strikethrough from upper left to lower right; otherwise, <b>false</b>.</value>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathBorderBox.StrikeVertical">
            <summary>
            Gets or sets a value that represents a vertical strikethrough. 
            </summary>
            <value><b>True</b> if vertical strikethrough ; otherwise, <b>false</b>.</value>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathBorderBox.StrikeHorizontal">
             <summary>
            Gets or sets a value that represents a Horizontal strikethrough. 
             </summary>
             <value><b>True</b> if horizontal strikethrough; otherwise, <b>false</b>.</value>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathBorderBox.Equation">
            <summary>
            Specifies a <see cref="T:Syncfusion.Office.IOfficeMath"/> object that represents the base of the specified equation object.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathBorderBox.ControlProperties">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Office.IOfficeRunFormat"/> object that represent the control property of MathML function.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.IOfficeMathBox">
             <summary>
            Represents an interface for Box function.
             </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathBox.Alignment">
            <summary>
            Gets or sets a value that represents if the operator emulator must be used as an alignment point from which the next line operator emulator starts. 
            </summary>
            <value><b>True</b> if the operator emulator must be used as an alignment point; otherwise, <b>false</b>.</value>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathBox.EnableDifferential">
            <summary>
            Gets or sets a value that states whether the box acts as the mathematical differential.
            </summary>
            <value><b>True</b> if the box acts as the mathematical differential; otherwise, <b>false</b>.</value>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathBox.NoBreak">
            <summary>
            Gets or sets a value whether breaks are allowed inside the box object.
            </summary>
            <value><b>True</b> if breaks are allowed inside the box object; otherwise, <b>false</b>.</value>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathBox.OperatorEmulator">
            <summary>
            Gets or sets a value that states if the box and its contents behave as a single operator and inherit the properties of an operator. 
            </summary>
            <value><b>True</b> if the box and its contents behave as a single operator and inherit the properties of an operator; otherwise, <b>false</b>.</value>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathBox.Break">
            <summary>
            Represents individual line breaks in an equation. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathBox.Equation">
            <summary>
            Specifies a <see cref="T:Syncfusion.Office.OfficeMath"/> object that represents the base of the specified equation object.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathBox.ControlProperties">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Office.IOfficeRunFormat"/> object that represent the control property of MathML function.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.IOfficeMathDelimiter">
             <summary>
            Represents an interface for Delimiter function.
             </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathDelimiter.BeginCharacter">
            <summary>
            Gets or sets a string that represents the beginning delimiter character.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathDelimiter.EndCharacter">
            <summary>
            Gets or sets a string that represents the ending delimiter character.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathDelimiter.IsGrow">
            <summary>
            Gets or sets a value that represents whether delimiter characters grow to the full height of the arguments that they contain. 
            </summary>
            <value><b>True</b> if delimiter characters grow to the full height of the arguments that they contain; otherwise, <b>false</b>.</value>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathDelimiter.Seperator">
            <summary>
            Gets or sets a string that represents the separator character in a Math delimiter object when the Math delimiter object contains two or more arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathDelimiter.DelimiterShape">
            <summary>
            Gets or sets a mathShapeType constant that represents the appearance of delimiters.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathDelimiter.Equation">
            <summary>
            Specifies a <see cref="T:Syncfusion.Office.IOfficeMaths"/> object that represents the base of the specified equation object.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathDelimiter.ControlProperties">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Office.IOfficeRunFormat"/> object that represent the control property of MathML function.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.IOfficeMathEquationArray">
             <summary>
            Represents a mathematical equation array object, consisting of one or more equations that can be vertically justified as a unit respect to surrounding text on the line.
             </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathEquationArray.VerticalAlignment">
            <summary>
            Gets or sets the vertical alignment for an equation array.
            </summary>
             <value>The <see cref="T:Syncfusion.Office.MathVerticalAlignment"/> member that specifies vertical alignment for an equation array.</value>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathEquationArray.ExpandEquationContainer">
            <summary>
            Gets or sets a boolean that represents whether the equations in an equation array are distributed equally within the margins of its container, such as a column, cell, or page width.
            </summary>
            <remarks>The container for an equation array may be the margins of a page, the margins of a table cell, or another container in which the equation may exist.</remarks>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathEquationArray.ExpandEquationContent">
            <summary>
            Gets or sets a boolean that represents whether the equations in an equation array are spaced to the maximum width of the equation array.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathEquationArray.RowSpacing">
            <summary>
            Gets or sets an float that represents the spacing between the rows in an equation array.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathEquationArray.RowSpacingRule">
             <summary>
            Gets or sets spacing for an equation array.
            </summary>
             <value>The <see cref="T:Syncfusion.Office.SpacingRule"/> member that specifies the spacing in an equation array.</value>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathEquationArray.Equation">
             <summary>
            Returns an <see cref="T:Syncfusion.Office.IOfficeMaths"/> object that represents the base of the specified equation object.
             </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathEquationArray.ControlProperties">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Office.IOfficeRunFormat"/> object that represent the control property of MathML function.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.IOfficeMathFraction">
            <summary>
            Represents a fraction, consisting of a numerator and denominator separated by a fraction bar.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathFraction.FractionType">
            <summary> 
            Gets or sets a <see cref="T:Syncfusion.Office.MathFractionType"/> constant that represents the layout of a fraction. Default value is <b>bar</b>.   
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathFraction.Denominator">
            <summary>
            Gets an <see cref="T:Syncfusion.Office.IOfficeMath"/> object that represents the denominator for an equation that contains a fraction.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathFraction.Numerator">
            <summary>
            Gets an <see cref="T:Syncfusion.Office.IOfficeMath"/> object that represents the numerator for a fraction.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathFraction.ControlProperties">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Office.IOfficeRunFormat"/> object that represent the control property of MathML function.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.IOfficeMathFunction">
             <summary>
            Represents the application of a function or an argument in an equation that consists of a function name, such as sin or cos, and an argument.
             </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathFunction.Equation">
            <summary>
            Gets a <see cref="T:Syncfusion.Office.OfficeMath"/> object that represents the base of the specified equation object. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathFunction.FunctionName">
            <summary>
            Gets a <see cref="T:Syncfusion.Office.OfficeMath"/> object that represents the name of a mathematical function, such as sin or cos. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathFunction.ControlProperties">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Office.IOfficeRunFormat"/> object that represent the control property of MathML function.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.IOfficeMathGroupCharacter">
            <summary>
            Represents a group character object, consisting of a character drawn above or below text, often with the purpose of visually grouping items.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathGroupCharacter.HasAlignTop">
            <summary>
            Gets or sets a value that represents whether the grouping character is aligned vertically with the surrounding text or whether the base text that is either above or below the grouping character is aligned vertically with the surrounding text. Read/write. 
            </summary>
             <value><b>True</b> if the grouping character is aligned vertically with the surrounding text ; otherwise, <b>false</b>.</value>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathGroupCharacter.GroupCharacter">
            <summary>
            Gets or sets a string that represents the character placed above or below text in a group character object. Read/write. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathGroupCharacter.HasCharacterTop">
            <summary>
            Gets or sets a valuen that represents whether the grouping character is placed above the base text of the group character object. Read/write. 
            </summary>
             <value><b>True</b> if the grouping character is placed above the base text of the group character object; otherwise, <b>false</b>.</value>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathGroupCharacter.Equation">
            <summary>
             Gets an <see cref="T:Syncfusion.Office.IOfficeMath"/> object that represents the base of the specified equation object.                                         
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathGroupCharacter.ControlProperties">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Office.IOfficeRunFormat"/> object that represent the control property of MathML function.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.IOfficeMathLeftScript">
            <summary>
            Represents the interface of an equation that contains a superscript or subscript to the left of the base.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathLeftScript.Subscript">
            <summary>
            Gets the subscript for a Leftscript object. Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathLeftScript.Superscript">
            <summary>
            Gets the superscript for a Leftscript object. Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathLeftScript.Equation">
            <summary>
             Gets an <see cref="T:Syncfusion.Office.IOfficeMath"/> object that represents the base of the specified equation object.                                         
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathLeftScript.ControlProperties">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Office.IOfficeRunFormat"/> object that represent the control property of MathML function.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.IOfficeMathLimit">
             <summary>
            Represents an interface for MathML limit equation.
             </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathLimit.LimitType">
            <summary>
            Gets the type of the limit.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathLimit.Equation">
            <summary>
             Gets an <see cref="T:Syncfusion.Office.IOfficeMath"/> object that represents the base of the specified equation object.                                         
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathLimit.Limit">
            <summary>
            Gets an <see cref="T:Syncfusion.Office.IOfficeMath"/> object that represents the limit of the lower or upper limit object. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathLimit.ControlProperties">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Office.IOfficeRunFormat"/> object that represent the control property of MathML function.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.IOfficeMathMatrix">
             <summary>
            Represents an interface for mathematical matrix, which contain elements in set of rows and columns.
             </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathMatrix.VerticalAlignment">
            <summary>
            Gets or sets MathVerticalAlignment constant that represents the vertical alignment for a matrix.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathMatrix.ColumnWidth">
            <summary>
            Gets or sets a float that represents the spacing between columns in a matrix.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathMatrix.ColumnSpacingRule">
            <summary>
            Gets or sets a MathSpacingRule constant that represents the spacing rule for the space that appears between columns in a matrix.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathMatrix.Columns">
            <summary>
            Gets  a <see cref= "T:Syncfusion.Office.OfficeMathMatrixColumns" /> object that represents the columns in a matrix.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathMatrix.ColumnSpacing">
            <summary>
            Gets or sets an float that represents the spacing for columns in a matrix. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathMatrix.HidePlaceHolders">
            <summary>
            Gets or sets a boolean that represents whether placeholders in a matrix are hidden from display
            </summary>
            <value><b>True</b> placeholders do not appear in the matrix; otherwise, <b>false</b>placeholders appear in the matrix.</value>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathMatrix.Rows">
            <summary>
            Specifies the <see cref="T:Syncfusion.Office.IOfficeMathMatrixRows"/> object that represent a matrix Row.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathMatrix.RowSpacing">
            <summary>
            Gets or sets an float that represents the spacing for rows in a matrix. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathMatrix.RowSpacingRule">
            <summary>
            Gets or sets a MathSpacingRule constant that represents the spacing rule for rows in a matrix.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathMatrix.ControlProperties">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Office.IOfficeRunFormat"/> object that represent the control property of MathML function.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.IOfficeMathMatrixColumns">
             <summary>
            Represents an interface for MathMatrixColumns
             </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathMatrixColumns.Item(System.Int32)">
            <summary>
            Gets the specified item in the collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.IOfficeMathMatrixColumns.Add(System.Int32)">
            <summary>
            Adds <see cref="T:Syncfusion.Office.IOfficeMathMatrixColumn"/> instance to the collection at specified index.
            </summary>
            <param name="index">The Index, where to add the <see cref="T:Syncfusion.Office.IOfficeMathMatrixColumn"/> instance.</param>
            <returns>Returns the newly added <see cref="T:Syncfusion.Office.IOfficeMathMatrixColumn"/>. </returns>
        </member>
        <member name="M:Syncfusion.Office.IOfficeMathMatrixColumns.Add">
            <summary>
            Adds <see cref="T:Syncfusion.Office.IOfficeMathMatrixColumn"/> instance to the collection.
            </summary>
            <returns>Returns the newly added <see cref="T:Syncfusion.Office.IOfficeMathMatrixColumn"/>. </returns>
        </member>
        <member name="T:Syncfusion.Office.IOfficeMathMatrixRows">
             <summary>
            Represents an interface for matrix rows.
             </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathMatrixRows.Item(System.Int32)">
            <summary>
            Gets the specified item in the collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.IOfficeMathMatrixRows.Add(System.Int32)">
            <summary>
            Adds <see cref="T:Syncfusion.Office.IOfficeMathMatrixRow"/> instance to the collection at specified index.
            </summary>
            <param name="index">The Index, where to add the <see cref="T:Syncfusion.Office.IOfficeMathMatrixRow"/> instance.</param>
            <returns>Returns the newly added <see cref="T:Syncfusion.Office.IOfficeMathMatrixRow"/>. </returns>
        </member>
        <member name="M:Syncfusion.Office.IOfficeMathMatrixRows.Add">
            <summary>
            Adds <see cref="T:Syncfusion.Office.IOfficeMathMatrixRow"/> instance to the collection.
            </summary>
            <returns>Returns the newly added <see cref="T:Syncfusion.Office.IOfficeMathMatrixRow"/>. </returns>
        </member>
        <member name="T:Syncfusion.Office.IOfficeMathNArray">
            <summary> 
            Represents mathematical n-ary object, consisting of an n-ary object, a base (or operand), and optional upper limits and lower limits.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathNArray.NArrayCharacter">
            <summary>  
            Gets or sets a string that represents a character used as the n-ary operator. Default value is <b>integral</b>.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathNArray.HasGrow">
            <summary>            
            Gets or sets a boolean that represents whether n-ary operators grow to the full height of the arguments that they contain.Default value is <b>false</b>.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathNArray.HideLowerLimit">
            <summary>  
            Gets or sets a boolean that represents whether to hide the lower limit of an n-ary operator. Default value is <b>false</b>.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathNArray.HideUpperLimit">
            <summary>  
            Gets or sets a boolean that represents whether to hide the upper limit of an n-ary operator. Default value is <b>false</b>.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathNArray.SubSuperscriptLimit">
             <summary>  
            Gets or sets a boolean that represents the positioning of n-ary limits in the subscript-superscript or upper limit-lower limit position. Default value is <b>true</b> for integral and <b>false</b> for all other <see cref="T:Syncfusion.Office.IOfficeMathNArray"/> object.
             </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathNArray.Equation">
            <summary>
             Gets an <see cref="T:Syncfusion.Office.IOfficeMath"/> object that represents the base of the specified equation object.                                         
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathNArray.Subscript">
            <summary> 
            Gets an <see cref="T:Syncfusion.Office.IOfficeMath"/> object that represents the lower limit of an n-ary operator.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathNArray.Superscript">
             <summary> 
            Gets an <see cref="T:Syncfusion.Office.IOfficeMath"/> object that represents the upper limit of an n-ary operator.
             </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathNArray.ControlProperties">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Office.IOfficeRunFormat"/> object that represent the control property of MathML function.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.IOfficeMathParagraph">
            <summary>
            Represents the OfficeMathPara that can be used to format a top level MathML element.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathParagraph.Justification">
            <summary>
            Gets or sets Office <see cref="T:Syncfusion.Office.MathJustification"/>. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathParagraph.Maths">
            <summary>
            Gets a collection of equations. Use the <see cref="T:Syncfusion.Office.OfficeMaths"/> object to access individual members of the collection.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathParagraph.Owner">
            <summary>
            Gets the owner.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.IOfficeMathPhantom">
             <summary>
            Represents a phantom object, which has two primary uses: (1) adding the spacing of the phantom base without displaying that base or (2) suppressing part of the glyph from spacing considerations
             </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathPhantom.Show">
            <summary>
            Gets or sets a boolean that represents whether the contents of a phantom object are visible. 
            </summary>
            <value><b>True</b> phantom base is shown; otherwise, <b>false</b>phantom base is hidden.</value>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathPhantom.Transparent">
             <summary>
             Gets or sets a boolean that represents that the contents of the phantom are visible but that the height is not taken into account in the spacing of the layout.  
             </summary>
             <value><b>True</b> phantom base is shown; otherwise, <b>false</b>phantom base is hidden.</value>
            bool Smash { get; set; }
             <summary>
             Gets or sets a boolean that represents whether a phantom object is transparent. 
             </summary>
             <value><b>True</b> phantom object is transparent; otherwise, <b>false</b>phantom object is not transparent .</value>       
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathPhantom.ZeroAscent">
            <summary>
            Gets or sets a boolean that represents whether the ascent of the phantom contents is ignored in the spacing of the layout. 
            </summary>
            <value><b>True</b> ascent of the contents of the phantom is not taken into account during layout; otherwise, <b>false</b>phantom does have ascent.</value>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathPhantom.ZeroDescent">
            <summary>
            Gets or sets a boolean that represents whether the descent of the phantom contents is ignored in the spacing of the layout. 
            </summary>
            <value><b>True</b> descent of the contents of the phantom is taken into account during layout.; otherwise, <b>false</b>phantom does have descent.</value>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathPhantom.ZeroWidth">
            <summary>
            Gets or sets a boolean that represents whether the width of a phantom object is ignored in the spacing of the layout.
            </summary>
            <value><b>True</b>width of the contents of the phantom is not taken into account during layout.; otherwise, <b>false</b>phantom does have width.</value>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathPhantom.Equation">
            <summary>
            Gets a <see cref="T:Syncfusion.Office.OfficeMath"/> object that represents the base of the specified equation object. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathPhantom.ControlProperties">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Office.IOfficeRunFormat"/> object that represent the control property of MathML function.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.IOfficeMathRadical">
             <summary>
            Represents an interface for radical function.
             </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathRadical.Degree">
            <summary>
            Gets the math object that represents the degree for a radical. Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathRadical.Equation">
            <summary>
             Gets an <see cref="T:Syncfusion.Office.IOfficeMath"/> object that represents the base of the specified equation object.                                         
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathRadical.HideDegree">
            <summary>
            Gets or sets a value that represents whether to hide the degree for a radical. 
            </summary>
            <value><b>True</b> if to hide the degree for a radical; otherwise, <b>false</b>.</value>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathRadical.ControlProperties">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Office.IOfficeRunFormat"/> object that represent the control property of MathML function.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.IOfficeMaths">
            <summary>
            Represents an interface for MathML collection.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMaths.Item(System.Int32)">
            <summary>
            Represents the specified item in the collection.
            </summary>        
        </member>
        <member name="M:Syncfusion.Office.IOfficeMaths.Add(System.Int32)">
            <summary>
            Adds <see cref="T:Syncfusion.Office.IOfficeMath"/> instance to the collection at specified index.
            </summary>
            <param name="index">The Index, where to add the <see cref="T:Syncfusion.Office.IOfficeMath"/> instance.</param>
            <returns>Returns the newly added <see cref="T:Syncfusion.Office.IOfficeMath"/>. </returns>
        </member>
        <member name="M:Syncfusion.Office.IOfficeMaths.Add">
            <summary>
            Adds <see cref="T:Syncfusion.Office.IOfficeMath"/> instance to the collection.
            </summary>
            <returns>Returns the newly added <see cref="T:Syncfusion.Office.IOfficeMath"/>. </returns>
        </member>
        <member name="T:Syncfusion.Office.IOfficeMathBreak">
             <summary>
            Represents an interface to maintain break between the equation. 
             </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathBreak.AlignAt">
             <summary>
            Gets or sets the integer that represents the operator in one line.
             </summary>
        </member>
        <member name="T:Syncfusion.Office.IOfficeMathBaseCollection">
             <summary>
            Represents an interface for function collection.
             </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathBaseCollection.Item(System.Int32)">
            <summary>
            Represents the specified item in the collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.IOfficeMathBaseCollection.Add(System.Int32,Syncfusion.Office.MathFunctionType)">
            <summary>
            Adds <see cref="T:Syncfusion.Office.IOfficeMathFunctionBase"/> instance to the collection at specified index.
            </summary>
            <param name="index">The Index, where to add the <see cref="T:Syncfusion.Office.IOfficeMathFunctionBase"/> instance.</param>
            <param name="mathFunctionType"> Represents the type of function to add.</param>
            <returns>Returns the newly added <see cref="T:Syncfusion.Office.IOfficeMathFunctionBase"/>. </returns>
        </member>
        <member name="M:Syncfusion.Office.IOfficeMathBaseCollection.Add(Syncfusion.Office.MathFunctionType)">
            <summary>
            Adds <see cref="T:Syncfusion.Office.IOfficeMathFunctionBase"/> instance to the collection.
            </summary>
            <returns>Returns the newly added <see cref="T:Syncfusion.Office.IOfficeMathFunctionBase"/>. </returns>
        </member>
        <member name="T:Syncfusion.Office.IOfficeMathAccent">
            <summary>
            Returns an <see cref="T:Syncfusion.Office.IOfficeMathAccent"/> object that represents a base character with a combining accent mark. Read-only. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathAccent.AccentCharacter">
            <summary>
            Gets or sets a string that represents the accent character for the <see cref="T:Syncfusion.Office.IOfficeMathAccent"/> object. Read/write.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathAccent.Equation">
            <summary>
            Gets a <see cref="T:Syncfusion.Office.IOfficeMath"/> object that represents the base of the specified equation object. Read-only. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathAccent.ControlProperties">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Office.IOfficeRunFormat"/> object that represent the control property of MathML function.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.IOfficeRunFormat">
            <summary>
            Represents an interface to maintain character format of <see cref="T:Syncfusion.Office.IOfficeMathRunElement"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.IOfficeRunFormat.Clone">
            <summary>
            Creates a duplicate copy of character format
            </summary>
            <returns>The reference of the newly created object.</returns>
            <remarks>This API is used for internal purpose to clone <see cref="T:Syncfusion.Office.IOfficeRunFormat"/>.</remarks>
        </member>
        <member name="M:Syncfusion.Office.IOfficeRunFormat.Dispose">
            <summary>
            Releases all resources used by the object.
            </summary>
            <remarks>This API is used for internal purpose to dispose the resources used by  <see cref="T:Syncfusion.Office.IOfficeRunFormat"/>.</remarks>
        </member>
        <member name="T:Syncfusion.Office.IOfficeMathFormat">
            <summary>
            Represents the <see cref="T:Syncfusion.Office.OfficeMathFormat"/> object that can be used for formatting the character of the mathematical text.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathFormat.HasAlignment">
            <summary>
            Gets or sets a boolean that represents the alignment property. When multiple alignment point is set, lastly set alignment point is considered. Default value is <b>false</b>.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathFormat.Break">
            <summary>
            Gets or sets individual line breaks in an equation.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathFormat.HasLiteral">
            <summary>
            Gets or sets a boolean that represents whether the characters in the run are literal (i.e., they are to be interpreted literally and not be built up based on any implied mathematical meaning). Default value is <b>false</b>.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathFormat.HasNormalText">
            <summary>
            Gets or sets a boolean that represents whether the run is normal text, i.e., math italics and math spacing are not applied. Default value is <b>false</b>.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathFormat.Font">
            <summary>
            Gets or sets the script applied to the characters in the run. Default value is <b>Roman</b>.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathFormat.Style">
            <summary>
            Gets or sets the style applied to the characters in the run. Default style is italic.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.IOfficeMathBreaks">
            <summary>
            Represents an interface for Math break collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.IOfficeMathBreaks.Add(System.Int32)">
            <summary>
            Adds <see cref="T:Syncfusion.Office.IOfficeMathBreak"/> instance to the collection at specified index.
            </summary>
            <param name="index">The Index, where to add the <see cref="T:Syncfusion.Office.IOfficeMathBreak"/> instance.</param>
            <returns>Returns the newly added <see cref="T:Syncfusion.Office.IOfficeMathBreak"/>. </returns>
        </member>
        <member name="M:Syncfusion.Office.IOfficeMathBreaks.Add">
            <summary>
            Adds <see cref="T:Syncfusion.Office.IOfficeMathBreak"/> instance to the collection.
            </summary>
            <returns>Returns the newly added <see cref="T:Syncfusion.Office.IOfficeMathBreak"/>. </returns>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathBreaks.Item(System.Int32)">
            <summary>
            Gets mathBreak object that represents the specified item in the collection.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.IOfficeMathEntity">
            <summary>
            Represents Office Math entity.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathEntity.OwnerMathEntity">
            <summary>
             Gets the owner.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.IOfficeMathRightScript">
            <summary>
            Represents an equation with a base that contains a superscript or subscript. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathRightScript.IsSkipAlign">
            <summary>
            Gets or sets a boolean that represents whether to horizontally align subscripts and superscripts in the <see cref="T:Syncfusion.Office.IOfficeMathRightScript"/> object. Read/write. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathRightScript.Subscript">
            <summary>
            Gets an <see cref="T:Syncfusion.Office.IOfficeMath"/> object that represents the subscript for a <see cref="T:Syncfusion.Office.IOfficeMathRightScript"/> object. Read-only. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathRightScript.Superscript">
            <summary>
            Gets an <see cref="T:Syncfusion.Office.IOfficeMath"/> object that represents the superscript for a <see cref="T:Syncfusion.Office.IOfficeMathRightScript"/> object. Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathRightScript.Equation">
            <summary>
            Gets an <see cref="T:Syncfusion.Office.IOfficeMath"/> object that represents the base of the specified equation object. Read-only. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathRightScript.ControlProperties">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Office.IOfficeRunFormat"/> object that represent the control property of MathML function.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.IOfficeMathScript">
            <summary>
            Represents an equation with a base that contains a subscript or superscript.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathScript.ScriptType">
            <summary>
            Gets or sets a <see cref="T:Syncfusion.Office.MathScriptType"/> type to represent either a subscript or superscript.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathScript.Equation">
            <summary>
             Gets an <see cref="T:Syncfusion.Office.IOfficeMath"/> object that represents the base of the specified equation object.                                         
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathScript.Script">
            <summary>
            Gets the type of the script.                                       
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathScript.ControlProperties">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Office.IOfficeRunFormat"/> object that represent the control property of MathML function.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.IOfficeMathRunElement">
            <summary>
            Represents <see cref="T:Syncfusion.Office.OfficeMathRunElement"/> object that provides the base implementation for all <see cref="T:Syncfusion.Office.IOfficeMathParagraph"/> items.  
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathRunElement.Item">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Office.IOfficeRun"/> object that represents a mathematical text.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathRunElement.MathFormat">
            <summary>
            Gets the <see cref="T:Syncfusion.Office.OfficeMathFormat"/> object that can be used for formatting the character of the mathematical text.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.IOfficeMathFunctionBase">
            <summary>
            Represents the  Mathematical function.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathFunctionBase.Type">
            <summary>
            Gets the type of the mathematical function.Read-Only.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.OfficeMath">
            <summary>
            Represents an equation. Math objects are members of the <see cref="T:Syncfusion.Office.OfficeMaths"/> collection.                
            </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMath.m_functions">
            <summary>
            Specifies an <see cref="T:Syncfusion.Office.IOfficeMathBaseCollection"/> collection that represents the functions contained within an equation.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMath.m_parentCol">
            <summary>
            Specifies the <see cref="T:Syncfusion.Office.IOfficeMathMatrixColumn"/> object that represents the parent column in a matrix.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMath.m_parentRow">
            <summary>
            Specifies the <see cref="T:Syncfusion.Office.IOfficeMathMatrixRow"/> object that represents the parent row in a matrix.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMath.m_breaks">
            <summary>
            Specifies a <see cref="T:Syncfusion.Office.IOfficeMathBreaks"/> collection that represents the line breaks in an equation.Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMath.AlignPoint">
            <summary>
            Gets or sets an integer that represents the character position of the alignment point in the equation. Read/write.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMath.ArgumentSize">
            <summary>
            Gets or sets an integer that represents the script size of an argument.
            </summary>
            <value>The <b>int</b> that specifies the script size of an argument.</value>
        </member>
        <member name="P:Syncfusion.Office.OfficeMath.Functions">
            <summary>
            Gets or sets an <see cref="T:Syncfusion.Office.IOfficeMathBaseCollection"/> collection that represents the functions contained within an equation. Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMath.NestingLevel">
            <summary>
            Gets an integer that represents the nesting level for an <see cref="T:Syncfusion.Office.IOfficeMath"/> object. Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMath.OwnerColumn">
            <summary>
            Gets a <see cref="T:Syncfusion.Office.IOfficeMathMatrixColumn"/> object that represents the parent column in a matrix. Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMath.OwnerMath">
            <summary>
            Gets a <see cref="T:Syncfusion.Office.IOfficeMath"/> object that represents the parent element. Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMath.OwnerRow">
            <summary>
            Gets a <see cref="T:Syncfusion.Office.IOfficeMathMatrixRow"/> object that represents the parent row in a matrix. Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMath.Breaks">
            <summary>
            Gets a <see cref="T:Syncfusion.Office.IOfficeMathBreaks"/> collection that represents the line breaks in an equation.Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMath.PropertiesHash">
            <summary>
            Gets the propertieshash value.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMath.Item(System.Int32)">
            <summary>
            Gets or sets the value for the property with specified key.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMath.GetOwnerMath">
            <summary>
            Gets the owner math of the <see cref="T:Syncfusion.Office.IOfficeMath"/> object.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMath.Buildup">
            <summary>
            Converts all equations in the collection to professional format.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMath.ConvertToLiteralText">
            <summary>
            Converts all equations in the collection to literal text.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMath.ConvertToMathText">
            <summary>
            Converts all equations in the collection to math text.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMath.ConvertToNormalText">
            <summary>
            Converts all equations in the collection to normal text.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMath.Linearize">
            <summary>
            Converts all equations in the collection to linear format.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMath.Remove">
            <summary>
            Removes an equation from the collection of equations in a document, range, or selection.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMath.Close">
            <summary>
            Closes the object
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMath.CloneImpl(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Clones the item
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Office.OfficeMath.GetPropertyValue(System.Int32)">
            <summary>
            Gets the property value.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMath.SetPropertyValue(System.Int32,System.Object)">
            <summary>
            Sets the property value.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMath.GetDefValue(System.Int32)">
            <summary>
            Return default value of the respective key.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMath.HasValue(System.Int32)">
            <summary>
            Determines whether the specified property key has value.
            </summary>
            <param name="propertyKey">The property key.</param>
            <returns>
            	if the specified property key has value, set to <c>true</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Office.OfficeMath.HasKey(System.Int32)">
            <summary>
            Returns the value indicating whether the key exists in the properties collection.
            </summary>
            <param name="key">The <b>integer</b> that specifies the key.</param>
            <returns>
            	<b>True</b> if the specified key is present, otherwise <b>false</b>.
            </returns>
        </member>
        <member name="T:Syncfusion.Office.OfficeMathBar">
            <summary>
            Represents an equation with a bar above or below the base. 
            </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathBar.BarTopKey">
            <summary>
            Keys.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathBar.m_equation">
            <summary>
            Specifies a <see cref="T:Syncfusion.Office.OfficeMath"/> object that represents the base of the specified equation object. 
            </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathBar.m_propertiesHash">
            <summary>
            Holds the collection of properties values and its keys.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathBar.ControlProperties">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Office.IOfficeRunFormat"/> object that represent the control property of MathML function.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathBar.BarTop">
            <summary>
            Gets or sets a boolean that represents the position of a bar in a bar object.
            </summary>
            <value><b>True</b> mathematical overbar.<b>false</b>mathematical underbar.</value>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathBar.Equation">
            <summary>
            Gets a <see cref="T:Syncfusion.Office.OfficeMath"/> object that represents the base of the specified equation object. 
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathBar.#ctor(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Office.OfficeMathBar"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathBar.Clone(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Clones the item
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathBar.GetPropertyValue(System.Int32)">
            <summary>
            Gets the property value.
            </summary>
            <param name="propKey">The prop key.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathBar.SetPropertyValue(System.Int32,System.Object)">
            <summary>
            Sets the property value.
            </summary>
            <param name="propKey">The property key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathBar.GetDefValue(System.Int32)">
            <summary>
            Sets the default properties.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathBar.PropertiesHash">
            <summary>
            Gets the PropertiesHash value.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathBar.Item(System.Int32)">
            <summary>
            Gets or sets the value for the property with specified key.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathBar.HasValue(System.Int32)">
            <summary>
            Determines whether the specified property key has value.
            </summary>
            <param name="propertyKey">The property key.</param>
            <returns>
            	if the specified property key has value, set to <c>true</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathBar.HasKey(System.Int32)">
            <summary>
            Returns the value indicating whether the key exists in the properties collection.
            </summary>
            <param name="key">The <b>integer</b> that specifies the key.</param>
            <returns>
            	<b>True</b> if the specified key is present, otherwise <b>false</b>.
            </returns>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathBar.Close">
            <summary>
            Closes the instance.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.OfficeMathBorderBox">
             <summary>
            Represents the class for border box.
             </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathBorderBox.m_equation">
            <summary>
            Member that represents the Math object.       
            </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathBorderBox.m_propertiesHash">
            <summary>
            Member to hold the collection of properties values and its keys.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathBorderBox.m_controlProperties">
            <summary>
            Represents the character format
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathBorderBox.HideTop">
            <summary>
            Gets or sets a value that represents whether to hide the top border of an equation's bounding box.
            </summary>
            <returns><b>True</b>if to hide the top border; otherwise,<b>false</b>.</returns>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathBorderBox.HideBottom">
            <summary>
            Gets or sets a value that represents whether to hide the bottom border of an equation's bounding box. 
            </summary>
            <value><b>True</b> if to hide the bottom border; otherwise, <b>false</b>.</value>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathBorderBox.HideRight">
            <summary>
            Gets or sets a value that represents whether to hide the right border of an equation's bounding box. 
            </summary>
            <value><b>True</b> if to hide the right border; otherwise, <b>false</b>.</value>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathBorderBox.HideLeft">
            <summary>
            Gets or sets a value that represents whether to hide the left border of an equation's bounding box.
            </summary>
            <value><b>True</b> if to hide the left border; otherwise, <b>false</b>.</value>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathBorderBox.StrikeDiagonalUp">
            <summary>
            Gets or sets a value that represents a diagonal strikethrough from lower left to upper right. 
            </summary>
            <value><b>True</b> if diagonal strikethrough from lower left to upper right; otherwise, <b>false</b>.</value>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathBorderBox.StrikeDiagonalDown">
            <summary>
            Gets or sets a value that represents a diagonal strikethrough from upper left to lower right.
            </summary>
            <value><b>True</b> if diagonal strikethrough from upper left to lower right; otherwise, <b>false</b>.</value>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathBorderBox.StrikeVertical">
            <summary>
            Gets or sets a value that represents a Vertical strikethrough. 
            </summary>
            <value><b>True</b> if vertical strikethrough ; otherwise, <b>false</b>.</value>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathBorderBox.StrikeHorizontal">
            <summary>
            Gets or sets a value that represents a Horizontal strikethrough. 
            </summary>
            <value><b>True</b> if horizontal strikethrough ; otherwise, <b>false</b>.</value>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathBorderBox.Equation">
            <summary>
            Specifies a <see cref="T:Syncfusion.Office.IOfficeMath"/> object that represents the base of the specified equation object.Read-Only.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathBorderBox.ControlProperties">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Office.IOfficeRunFormat"/> object that represent the control property of MathML function.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathBorderBox.#ctor(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Office.OfficeMathBorderBox"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathBorderBox.GetPropertyValue(System.Int32)">
            <summary>
            Gets the property value.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathBorderBox.SetPropertyValue(System.Int32,System.Object)">
            <summary>
            Sets the property value.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathBorderBox.GetDefValue(System.Int32)">
            <summary>
            Return default value of the respective key.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathBorderBox.HasValue(System.Int32)">
            <summary>
            Determines whether the specified property key has value.
            </summary>
            <param name="propertyKey">The property key.</param>
            <returns>
            	if the specified property key has value, set to <c>true</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathBorderBox.HasKey(System.Int32)">
            <summary>
            Returns the value indicating whether the key exists in the properties collection.
            </summary>
            <param name="key">The <b>integer</b> that specifies the key.</param>
            <returns>
            	<b>True</b> if the specified key is present, otherwise <b>false</b>.
            </returns>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathBorderBox.Clone(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Clones the item
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathBorderBox.Close">
            <summary>
            Closes this Instance.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.OfficeMathBox">
            <summary>
            Represents the class for Box function.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathBox.m_equation">
            <summary>
            Member that represents the Math Object.       
            </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathBox.m_break">
             <summary>
            Member that represents individual line breaks in an equation.
             </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathBox.m_propertiesHash">
            <summary>
            Member to hold the collection of properties values and its keys.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathBox.m_controlProperties">
            <summary>
            Represents the character format
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathBox.Alignment">
            <summary>
            Gets or sets a value that represents if the operator emulator must be used as an alignment point from which the next line operator emulator starts. 
            </summary>
            <value><b>True</b> if the operator emulator must be used as an alignment point; otherwise, <b>false</b>.</value>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathBox.EnableDifferential">
            <summary>
            Gets or sets a value that states whether the box acts as the mathematical differential.
            </summary>
            <value><b>True</b> if the box acts as the mathematical differential; otherwise, <b>false</b>.</value>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathBox.NoBreak">
            <summary>
            Gets or sets a value whether breaks are allowed inside the box object.
            </summary>
            <value><b>True</b> if breaks are allowed inside the box object; otherwise, <b>false</b>.</value>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathBox.OperatorEmulator">
            <summary>
            Gets or sets a value that states if the box and its contents behave as a single operator and inherit the properties of an operator. 
            </summary>
            <value><b>True</b> if the box and its contents behave as a single operator and inherit the properties of an operator; otherwise, <b>false</b>.</value>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathBox.Break">
            <summary>
            Represents an individual line breaks in an equation. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathBox.Equation">
            <summary>
            Specifies a <see cref="T:Syncfusion.Office.IOfficeMath"/> object that represents the base of the specified equation object.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathBox.PropertiesHash">
            <summary>
            Gets the PropertiesHash value.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathBox.Item(System.Int32)">
            <summary>
            Gets or sets the value for the property with specified key.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathBox.ControlProperties">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Office.IOfficeRunFormat"/> object that represent the control property of MathML function.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathBox.#ctor(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Office.IOfficeMathBox"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathBox.GetPropertyValue(System.Int32)">
            <summary>
            Gets the property value.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathBox.SetPropertyValue(System.Int32,System.Object)">
            <summary>
            Sets the property value.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathBox.GetDefValue(System.Int32)">
            <summary>
            Return default value of the respective key.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathBox.HasValue(System.Int32)">
            <summary>
            Determines whether the specified property key has value.
            </summary>
            <param name="propertyKey">The property key.</param>
            <returns>
            	if the specified property key has value, set to <c>true</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathBox.HasKey(System.Int32)">
            <summary>
            Returns the value indicating whether the key exists in the properties collection.
            </summary>
            <param name="key">The <b>integer</b> that specifies the key.</param>
            <returns>
            	<b>True</b> if the specified key is present, otherwise <b>false</b>.
            </returns>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathBox.Clone(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Clones the item
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathBox.Close">
            <summary>
            Closes this Instance.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.OfficeMathDelimiter">
            <summary>
            Represents the MathML delimiter equation.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathDelimiter.m_propertiesHash">
            <summary>
            Member to hold the collection of properties values and its keys.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathDelimiter.m_equation">
            <summary>
            Specifies a <see cref="T:Syncfusion.Office.IOfficeMath"/> object that represents the base of the specified equation object. 
            </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathDelimiter.m_controlProperties">
            <summary>
            Represents the character format
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathDelimiter.BeginCharacter">
            <summary>
            Gets or sets a short that represents the beginning delimiter character.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathDelimiter.EndCharacter">
            <summary>
            Gets or sets a short that represents the ending delimiter character.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathDelimiter.IsGrow">
            <summary>
            Gets or sets a value that represents whether delimiter characters grow to the full height of the arguments that they contain. 
            </summary>
            <value><b>True</b> if delimiter characters grow to the full height of the arguments that they contain; otherwise, <b>false</b>.</value>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathDelimiter.Seperator">
            <summary>
            Gets or sets a short that represents the separator character in a math delimiter object when the math delimiter object contains two or more arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathDelimiter.DelimiterShape">
            <summary>
            Gets or sets a MathDelimiterShapeType constant that represents the appearance of delimiters.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathDelimiter.Equation">
            <summary>
            Gets a <see cref="T:Syncfusion.Office.IOfficeMaths"/> object that represents the base of the specified equation object. Read-only. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathDelimiter.PropertiesHash">
            <summary>
            Gets the PropertiesHash value.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathDelimiter.Item(System.Int32)">
            <summary>
            Gets or sets the value for the property with specified key.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathDelimiter.ControlProperties">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Office.IOfficeRunFormat"/> object that represent the control property of MathML function.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathDelimiter.#ctor(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Office.IOfficeMathDelimiter"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathDelimiter.GetPropertyValue(System.Int32)">
            <summary>
            Gets the property value.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathDelimiter.SetPropertyValue(System.Int32,System.Object)">
            <summary>
            Sets the property Value.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathDelimiter.GetDefValue(System.Int32)">
            <summary>
            Return default value of the respective key.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathDelimiter.HasValue(System.Int32)">
            <summary>
            Determines whether the specified property key has value.
            </summary>
            <param name="propertyKey">The property key.</param>
            <returns>
            	if the specified property key has value, set to <c>true</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathDelimiter.HasKey(System.Int32)">
            <summary>
            Returns the value indicating whether the key exists in the properties collection.
            </summary>
            <param name="key">The <b>integer</b> that specifies the key.</param>
            <returns>
            	<b>True</b> if the specified key is present, otherwise <b>false</b>.
            </returns>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathDelimiter.Clone(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Clones the item
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathDelimiter.Close">
            <summary>
            Closes this Instance.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.OfficeMathEquationArray">
             <summary>
            Represents a mathematical equation array object, consisting of one or more equations that can be vertically justified as a unit respect to surrounding text on the line.
             </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathEquationArray.m_equation">
             <summary>
            Specifies an <see cref="T:Syncfusion.Office.IOfficeMaths"/> object that represents the base of the specified equation object.
             </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathEquationArray.m_propertiesHash">
            <summary>
            Holds the collection of properties values and its keys.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathEquationArray.m_controlProperties">
            <summary>
            Represents the character format
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathEquationArray.Equation">
             <summary>
            Gets a <see cref="T:Syncfusion.Office.IOfficeMaths"/> object that represents the base of the specified equation object.
             </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathEquationArray.VerticalAlignment">
            <summary>
            Gets or sets the vertical alignment for an equation array.
            </summary>
             <value>The <see cref="T:Syncfusion.Office.MathVerticalAlignment"/> member that specifies vertical alignment for an equation array.</value>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathEquationArray.ExpandEquationContainer">
            <summary>
            Gets or sets a boolean that represents whether the equations in an equation array are distributed equally within the margins of its container, such as a column, cell, or page width.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathEquationArray.ExpandEquationContent">
            <summary>
            Gets or sets a boolean that represents whether the equations in an equation array are spaced to the maximum width of the equation array.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathEquationArray.RowSpacing">
            <summary>
            Gets or sets an float that represents the spacing between the rows in an equation array.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathEquationArray.RowSpacingRule">
             <summary>
            Gets or sets spacing for an equation array.
            </summary>
             <value>The <see cref="T:Syncfusion.Office.SpacingRule"/> member that specifies the spacing in an equation array.</value>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathEquationArray.ControlProperties">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Office.IOfficeRunFormat"/> object that represent the control property of MathML function.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathEquationArray.#ctor(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Office.IOfficeMathEquationArray"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathEquationArray.GetPropertyValue(System.Int32)">
            <summary>
            Gets the property value.
            </summary>
            <param name="propKey">The prop key.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathEquationArray.SetPropertyValue(System.Int32,System.Object)">
            <summary>
            Sets the property value.
            </summary>
            <param name="propKey">The property key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathEquationArray.GetDefValue(System.Int32)">
            <summary>
            Sets the default properties.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathEquationArray.PropertiesHash">
            <summary>
            Gets the PropertiesHash value.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathEquationArray.Item(System.Int32)">
            <summary>
            Gets or sets the value for the property with specified key.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathEquationArray.HasValue(System.Int32)">
            <summary>
            Determines whether the specified property key has value.
            </summary>
            <param name="propertyKey">The property key.</param>
            <returns>
            	if the specified property key has value, set to <c>true</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathEquationArray.HasKey(System.Int32)">
            <summary>
            Returns the value indicating whether the key exists in the properties collection.
            </summary>
            <param name="key">The <b>integer</b> that specifies the key.</param>
            <returns>
            	<b>True</b> if the specified key is present, otherwise <b>false</b>.
            </returns>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathEquationArray.Clone(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Clones the item
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathEquationArray.Close">
            <summary>
            Closes the instances.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.OfficeMathFraction">
            <summary>
            Represents a fraction, consisting of a numerator and denominator separated by a fraction bar.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathFraction.m_denominator">
            <summary> 
            Specifies an <see cref="T:Syncfusion.Office.IOfficeMath"/> object that represents the denominator for an equation that contains a fraction.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathFraction.m_numerator">
            <summary> 
            Specifies a <see cref="T:Syncfusion.Office.IOfficeMath"/> object that represents the numerator for a fraction.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathFraction.m_controlProperties">
            <summary>
            Represents the character format
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathFraction.FractionType">
            <summary> 
            Gets or sets a <see cref="T:Syncfusion.Office.MathFractionType"/> constant that represents the layout of a fraction. Default value is <b>bar</b>.   
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathFraction.Denominator">
            <summary> 
            Gets an <see cref="T:Syncfusion.Office.IOfficeMath"/> object that represents the denominator for an equation that contains a fraction.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathFraction.Numerator">
            <summary> 
            Gets an <see cref="T:Syncfusion.Office.IOfficeMath"/> object that represents the numerator for a fraction.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathFraction.PropertiesHash">
            <summary>
            Gets the propertieshash value.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathFraction.Item(System.Int32)">
            <summary>
            Gets or sets the value for the property with specified key.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathFraction.ControlProperties">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Office.IOfficeRunFormat"/> object that represent the control property of MathML function.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathFraction.#ctor(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Office.OfficeMathFraction"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathFraction.Close">
            <summary>
            Closes this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathFraction.GetPropertyValue(System.Int32)">
            <summary>
            Gets the property value.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathFraction.SetPropertyValue(System.Int32,System.Object)">
            <summary>
            Sets the property value.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathFraction.GetDefValue(System.Int32)">
            <summary>
            Return default value of the respective key.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathFraction.HasValue(System.Int32)">
            <summary>
            Determines whether the specified property key has value.
            </summary>
            <param name="propertyKey">The property key.</param>
            <returns>
            	if the specified property key has value, set to <c>true</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathFraction.HasKey(System.Int32)">
            <summary>
            Returns the value indicating whether the key exists in the properties collection.
            </summary>
            <param name="key">The <b>integer</b> that specifies the key.</param>
            <returns>
            	<b>True</b> if the specified key is present, otherwise <b>false</b>.
            </returns>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathFraction.Clone(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Clones the item
            </summary>
        </member>
        <member name="T:Syncfusion.Office.OfficeMathFunction">
             <summary>
            Represents the application of a function or an argument in an equation that consists of a function name, such as sin or cos, and an argument.
             </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathFunction.m_equation">
            <summary>
            Specifies a <see cref="T:Syncfusion.Office.OfficeMath"/> object that represents the base of the specified equation object. 
            </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathFunction.m_fName">
            <summary>
            Gets a <see cref="T:Syncfusion.Office.OfficeMath"/> object that represents the name of a mathematical function, such as sin or cos. 
            </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathFunction.m_controlProperties">
            <summary>
            Represents the character format
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathFunction.Equation">
            <summary>
            Gets a <see cref="T:Syncfusion.Office.OfficeMath"/> object that represents the base of the specified equation object. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathFunction.FunctionName">
            <summary>
            Gets a <see cref="T:Syncfusion.Office.OfficeMath"/> object that represents the name of a mathematical function, such as sin or cos. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathFunction.ControlProperties">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Office.IOfficeRunFormat"/> object that represent the control property of MathML function.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathFunction.#ctor(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Office.OfficeMathFunction"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathFunction.Clone(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Clones the item
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Syncfusion.Office.OfficeMathGroupCharacter" -->
        <member name="F:Syncfusion.Office.OfficeMathGroupCharacter.m_propertiesHash">
            <summary>
            Member to hold the collection of properties values and its keys.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathGroupCharacter.m_equation">
            <summary>
            Specifies an <see cref="T:Syncfusion.Office.IOfficeMath"/> object that represents the base of the specified equation object.                                         
            </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathGroupCharacter.m_controlProperties">
            <summary>
            Represents the character format
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathGroupCharacter.HasAlignTop">
            <summary>
            Gets or sets a value that represents whether the grouping character is aligned vertically with the surrounding text or whether the base text that is either above or below the grouping character is aligned vertically with the surrounding text. Read/write. 
            </summary>
            <value><b>True</b> if the grouping character is aligned vertically with the surrounding text ; otherwise, <b>false</b>.</value>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathGroupCharacter.GroupCharacter">
            <summary>
            Gets or sets a short that represents the character placed above or below text in a group character object. Read/write. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathGroupCharacter.HasCharacterTop">
            <summary>
            Gets or sets a value that represents whether the grouping character is placed above the base text of the group character object. Read/write. 
            </summary>
            <value><b>True</b> if the grouping character is placed above the base text of the group character object; otherwise, <b>false</b>.</value>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathGroupCharacter.Equation">
            <summary>
             Gets an <see cref="T:Syncfusion.Office.IOfficeMath"/> object that represents the base of the specified equation object.                                         
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathGroupCharacter.PropertiesHash">
            <summary>
            Gets the PropertiesHash value.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathGroupCharacter.Item(System.Int32)">
            <summary>
            Gets or sets the value for the property with specified key.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathGroupCharacter.ControlProperties">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Office.IOfficeRunFormat"/> object that represent the control property of MathML function.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathGroupCharacter.#ctor(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Office.IOfficeMathGroupCharacter"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathGroupCharacter.GetPropertyValue(System.Int32)">
            <summary>
            Gets the property value.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathGroupCharacter.SetPropertyValue(System.Int32,System.Object)">
            <summary>
            Sets the property value.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathGroupCharacter.GetDefValue(System.Int32)">
            <summary>
            Return default value of the respective key.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathGroupCharacter.HasValue(System.Int32)">
            <summary>
            Determines whether the specified property key has value.
            </summary>
            <param name="propertyKey">The property key.</param>
            <returns>
            	if the specified property key has value, set to <c>true</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathGroupCharacter.HasKey(System.Int32)">
            <summary>
            Returns the value indicating whether the key exists in the properties collection.
            </summary>
            <param name="key">The <b>integer</b> that specifies the key.</param>
            <returns>
            	<b>True</b> if the specified key is present, otherwise <b>false</b>.
            </returns>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathGroupCharacter.Clone(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Clones the item
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathGroupCharacter.Close">
            <summary>
            Closes this Instance.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.OfficeMathLeftScript">
             <summary>
            Represents the class of an equation that contains a superscript or subscript to the left of the base.
             </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathLeftScript.m_equation">
            <summary>
             Gets an <see cref="T:Syncfusion.Office.IOfficeMath"/> object that represents the base of the specified equation object.                                         
            </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathLeftScript.m_subScript">
            <summary>
            Gets the subscript for a Leftscript object. Read-only.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathLeftScript.m_superScript">
            <summary>
            Gets the superscript for a Leftscript object. Read-only.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathLeftScript.m_controlProperties">
            <summary>
            Represents the character format
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathLeftScript.Equation">
            <summary>
             Gets an <see cref="T:Syncfusion.Office.IOfficeMath"/> object that represents the base of the specified equation object.                                         
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathLeftScript.Subscript">
            <summary>
            Gets the subscript for leftscript object. Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathLeftScript.Superscript">
            <summary>
            Gets the superscript for a leftscript object. Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathLeftScript.ControlProperties">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Office.IOfficeRunFormat"/> object that represent the control property of MathML function.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathLeftScript.#ctor(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Office.IOfficeMathLeftScript"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathLeftScript.Close">
            <summary>
            Closes this Instance.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathLeftScript.Clone(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Clones the item
            </summary>
        </member>
        <member name="T:Syncfusion.Office.OfficeMathLimit">
             <summary>
            Represents the MathLimit Function. 
             </summary>s
        </member>
        <member name="F:Syncfusion.Office.OfficeMathLimit.m_limitType">
            <summary>
            Specifies a <see cref="T:Syncfusion.Office.OfficeMathLimit"/> type to represent either a lower or upperLimit.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathLimit.m_equation">
            <summary>
            Specifies an <see cref="T:Syncfusion.Office.IOfficeMath"/> object that represents the base of the specified equation object.                                         
            </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathLimit.m_limit">
             <summary>
            Returns an math object that represents the limit .
             </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathLimit.m_controlProperties">
            <summary>
            Represents the character format
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathLimit.LimitType">
            <summary>
            Gets or sets a <see cref="T:Syncfusion.Office.OfficeMathLimit"/> type to represent either a low and upper limit.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathLimit.Equation">
            <summary>
             Gets an <see cref="T:Syncfusion.Office.IOfficeMath"/> object that represents the base of the specified equation object.                                         
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathLimit.Limit">
            <summary>
             Gets an <see cref="T:Syncfusion.Office.IOfficeMath"/> object that represents the base of the specified equation object.                                         
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathLimit.ControlProperties">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Office.IOfficeRunFormat"/> object that represent the control property of MathML function.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathLimit.#ctor(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Office.IOfficeMathLimit"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathLimit.Close">
            <summary>
            Closes this Instance.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathLimit.Clone(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Clones the item
            </summary>
        </member>
        <member name="T:Syncfusion.Office.OfficeMathMatrix">
             <summary>
            Represents an interface for mathematical matrix, which contain elements in set of rows and columns.
             </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathMatrix.RowSpacingKey">
            <summary>
            Keys.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathMatrix.m_mathMatrixRows">
            <summary>
            Specifies the <see cref="T:Syncfusion.Office.IOfficeMathMatrixRows"/> object that represent a matrix row.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathMatrix.m_mathMatrixColumns">
            <summary>
            Specifies the <see cref="T:Syncfusion.Office.IOfficeMathMatrixColumns"/> object that represent a matrix column.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathMatrix.m_propertiesHash">
            <summary>
            Holds the collection of properties values and its keys.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathMatrix.m_controlProperties">
            <summary>
            Represents the character format
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathMatrix.VerticalAlignment">
            <summary>
            Gets or sets <see cref="T:Syncfusion.Office.MathVerticalAlignment"/> that represents the vertical alignment for a matrix.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathMatrix.ColumnWidth">
            <summary>
            Gets or sets a float that represents the spacing between columns in a matrix.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathMatrix.ColumnSpacingRule">
            <summary>
            Gets or sets a <see cref="T:Syncfusion.Office.SpacingRule"/>  that represents the spacing rule for the space that appears between columns in a matrix.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathMatrix.Columns">
            <summary>
            Gets  a <see cref= "T:Syncfusion.Office.OfficeMathMatrixColumns" /> object that represents the columns in a matrix.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathMatrix.ColumnSpacing">
            <summary>
            Gets or sets an float that represents the spacing for columns in a matrix. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathMatrix.HidePlaceHolders">
            <summary>
            Gets or sets a boolean that represents whether placeholders in a matrix are hidden from display
            </summary>
            <value><b>True</b> placeholders do not appear in the matrix; otherwise, <b>false</b>placeholders appear in the matrix.</value>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathMatrix.ColumnProperties">
            <summary>
            Gets or sets the properties of an <see cref="T:Syncfusion.Office.IOfficeMathMatrixColumn"/> in an <see cref="T:Syncfusion.Office.IOfficeMathMatrix"/>
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathMatrix.Rows">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Office.IOfficeMathMatrixRows"/> object that represent a matrix Row.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathMatrix.RowSpacing">
            <summary>
            Gets or sets an float that represents the spacing for rows in a matrix. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathMatrix.RowSpacingRule">
            <summary>
            Gets or sets a <see cref="T:Syncfusion.Office.SpacingRule"/> that represents the spacing rule for rows in a matrix.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathMatrix.ControlProperties">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Office.IOfficeRunFormat"/> object that represent the control property of MathML function.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathMatrix.GetPropertyValue(System.Int32)">
            <summary>
            Gets the property value.
            </summary>
            <param name="propKey">The prop key.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathMatrix.SetPropertyValue(System.Int32,System.Object)">
            <summary>
            Sets the property value.
            </summary>
            <param name="propKey">The property key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathMatrix.GetDefValue(System.Int32)">
            <summary>
            Sets the default properties.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathMatrix.PropertiesHash">
            <summary>
            Gets the PropertiesHash value.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathMatrix.Item(System.Int32)">
            <summary>
            Gets or sets the value for the property with specified key.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathMatrix.HasValue(System.Int32)">
            <summary>
            Determines whether the specified property key has value.
            </summary>
            <param name="propertyKey">The property key.</param>
            <returns>
            	if the specified property key has value, set to <c>true</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathMatrix.HasKey(System.Int32)">
            <summary>
            Returns the value indicating whether the key exists in the properties collection.
            </summary>
            <param name="key">The <b>integer</b> that specifies the key.</param>
            <returns>
            	<b>True</b> if the specified key is present, otherwise <b>false</b>.
            </returns>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathMatrix.Clone(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Clones the item
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathMatrix.RemoveMatrixItems(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Removes the items in matrix
            </summary>
            <param name="startColIndex">Start column index in range</param>
            <param name="startRowIndex">Start row index in range</param>
            <param name="endColIndex">End column index in range</param>
            <param name="endRowIndex">End row index in range</param>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathMatrix.ApplyColumnProperties">
            <summary>
            Applies the column properties collection values to each column
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathMatrix.UpdateColumnProperties(Syncfusion.Office.OfficeMathMatrix)">
            <summary>
            Updates the values of column properties collection using column property values.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathMatrix.GetRangeOfArguments(System.Int32,System.Int32,System.Int32,System.Int32,Syncfusion.Office.OfficeMaths)">
            <summary>
            Gets the range of arguments.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathMatrix.CreateArguments(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates an empty arguments for matrix
            </summary>
            <param name="startColIndex">Start column index in range</param>
            <param name="startRowIndex">Start row index in range</param>
            <param name="endColIndex">End column index in range</param>
            <param name="endRowIndex">End row index in range</param>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathMatrix.UpdateColumns">
            <summary>
            Updates the number of matrix columns based on the number of cells present in the rows of the matrix.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathMatrix.GetMaximumCellCount">
            <summary>
            Gets the maximum cell count.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathMatrix.Close">
            <summary>
            Closes this Instance.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathMatrixColumns.Item(System.Int32)">
            <summary>
            Gets the specified item in the collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathMatrixColumns.Add(System.Int32)">
            <summary>
            Adds <see cref="T:Syncfusion.Office.IOfficeMathMatrixColumn"/> instance to the collection at specified index.
            </summary>
            <param name="index">The Index, where to add the <see cref="T:Syncfusion.Office.IOfficeMathMatrixColumn"/> instance.</param>
            <returns>Returns the newly added <see cref="T:Syncfusion.Office.IOfficeMathMatrixColumn"/>. </returns>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathMatrixColumns.Add">
            <summary>
            Adds <see cref="T:Syncfusion.Office.IOfficeMathMatrixColumn"/> instance to the collection.
            </summary>
            <returns>Returns the newly added <see cref="T:Syncfusion.Office.IOfficeMathMatrixColumn"/>. </returns>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathMatrixColumns.CloneItemsTo(Syncfusion.Office.OfficeMathMatrixColumns)">
            <summary>
            Clone the items in collection
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathMatrixColumns.Remove(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Removes the item in collection
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathMatrixColumns.#ctor(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Office.OfficeMathMatrixColumns"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathMatrixRows.Item(System.Int32)">
            <summary>
            Gets the specified item in the collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathMatrixRows.Remove(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Removes the item in collection
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathMatrixRows.Add(System.Int32)">
            <summary>
            Adds <see cref="T:Syncfusion.Office.IOfficeMathMatrixRow"/> instance to the collection at specified index.
            </summary>
            <param name="index">The Index, where to add the <see cref="T:Syncfusion.Office.IOfficeMathMatrixRow"/> instance.</param>
            <returns>Returns the newly added <see cref="T:Syncfusion.Office.IOfficeMathMatrixRow"/>. </returns>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathMatrixRows.Add">
            <summary>
            Adds <see cref="T:Syncfusion.Office.IOfficeMathMatrixRow"/> instance to the collection.
            </summary>
            <returns>Returns the newly added <see cref="T:Syncfusion.Office.IOfficeMathMatrixRow"/>. </returns>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathMatrixRows.CloneItemsTo(Syncfusion.Office.OfficeMathMatrixRows)">
            <summary>
            Clone the items in collection
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathMatrixRows.#ctor(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Office.OfficeMathMatrixRows"/> class.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.MathMLParser">
            <summary>
            Represents the parser for MathML items.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseMathPara(System.Xml.XmlReader,Syncfusion.Office.IOfficeMathParagraph,Syncfusion.Office.DocumentParser)">
            <summary>
            Parse OMathPara which holds the MathML item.
            </summary>
            <param name="reader">Represents the reader to read MathML</param>
            <param name="mathPara">Represents OfficeMathPara to hold MathML element</param>
            <param name="documentParser">Represents documentparser</param>
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseMath(System.Xml.XmlReader,Syncfusion.Office.OfficeMath,Syncfusion.Office.DocumentParser)">
            <summary>
            Parse officemath which holds the mathml functions
            </summary>
            <param name="reader">Represents the reader to read mathml</param>
            <param name="officeMath">Represents officemath element</param>
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseMath(System.Xml.XmlReader,Syncfusion.Office.OfficeMath)">
            <summary>
            Parse officemath which holds the mathml functions
            </summary>
            <param name="reader">Represents the reader to read mathml</param>
            <param name="officeMath">Represents officemath element</param>
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseMathArgumentProperties(System.Xml.XmlReader,Syncfusion.Office.OfficeMath)">
            <summary>
            Parse argument properties
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseMathProperties(System.Xml.XmlReader,Syncfusion.Office.OfficeMathProperties)">
            <summary>
            parse the math properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseNArtLimitLocationType(System.Xml.XmlReader,Syncfusion.Office.OfficeMathProperties)">
            <summary>
            parse the NAry limit location type.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseLimitLocationType(System.Xml.XmlReader,Syncfusion.Office.OfficeMathProperties)">
            <summary>
            parse the integral limit location type of math properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseDefaultJustification(System.Xml.XmlReader,Syncfusion.Office.OfficeMathProperties)">
            <summary>
            parse the default justification of math properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseBreakOnSubtractOperator(System.Xml.XmlReader,Syncfusion.Office.OfficeMathProperties)">
            <summary>
            parse the break on subtract operator of math properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseBreakOnBinaryOperator(System.Xml.XmlReader,Syncfusion.Office.OfficeMathProperties)">
            <summary>
            parse the break on binary operator of math properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseMathLimit(System.Xml.XmlReader,Syncfusion.Office.OfficeMathLimit)">
            <summary>
            parse the math limit.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseMathLimitProperties(System.Xml.XmlReader,Syncfusion.Office.OfficeMathLimit)">
            <summary>
            Parse MathML limit properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseMathPhantom(System.Xml.XmlReader,Syncfusion.Office.OfficeMathPhantom)">
            <summary>
            Parse MathML phantom function.
            </summary> 
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseMathPhantomProperties(System.Xml.XmlReader,Syncfusion.Office.OfficeMathPhantom)">
            <summary>
            Parser MathML phantom properties.
            </summary> 
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseMathMatrix(System.Xml.XmlReader,Syncfusion.Office.OfficeMathMatrix)">
            <summary>
            Parser MathML matrix function.
            </summary> 
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseMathMatrixProperties(System.Xml.XmlReader,Syncfusion.Office.OfficeMathMatrix)">
            <summary>
            Parser MathML matrix properties.
            </summary> 
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParserMathColumns(System.Xml.XmlReader,Syncfusion.Office.OfficeMathMatrix)">
            <summary>
            Parser MathML math matrix.
            </summary> 
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseMathMatrixColumn(System.Xml.XmlReader,Syncfusion.Office.MatrixColumnProperties)">
            <summary>
            Parser MathML matrix column.
            </summary> 
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseMathMatrixColumnProperties(System.Xml.XmlReader,Syncfusion.Office.MatrixColumnProperties)">
            <summary>
            Parser MathML matrix column properties.
            </summary> 
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseMathMatrixColumnJustification(System.Xml.XmlReader,Syncfusion.Office.MatrixColumnProperties)">
            <summary>
            Parser MathML matrix column justification.
            </summary> 
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseSpacingRule(System.Xml.XmlReader)">
            <summary>
            Parser spacing rule of mathematical equation
            </summary> 
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseMathMatrixJustification(System.Xml.XmlReader,Syncfusion.Office.OfficeMathMatrix)">
            <summary>
            Parser MathML matrix justification.
            </summary> 
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseMathMatrixRow(System.Xml.XmlReader,Syncfusion.Office.OfficeMathMatrixRow)">
            <summary>
            Parser MathML matrix row.
            </summary> 
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseMathNAry(System.Xml.XmlReader,Syncfusion.Office.OfficeMathNArray)">
            <summary>
            Parser MathML NAry function.
            </summary> 
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseMathNAryProperties(System.Xml.XmlReader,Syncfusion.Office.OfficeMathNArray)">
            <summary>
            Parse MathML NAry properties.
            </summary> 
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseMathRadical(System.Xml.XmlReader,Syncfusion.Office.OfficeMathRadical)">
            <summary>
            Parse MathML radical function.
            </summary> 
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseMathRadicalProperties(System.Xml.XmlReader,Syncfusion.Office.OfficeMathRadical)">
            <summary>
            Parse MathML radical properties.
            </summary> 
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseMathRightScript(System.Xml.XmlReader,Syncfusion.Office.OfficeMathRightScript)">
            <summary>
            Parse MathML math right script function.
            </summary> 
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseMathRightScriptProperties(System.Xml.XmlReader,Syncfusion.Office.OfficeMathRightScript)">
            <summary>
            Parse MathML math right script properties.
            </summary> 
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseMathLeftScript(System.Xml.XmlReader,Syncfusion.Office.OfficeMathLeftScript)">
            <summary>
            Parse MathML math left script function.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseMathLeftScriptProperties(System.Xml.XmlReader,Syncfusion.Office.OfficeMathLeftScript)">
            <summary>
            Parse MathML math left script properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseMathScript(System.Xml.XmlReader,Syncfusion.Office.OfficeMathScript)">
            <summary>
            Parse MathML math script function.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseMathScriptProperties(System.Xml.XmlReader,Syncfusion.Office.OfficeMathScript)">
            <summary>
            Parser MathML script properties.
            </summary> 
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseMathEqArray(System.Xml.XmlReader,Syncfusion.Office.OfficeMathEquationArray)">
            <summary>
            Parser MathML Eqarray function.
            </summary> 
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseMathEqArrayProperties(System.Xml.XmlReader,Syncfusion.Office.OfficeMathEquationArray)">
            <summary>
            Parser MathML EqArray Properties.
            </summary> 
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseMathEqArrayJustification(System.Xml.XmlReader,Syncfusion.Office.OfficeMathEquationArray)">
            <summary>
            Parser MathML EqArray justification.
            </summary> 
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseMathGroupChar(System.Xml.XmlReader,Syncfusion.Office.OfficeMathGroupCharacter)">
            <summary>
            Parser MathML groupchar function.
            </summary>      
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseGroupCharProperties(System.Xml.XmlReader,Syncfusion.Office.OfficeMathGroupCharacter)">
            <summary>
            Parse the MathML groupchar properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseMathBar(System.Xml.XmlReader,Syncfusion.Office.OfficeMathBar)">
            <summary>
            Parse the MathML bar function.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseBarProperties(System.Xml.XmlReader,Syncfusion.Office.OfficeMathBar)">
            <summary>
            Parse the MathML bar properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseMathAccent(System.Xml.XmlReader,Syncfusion.Office.OfficeMathAccent)">
            <summary>
            Parse the MathML accent function.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseAccentProperties(System.Xml.XmlReader,Syncfusion.Office.OfficeMathAccent)">
            <summary>
            Parse the MathML accent properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseMathControlProperties(System.Xml.XmlReader,Syncfusion.Office.OfficeMathFunctionBase,Syncfusion.Office.IOfficeRunFormat)">
            <summary>
            Parse the control properties of MathML.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseMathRunFormat(System.Xml.XmlReader,Syncfusion.Office.OfficeMathFormat)">
            <summary>
            Parse the MathML run format.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseMathRunFormatScript(System.Xml.XmlReader,Syncfusion.Office.OfficeMathFormat)">
            <summary>
            Parser MathML run format script.
            </summary> 
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseMathRunFormatStyle(System.Xml.XmlReader,Syncfusion.Office.OfficeMathFormat)">
            <summary>
            Parser MathML run format style.
            </summary> 
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseMathParaProperties(System.Xml.XmlReader,Syncfusion.Office.IOfficeMathParagraph)">
            <summary>
            Parse the mathpara properties.
            </summary>
            <param name="reader">Represents the reader to read mathml</param>
            <param name="mathPara">Represents officemathpara to hold mathml element</param>
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseMathJustification(System.Xml.XmlReader,Syncfusion.Office.IOfficeMathParagraph)">
            <summary>
            Parse the mathpara justication type.
            </summary>
            <param name="reader">Represents the reader to read MathML</param>
            <param name="mathPara">Represents officemathpara to hold mathml element</param>
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseMathBox(System.Xml.XmlReader,Syncfusion.Office.OfficeMathBox)">
            <summary>
            Parse the mathbox.
            </summary>
            <param name="reader">Represents the reader to read mathml</param>
            <param name="mathBox">Represents officemathbox</param>
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseMathBoxProperties(System.Xml.XmlReader,Syncfusion.Office.OfficeMathBox)">
            <summary>
            Parse the mathbox properties.
            </summary>
            <param name="reader">Represents the reader to read mathml</param>
            <param name="mathBox">Represents officemathbox</param>
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseMathBorderBox(System.Xml.XmlReader,Syncfusion.Office.OfficeMathBorderBox)">
            <summary>
            Parse the mathborder box.
            </summary>
            <param name="reader">Represents the reader to read mathml</param>
            <param name="mathBorderBox">Represents officemathborderbox</param>
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseMathBorderBoxProperties(System.Xml.XmlReader,Syncfusion.Office.OfficeMathBorderBox)">
            <summary>
            Parse the mathborderbox properties.
            </summary>
            <param name="reader">Represents the reader to read mathml</param>
            <param name="mathBorderBox">Represents officemathborderbox</param>
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseMathDelimiter(System.Xml.XmlReader,Syncfusion.Office.OfficeMathDelimiter)">
            <summary>
            Parse the mathdelimiter.
            </summary>
            <param name="reader">Represents the reader to read mathml</param>
            <param name="mathDelimiter">Represents officemathdelimiter</param>
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseMathDelimiterProperties(System.Xml.XmlReader,Syncfusion.Office.OfficeMathDelimiter)">
            <summary>
            Parse the mathdelimiter properties.
            </summary>
            <param name="reader">Represents the reader to read mathml</param>
            <param name="mathDelimiter">Represents officemathdelimiter</param>
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseMathFraction(System.Xml.XmlReader,Syncfusion.Office.OfficeMathFraction)">
            <summary>
            Parse the mathfraction.
            </summary>
            <param name="reader">Represents the reader to read mathml</param>
            <param name="mathFraction">Represents officemathfraction</param>
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseMathFractionProperties(System.Xml.XmlReader,Syncfusion.Office.OfficeMathFraction)">
            <summary>
            Parse the mathfraction properties.
            </summary>
            <param name="reader">Represents the reader to read mathml</param>
            <param name="mathFraction">Represents officemathfraction</param>
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseMathFractionType(System.Xml.XmlReader,Syncfusion.Office.OfficeMathFraction)">
            <summary>
            Parse the mathfraction type.
            </summary>
            <param name="reader">Represents the reader to read mathml</param>
            <param name="mathFraction">Represents officemathfraction</param>
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseMathFunc(System.Xml.XmlReader,Syncfusion.Office.OfficeMathFunction)">
            <summary>
            Parse the mathfunc.
            </summary>
            <param name="reader">Represents the reader to read mathml</param>
            <param name="mathFunc">Represents officemathfunc</param>
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseMathFuncProperties(System.Xml.XmlReader,Syncfusion.Office.OfficeMathFunction)">
            <summary>
            Parse the mathfunc properties.
            </summary>
            <param name="reader">Represents the reader to read mathml</param>
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseMathDelimiterShape(System.Xml.XmlReader,Syncfusion.Office.OfficeMathDelimiter)">
            <summary>
            Parse the mathdelimiter shape.
            </summary>
            <param name="reader">Represents the reader to read mathml</param>
            <param name="mathDelimiter">Represents officemathdelimiter</param>
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.ParseOfficeMathBreak(System.Xml.XmlReader,Syncfusion.Office.OfficeMathBreak)">
            <summary>
            Parse the mathbreak attributes.
            </summary>
            <param name="reader">Represents the reader to read mathml</param>
            <param name="mathBreak">Represents mathbreak</param>
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.GetBooleanValue(System.Xml.XmlReader)">
            <summary>
            Returns the boolean value from the current node
            </summary>
            <param name="reader">Represents the reader to read mathml</param>
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.GetNumericValue(System.String)">
            <summary>
            To validate for the Numeric values alone in font size
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.GetFloatValue(System.String,System.String)">
            <summary>
            To get the float value
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.GetSpacingValue(System.String,System.String,Syncfusion.Office.SpacingRule)">
            <summary>
            Returns the spacing value based on spacing rule type.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLParser.SkipWhitespaces(System.Xml.XmlReader)">
            <summary>
            Skip whitespaces and moves the reader to the next node.
            </summary>
            <param name="reader">The xml reader</param>
        </member>
        <member name="T:Syncfusion.Office.MathConstants">
            <summary>
            Represents a class to maintain constants for mathematical equation
            </summary>
        </member>
        <member name="T:Syncfusion.Office.MathMLSerializer">
            <summary>
            Represents the serializer for MathML items.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathPara(System.Xml.XmlWriter,Syncfusion.Office.IOfficeMathParagraph,Syncfusion.Office.DocumentSerializer)">
            <summary>
            Serializes the MathPara.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerilaizeMathParaProperties(Syncfusion.Office.IOfficeMathParagraph)">
            <summary>
            Serializes the MathParaProperties.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathParaJustification(Syncfusion.Office.IOfficeMathParagraph)">
            <summary>
            Serializes math para justification
            </summary>
            <param name="mathPara">Represents the math para</param>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMath(System.Xml.XmlWriter,Syncfusion.Office.IOfficeMath,Syncfusion.Office.DocumentSerializer)">
            <summary>
            Serializes the Math element.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMath(Syncfusion.Office.IOfficeMath)">
            <summary>
            Serializes the Math element in MathPara.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathFunction(Syncfusion.Office.IOfficeMathFunctionBase)">
            <summary>
            Serializes the Math function.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathProperties(System.Xml.XmlWriter,Syncfusion.Office.OfficeMathProperties)">
            <summary>
            Serializes the math properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeNAryLimitLocation(Syncfusion.Office.OfficeMathProperties)">
            <summary>
            Serializes the NAry limit location of math properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeIntergralLimitLocation(Syncfusion.Office.OfficeMathProperties)">
            <summary>
            Serializes the Intergral limit location of math properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeDefaultJustification(Syncfusion.Office.OfficeMathProperties)">
            <summary>
            Serializes the default justification of math properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeBreakOnSubtractOperator(Syncfusion.Office.OfficeMathProperties)">
            <summary>
            Serializes the break on subtract operator of math properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeBreakOnBinaryOperator(Syncfusion.Office.OfficeMathProperties)">
            <summary>
            Serializes the break on binary operator of math properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathUpperLimit(Syncfusion.Office.OfficeMathLimit)">
            <summary>
            Serializes the Math upper limit function.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathUpperLimitProperties(Syncfusion.Office.OfficeMathLimit)">
            <summary>
            Serializes the Math upper limit properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathLowerLimit(Syncfusion.Office.OfficeMathLimit)">
            <summary>
            Serializes the Math lower limit function.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathLowerLimitProperties(Syncfusion.Office.OfficeMathLimit)">
            <summary>
            Serializes the Math lower limit properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathRightScript(Syncfusion.Office.OfficeMathRightScript)">
            <summary>
            Serializes the Math right script.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathRightScriptProperties(Syncfusion.Office.OfficeMathRightScript)">
            <summary>
            Serializes the Math right script properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathLeftScript(Syncfusion.Office.OfficeMathLeftScript)">
            <summary>
            Serializes the Math left script function.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathLeftScriptProperties(Syncfusion.Office.OfficeMathLeftScript)">
            <summary>
            Serializes the Math left script properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathSuperScript(Syncfusion.Office.OfficeMathScript)">
            <summary>
            Serializes the Math SuperScript.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathSuperScriptProperties(Syncfusion.Office.OfficeMathScript)">
            <summary>
            Serializes the Math SuperScript properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathSubScript(Syncfusion.Office.OfficeMathScript)">
            <summary>
            Serializes the Math SubScript.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathSubScriptProperties(Syncfusion.Office.OfficeMathScript)">
            <summary>
            Serializes the Math SubScript properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathText(Syncfusion.Office.OfficeMathRunElement)">
            <summary>
            Serializes the Math equation text.
            </summary>       
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathRunFormat(System.Xml.XmlWriter,Syncfusion.Office.OfficeMathFormat)">
            <summary>
            Serializes the math run properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathRunFormatScript(Syncfusion.Office.OfficeMathFormat)">
            <summary>
            Serializes the math format script.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathRunFormatStyle(Syncfusion.Office.OfficeMathFormat)">
            <summary>
            Serializes the math format style.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathAccent(Syncfusion.Office.OfficeMathAccent)">
            <summary>
            Serializes the Math Accent.
            </summary> 
            <param name="mathAccent">Represents math accent</param>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathAccentProperties(Syncfusion.Office.OfficeMathAccent)">
            <summary>
            Serializes the mathaccent properties.
            </summary>     
            <param name="mathAccent">Represents math accent</param>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathBar(Syncfusion.Office.OfficeMathBar)">
            <summary>
            Serializes the math bar.
            </summary> 
            <param name="mathBar">Represents math bar</param>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathBarProperties(Syncfusion.Office.OfficeMathBar)">
            <summary>
            Serializes the math bar properties.
            </summary>
            <param name="mathBar">Represents math bar</param>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathBox(Syncfusion.Office.OfficeMathBox)">
            <summary>
            Serializes the math box.
            </summary> 
            <param name="mathBox">Represents math box</param>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathBoxProperties(Syncfusion.Office.OfficeMathBox)">
            <summary>
            Serializes the mathbox properties.
            </summary>   
            <param name="mathBox">Represents math box</param>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathBreak(Syncfusion.Office.OfficeMathBreak)">
            <summary>
            Serializes the mathbreak.
            </summary> 
            <param name="mathBreak">Represents math break</param>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathBorderBox(Syncfusion.Office.OfficeMathBorderBox)">
            <summary>
            Serializes the math borderbox.
            </summary> 
            <param name="mathBorderBox">Represents math borderbox</param>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathBorderBoxProperties(Syncfusion.Office.OfficeMathBorderBox)">
            <summary>
            Serializes the mathborderbox properties.
            </summary>
            <param name="mathBorderBox">Represents math borderbox</param>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathDelimiter(Syncfusion.Office.OfficeMathDelimiter)">
            <summary>
            Serializes the math delimiter.
            </summary>
            <param name="mathDelimiter">Represents math delimiter</param>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathDelimiterProperties(Syncfusion.Office.OfficeMathDelimiter)">
            <summary>
            Serializes the mathdelimiter properties.
            </summary>
            <param name="mathDelimiter">Represents math delimiter</param>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathDelimiterShape(Syncfusion.Office.OfficeMathDelimiter)">
            <summary>
            Serializes the mathdelimiter shape.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathEqArray(Syncfusion.Office.OfficeMathEquationArray)">
            <summary>
            Serializes the math equation array.
            </summary>
            <param name="mathEqArray">Represents math eqArray</param>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathEqArrayProperties(Syncfusion.Office.OfficeMathEquationArray)">
            <summary>
            Serializes the math equation array properties.
            </summary>
            <param name="mathEqArray">Represents math eqArray</param>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeSpacingRule(Syncfusion.Office.SpacingRule)">
            <summary>
            Serializes the math equation spacing rule.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathEqArrayAlignment(Syncfusion.Office.OfficeMathEquationArray)">
            <summary>
            Serializes the math equation array alignment.
            </summary>
            <param name="mathEqArray">Represents math eqArray</param>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathFraction(Syncfusion.Office.OfficeMathFraction)">
            <summary>
            Serializes the math fraction.
            </summary>
            <param name="mathFraction">Represents math fraction</param>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathFractionProperties(Syncfusion.Office.OfficeMathFraction)">
            <summary>
            Serializes the math fraction properties.
            </summary>
            <param name="mathFraction">Represents math fraction</param>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathFractionType(Syncfusion.Office.OfficeMathFraction)">
            <summary>
            Serializes the math fraction type.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathFunc(Syncfusion.Office.OfficeMathFunction)">
            <summary>
            Serializes the math func.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathFuncProperties(Syncfusion.Office.OfficeMathFunction)">
            <summary>
            Serializes the math func properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathGroupChar(Syncfusion.Office.OfficeMathGroupCharacter)">
            <summary>
            Serializes the math groupchar.
            </summary>
            <param name="mathGroupChar">Represents math groupchar</param>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathGroupCharProperties(Syncfusion.Office.OfficeMathGroupCharacter)">
            <summary>
            Serializes the math groupchar properties.
            </summary>
            <param name="mathGroupChar">Represents math groupchar</param>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathMatrix(Syncfusion.Office.OfficeMathMatrix)">
            <summary>
            Serializes the math matrix.
            </summary>
            <param name="mathMatrix">Represents math matrix</param>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathMatrixProperties(Syncfusion.Office.OfficeMathMatrix)">
            <summary>
            Serializes the math matrix properties.
            </summary>
            <param name="mathMatrix">Represents math matrix</param>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeRowSpacing(System.Single,Syncfusion.Office.SpacingRule)">
            <summary>
            Serialize the row spacing
            </summary>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathMatrixAlign(Syncfusion.Office.OfficeMathMatrix)">
            <summary>
            Serializes math matrix align
            </summary>
            <param name="mathMatrix">Represents math matrix</param>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathMatrixColumns(Syncfusion.Office.OfficeMathMatrix)">
            <summary>
            Serializes math matrix columns
            </summary>
            <param name="mathMatrix">Represents math matrix</param>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathMatrixColumnProperties(Syncfusion.Office.MatrixColumnProperties)">
            <summary>
            Serializes math matrix column properties
            </summary>
            <param name="mathMatrixColumnProperties">Represents math matrix column</param>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathMatrixColumnAlign(Syncfusion.Office.MatrixColumnProperties)">
            <summary>
            Serializes math matrix column alignment
            </summary>
            <param name="mathMatrixColumnProperties">Represents math matrix column</param>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathMatrixRow(Syncfusion.Office.OfficeMathMatrixRow)">
            <summary>
            Serializes a math matrix row
            </summary>
            <param name="mathMatrixRow"></param>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathNAry(Syncfusion.Office.OfficeMathNArray)">
            <summary>
            Serializes math nary
            </summary>
            <param name="mathNAry">Represents math nary</param>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathNAryProperties(Syncfusion.Office.OfficeMathNArray)">
            <summary>
            Serializes math nary properties
            </summary>
            <param name="mathNAry">Represents math nary</param>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathRadical(Syncfusion.Office.OfficeMathRadical)">
            <summary>
            Serializes math radical
            </summary>
            <param name="mathRadical"></param>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathRadicalProperties(Syncfusion.Office.OfficeMathRadical)">
            <summary>
            Serializes the math radical properties
            </summary>
            <param name="mathRadical">Represents the math radical</param>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathPhantom(Syncfusion.Office.OfficeMathPhantom)">
            <summary>
            Serializes the math phantom
            </summary>
            <param name="mathPhantom"></param>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeMathPhantomProperties(Syncfusion.Office.OfficeMathPhantom)">
            <summary>
            Serializes math phantom properties
            </summary>
            <param name="mathPhantom">Represents math phantom</param>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.SerializeBoolProperty(System.String,System.Boolean)">
            <summary>
            Serializes the bool property
            </summary>
            <param name="tag">Tag name</param>
            <param name="value">if set to <c>true</c> [value].</param>
        </member>
        <member name="M:Syncfusion.Office.MathMLSerializer.ToString(System.Single)">
            <summary>
            Convert the float value to string.
            </summary>
            <param name="value">float value</param>
            <returns></returns>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathNArray.m_equation">
            <summary>
             Specifies an <see cref="T:Syncfusion.Office.IOfficeMath"/> object that represents the base of the specified equation object.                                         
            </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathNArray.m_subscript">
            <summary> 
            Specifies an <see cref="T:Syncfusion.Office.IOfficeMath"/> object that represents the lower limit of an n-ary operator.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathNArray.m_superscript">
            <summary>
            Specifies an <see cref="T:Syncfusion.Office.IOfficeMath"/> object that represents the upper limit of an n-ary operator.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathNArray.m_controlProperties">
            <summary>
            Represents the character format
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathNArray.NArrayCharacter">
            <summary>  
            Gets or sets a short that represents a character used as the n-ary operator. Default value is <b>integral</b>.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathNArray.HasGrow">
            <summary>            
            Gets or sets a boolean that represents whether n-ary operators grow to the full height of the arguments that they contain.Default value is <b>false</b>.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathNArray.HideLowerLimit">
            <summary>  
            Gets or sets a boolean that represents whether to hide the lower limit of an n-ary operator. Default value is <b>false</b>.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathNArray.HideUpperLimit">
            <summary>  
            Gets or sets a boolean that represents whether to hide the upper limit of an n-ary operator. Default value is <b>false</b>.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathNArray.SubSuperscriptLimit">
             <summary>  
            Gets or sets a boolean that represents the positioning of n-ary limits in the subscript-superscript or upper limit-lower limit position. Default value is <b>true</b> for integral and <b>false</b> for all other <see cref="T:Syncfusion.Office.IOfficeMathNArray"/> object.
             </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathNArray.Equation">
            <summary>
             Gets an <see cref="T:Syncfusion.Office.IOfficeMath"/> object that represents the base of the specified equation object.                                         
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathNArray.Subscript">
            <summary> 
            Gets an <see cref="T:Syncfusion.Office.IOfficeMath"/> object that represents the lower limit of an n-ary operator.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathNArray.Superscript">
            <summary>
            Gets an <see cref="T:Syncfusion.Office.IOfficeMath"/> object that represents the upper limit of an n-ary operator.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathNArray.PropertiesHash">
            <summary>
            Gets the propertieshash value.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathNArray.Item(System.Int32)">
            <summary>
            Gets or sets the value for the property with specified key.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathNArray.ControlProperties">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Office.IOfficeRunFormat"/> object that represent the control property of MathML function.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathNArray.#ctor(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Office.OfficeMathNArray"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathNArray.Close">
            <summary>
            Closes this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathNArray.GetPropertyValue(System.Int32)">
            <summary>
            Gets the property value.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathNArray.SetPropertyValue(System.Int32,System.Object)">
            <summary>
            Sets the property value.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathNArray.GetDefValue(System.Int32)">
            <summary>
            Return default value of the respective key.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathNArray.HasValue(System.Int32)">
            <summary>
            Determines whether the specified property key has value.
            </summary>
            <param name="propertyKey">The property key.</param>
            <returns>
            	if the specified property key has value, set to <c>true</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathNArray.HasKey(System.Int32)">
            <summary>
            Returns the value indicating whether the key exists in the properties collection.
            </summary>
            <param name="key">The <b>integer</b> that specifies the key.</param>
            <returns>
            	<b>True</b> if the specified key is present, otherwise <b>false</b>.
            </returns>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathNArray.Clone(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Clones the item
            </summary>
        </member>
        <member name="T:Syncfusion.Office.OfficeMathParagraph">
            <summary>
            Represents the OfficeMathPara that can be used to format a top level MathML element.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathParagraph.m_maths">
            <summary>
            Specifies a <see cref="T:Syncfusion.Office.OfficeMaths"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathParagraph.m_propertiesHash">
            <summary>
            Member to hold the collection of properties values and its keys.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathParagraph.Justification">
            <summary>
            Gets or sets <see cref="T:Syncfusion.Office.MathJustification"/>. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathParagraph.Maths">
            <summary>
            Gets a collection of equations. Use the <see cref="T:Syncfusion.Office.OfficeMaths"/> object to access individual members of the collection.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathParagraph.Owner">
            <summary>
            Gets the Owner.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathParagraph.PropertiesHash">
            <summary>
            Gets the PropertiesHash value.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathParagraph.Item(System.Int32)">
            <summary>
            Gets or sets the value for the property with specified key.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathParagraph.IsDefault">
            <summary>
            Gets or sets whether format is default.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathParagraph.DefaultMathCharacterFormat">
            <summary>
            Represents the default character format for functions in mathematical equation
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathParagraph.Clone">
            <summary>
            Clones the item
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathParagraph.SetOwner(System.Object)">
            <summary>
            Sets the owner.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathParagraph.GetPropertyValue(System.Int32)">
            <summary>
            Gets the property value.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathParagraph.SetPropertyValue(System.Int32,System.Object)">
            <summary>
            Sets the property value.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathParagraph.HasValue(System.Int32)">
            <summary>
            Determines whether the specified property key has value.
            </summary>
            <param name="propertyKey">The property key.</param>
            <returns>
            	if the specified property key has value, set to <c>true</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathParagraph.HasKey(System.Int32)">
            <summary>
            Returns the value indicating whether the key exists in the properties collection.
            </summary>
            <param name="key">The <b>integer</b> that specifies the key.</param>
            <returns>
            	<b>True</b> if the specified key is present, otherwise <b>false</b>.
            </returns>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathParagraph.GetDefValue(System.Int32)">
            <summary>
            Return default value of the respective key.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.OfficeMathRunElement">
            <summary>
            Represents <see cref="T:Syncfusion.Office.OfficeMathRunElement"/> object that provides the base implementation for all <see cref="T:Syncfusion.Office.IOfficeMathParagraph"/> items.  
            </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathRunElement.m_mathFormat">
            <summary>
            Specifies the <see cref="T:Syncfusion.Office.IOfficeMathFormat"/> object that can be used for formatting the character of the mathematical text.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathRunElement.Item">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Office.IOfficeRun"/> object that represents a mathematical text.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathRunElement.MathFormat">
            <summary>
            Gets the <see cref="T:Syncfusion.Office.IOfficeMathFormat"/> object that can be used for formatting the character of the mathematical text.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathRunElement.#ctor(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Office.IOfficeMathRunElement"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathRunElement.Clone(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Clones the item
            </summary>
        </member>
        <member name="T:Syncfusion.Office.OfficeMathPhantom">
             <summary>
            Represents a phantom object, which has two primary uses: (1) adding the spacing of the phantom base without displaying that base or (2) suppressing part of the glyph from spacing considerations
             </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathPhantom.ShowKey">
            <summary>
            Keys.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathPhantom.m_equation">
            <summary>
            Specifies a <see cref="T:Syncfusion.Office.OfficeMath"/> object that represents the base of the specified equation object. 
            </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathPhantom.m_propertiesHash">
            <summary>
            Holds the collection of properties values and its keys.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathPhantom.m_controlProperties">
            <summary>
            Represents the character format
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathPhantom.Show">
            <summary>
            Gets or sets a boolean that represents whether the contents of a phantom object are visible. 
            </summary>
            <value><b>True</b> phantom base is shown; otherwise, <b>false</b>phantom base is hidden.</value>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathPhantom.Smash">
            <summary>
            Gets or sets a boolean that represents that the contents of the phantom are visible but that the height is not taken into account in the spacing of the layout.  
            </summary>
            <value><b>True</b> contents of the phantom are visible but that the height is not taken into account in the spacing of the layout; otherwise, <b>false</b></value>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathPhantom.Transparent">
            <summary>
            Gets or sets a boolean that represents whether a phantom object is transparent. 
            </summary>
            <value><b>True</b> phantom object is transparent; otherwise, <b>false</b>phantom object is not transparent .</value>  
        </member>
        <member name="P:Syncfusion.Office.OfficeMathPhantom.ZeroAscent">
            <summary>
            Gets or sets a boolean that represents whether the ascent of the phantom contents is ignored in the spacing of the layout. 
            </summary>
            <value><b>True</b> ascent of the contents of the phantom is not taken into account during layout; otherwise, <b>false</b>phantom does have ascent.</value>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathPhantom.ZeroDescent">
            <summary>
            Gets or sets a boolean that represents whether the descent of the phantom contents is ignored in the spacing of the layout. 
            </summary>
            <value><b>True</b> descent of the contents of the phantom is taken into account during layout.; otherwise, <b>false</b>phantom does have descent.</value>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathPhantom.ZeroWidth">
            <summary>
            Gets or sets a boolean that represents whether the width of a phantom object is ignored in the spacing of the layout.
            </summary>
            <value><b>True</b>width of the contents of the phantom is not taken into account during layout.; otherwise, <b>false</b>phantom does have width.</value>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathPhantom.Equation">
            <summary>
            Gets a <see cref="T:Syncfusion.Office.OfficeMath"/> object that represents the base of the specified equation object. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathPhantom.IsDefault">
            <summary>
            Gets or sets whether format is default.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathPhantom.ControlProperties">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Office.IOfficeRunFormat"/> object that represent the control property of MathML function.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathPhantom.#ctor(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Office.OfficeMathPhantom"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathPhantom.GetPropertyValue(System.Int32)">
            <summary>
            Gets the property value.
            </summary>
            <param name="propKey">The prop key.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathPhantom.SetPropertyValue(System.Int32,System.Object)">
            <summary>
            Sets the property value.
            </summary>
            <param name="propKey">The property key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathPhantom.GetDefValue(System.Int32)">
            <summary>
            Sets the default properties.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathPhantom.PropertiesHash">
            <summary>
            Gets the PropertiesHash value.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathPhantom.Item(System.Int32)">
            <summary>
            Gets or sets the value for the property with specified key.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathPhantom.HasValue(System.Int32)">
            <summary>
            Determines whether the specified property key has value.
            </summary>
            <param name="propertyKey">The property key.</param>
            <returns>
            	if the specified property key has value, set to <c>true</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathPhantom.HasKey(System.Int32)">
            <summary>
            Returns the value indicating whether the key exists in the properties collection.
            </summary>
            <param name="key">The <b>integer</b> that specifies the key.</param>
            <returns>
            	<b>True</b> if the specified key is present, otherwise <b>false</b>.
            </returns>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathPhantom.Clone(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Clones the item
            </summary>
        </member>
        <member name="T:Syncfusion.Office.OfficeMathProperties">
             <summary>
            Represents the MathML properties. 
             </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathProperties.m_propertiesHash">
            <summary>
            Member to hold the collection of properties values and its keys.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathProperties.BreakOnBinaryOperators">
            <summary> 
            Gets or set a value which indicates how binary operators are treated when they coincide with a line break.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathProperties.BreakOnBinarySubtraction">
            <summary> 
            Gets or set a value which indicates how the subtraction operator is treated when it coincides with a line break, when brkBin is set to repeat.
            </summary> 
        </member>
        <member name="P:Syncfusion.Office.OfficeMathProperties.DefaultJustification">
            <summary> 
            Gets or set a value which indicates the default justification of display math, at the document level.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathProperties.DisplayMathDefaults">
            <summary> 
            Gets or set a value which indicates the document-level property to overwrite paragraph settings for mathematical text.
            </summary> 
        </member>
        <member name="P:Syncfusion.Office.OfficeMathProperties.InterEquationSpacing">
            <summary> 
            Gets or set a value which indicates spacing between equations, expressions, or other instances of mathematical text within a display math paragraph, in twips.
            </summary> 
        </member>
        <member name="P:Syncfusion.Office.OfficeMathProperties.IntegralLimitLocations">
            <summary> 
            Gets or set a value which indicates the document setting for the default placement of integral limits.
            </summary> 
        </member>
        <member name="P:Syncfusion.Office.OfficeMathProperties.IntraEquationSpacing">
            <summary> 
            Gets or set a value which indicates the spacing between adjacent display math paragraphs, in twips.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.Office.OfficeMathProperties.LeftMargin" -->
        <member name="P:Syncfusion.Office.OfficeMathProperties.MathFont">
            <summary> 
            Gets or set a value which indicates the default math font to be used in the document.
            </summary> 
        </member>
        <member name="P:Syncfusion.Office.OfficeMathProperties.NAryLimitLocation">
            <summary> 
            Gets or set a value which indicates the document setting for the default placement of n-ary limits other than integrals.
            </summary> 
        </member>
        <member name="P:Syncfusion.Office.OfficeMathProperties.PostParagraphSpacing">
            <summary> 
            Gets or set a value which indicates the spacing after a math paragraph, in twips.
            </summary> 
        </member>
        <member name="P:Syncfusion.Office.OfficeMathProperties.PreParagraphSpacing">
            <summary> 
            Gets or set a value which indicates the spacing before a math paragraph, in twips.
            </summary> 
        </member>
        <member name="P:Syncfusion.Office.OfficeMathProperties.RightMargin">
            <summary> 
            Gets or set a value which indicates the right margin for math.
            </summary> 
        </member>
        <member name="P:Syncfusion.Office.OfficeMathProperties.SmallFraction">
             <summary> 
            Gets or set a value which indicates a reduced fraction size display math, such that the numerator and denominator are written in script size instead of at the size of regular text.
             </summary> 
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.Office.OfficeMathProperties.WrapIndent" -->
        <member name="P:Syncfusion.Office.OfficeMathProperties.WrapRight">
            <summary> 
            Gets or set a value which indicates the right justification of the wrapped line of an instance of mathematical text. 
            </summary> 
        </member>
        <member name="P:Syncfusion.Office.OfficeMathProperties.IsDefault">
            <summary>
            Gets or sets whether format is default.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathProperties.PropertiesHash">
            <summary>
            Gets the PropertiesHash value.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathProperties.Item(System.Int32)">
            <summary>
            Gets or sets the value for the property with specified key.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathProperties.GetPropertyValue(System.Int32)">
            <summary>
            Gets the property value.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathProperties.SetPropertyValue(System.Int32,System.Object)">
            <summary>
            Sets the property Value.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathProperties.GetDefValue(System.Int32)">
            <summary>
            Return default value of the respective key.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathProperties.HasValue(System.Int32)">
            <summary>
            Determines whether the specified property key has value.
            </summary>
            <param name="propertyKey">The property key.</param>
            <returns>
            	if the specified property key has value, set to <c>true</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathProperties.HasKey(System.Int32)">
            <summary>
            Returns the value indicating whether the key exists in the properties collection.
            </summary>
            <param name="key">The <b>integer</b> that specifies the key.</param>
            <returns>
            	<b>True</b> if the specified key is present, otherwise <b>false</b>.
            </returns>
        </member>
        <member name="T:Syncfusion.Office.OfficeMathRadical">
            <summary>
            Represents class for radical function
            </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathRadical.m_propertiesHash">
            <summary>
            Member to hold the collection of properties values and its keys.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathRadical.m_degree">
            <summary>
            Member that represents the degree for a radical.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathRadical.m_equation">
            <summary>
            Member that represents the math object.       
            </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathRadical.m_controlProperties">
            <summary>
            Represents the character format
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathRadical.Degree">
            <summary>
            Gets the <see cref="T:Syncfusion.Office.IOfficeMath"/>  object that represents the degree for a radical. Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathRadical.Equation">
            <summary>
             Gets an <see cref="T:Syncfusion.Office.IOfficeMath"/> object that represents the base of the specified equation object.                                         
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathRadical.HideDegree">
            <summary>
            Gets or sets a value that represents whether to hide the degree for a radical. 
            </summary>
            <value><b>True</b> if to hide the degree for a radical; otherwise, <b>false</b>.</value>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathRadical.PropertiesHash">
            <summary>
            Gets the PropertiesHash value.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathRadical.Item(System.Int32)">
            <summary>
            Gets or sets the value for the property with specified key.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathRadical.ControlProperties">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Office.IOfficeRunFormat"/> object that represent the control property of MathML function.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathRadical.#ctor(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Office.IOfficeMathRadical"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathRadical.GetPropertyValue(System.Int32)">
            <summary>
            Gets the property value.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathRadical.SetPropertyValue(System.Int32,System.Object)">
            <summary>
            Sets the property value.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathRadical.GetDefValue(System.Int32)">
            <summary>
            Return default value of the respective key.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathRadical.HasValue(System.Int32)">
            <summary>
            Determines whether the specified property key has value.
            </summary>
            <param name="propertyKey">The property key.</param>
            <returns>
            	if the specified property key has value, set to <c>true</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathRadical.HasKey(System.Int32)">
            <summary>
            Returns the value indicating whether the key exists in the properties collection.
            </summary>
            <param name="key">The <b>integer</b> that specifies the key.</param>
            <returns>
            	<b>True</b> if the specified key is present, otherwise <b>false</b>.
            </returns>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathRadical.Clone(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Clones the item
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathRadical.Close">
            <summary>
            Closes this Instance.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.OfficeMaths">
            <summary>
            Represents a collection of Math.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMaths.Item(System.Int32)">
            <summary>
            Represents the specified item in the collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMaths.#ctor(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Office.OfficeMaths"/> class.
            the owner <see cref="T:Syncfusion.Office.OfficeMathParagraph"/> instance.
            </summary>
            <param name="owner">The owner.</param>
        </member>
        <member name="M:Syncfusion.Office.OfficeMaths.Add(System.Int32)">
            <summary>
            Adds <see cref="T:Syncfusion.Office.IOfficeMath"/> instance to the collection at specified index.
            </summary>
            <param name="index">The Index, where to add the <see cref="T:Syncfusion.Office.IOfficeMath"/> instance.</param>
            <returns>Returns the newly added <see cref="T:Syncfusion.Office.IOfficeMath"/>. </returns>  
            <exception cref="T:System.NotSupportedException">
            <para> When adding arguments in <see cref="T:Syncfusion.Office.IOfficeMathMatrixRow"/> or <see cref="T:Syncfusion.Office.IOfficeMathMatrixColumn"/>, it throws exception.</para>
            <para> Add new <see cref="T:Syncfusion.Office.IOfficeMathMatrixRow"/> and <see cref="T:Syncfusion.Office.IOfficeMathMatrixColumn"/> to add new argument in <see cref="T:Syncfusion.Office.IOfficeMathMatrix"/></para>
            </exception>
        </member>
        <member name="M:Syncfusion.Office.OfficeMaths.Add">
            <summary>
            Adds <see cref="T:Syncfusion.Office.IOfficeMath"/> instance to the collection.
            </summary>
            <returns>Returns the newly added <see cref="T:Syncfusion.Office.IOfficeMath"/>. </returns>
            <exception cref="T:System.NotSupportedException">
            <para> When adding arguments in <see cref="T:Syncfusion.Office.IOfficeMathMatrixRow"/> or <see cref="T:Syncfusion.Office.IOfficeMathMatrixColumn"/>, it throws exception.</para>
            <para> Add new <see cref="T:Syncfusion.Office.IOfficeMathMatrixRow"/> and <see cref="T:Syncfusion.Office.IOfficeMathMatrixColumn"/> to add new argument in <see cref="T:Syncfusion.Office.IOfficeMathMatrix"/></para>
            </exception>
        </member>
        <member name="M:Syncfusion.Office.OfficeMaths.Add(Syncfusion.Office.OfficeMath)">
            <summary>
            Adds an item 
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>When adding arguments in <see cref="T:Syncfusion.Office.IOfficeMathMatrixRow"/> or <see cref="T:Syncfusion.Office.IOfficeMathMatrixColumn"/>, it throws exception.</para>
            <para>Add new <see cref="T:Syncfusion.Office.IOfficeMathMatrixRow"/> or <see cref="T:Syncfusion.Office.IOfficeMathMatrixColumn"/> to add new argument in <see cref="T:Syncfusion.Office.IOfficeMathMatrix"/></para>
            </exception>
        </member>
        <member name="M:Syncfusion.Office.OfficeMaths.OnBeforeInsert">
            <summary>
            Check the condition before insert a math
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMaths.CloneItemsTo(Syncfusion.Office.OfficeMaths)">
            <summary>
            Clones the item in collection
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMaths.Close">
            <summary>
            Clears the object.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.IOfficeMathMatrixColumn">
             <summary>
            Represents a matrix column.
             </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathMatrixColumn.ColumnIndex">
            <summary>
            Gets an integer that represents the ordinal position of a column within the collection of columns in a matrix.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathMatrixColumn.Arguments">
            <summary>
            Gets  a <see cref= "T:Syncfusion.Office.OfficeMaths" /> object that represents the arguments in a matrix column.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathMatrixColumn.HorizontalAlignment">
            <summary>
            Gets or sets a MathHorizontalAlignment constant that represents the horizontal alignment for arguments in a matrix column.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.IOfficeMathMatrixRow">
             <summary>
            Represents a  interface matrix row.
             </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathMatrixRow.RowIndex">
            <summary>
            Gets an integer that represents the ordinal position of a row within the collection of rows in a matrix.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMathMatrixRow.Arguments">
            <summary>
            Gets a <see cref= "T:Syncfusion.Office.OfficeMaths" /> object that represents the arguments in a matrix row.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.OfficeMathAccent">
            <summary>
            Returns an <see cref="T:Syncfusion.Office.IOfficeMathAccent"/> object that represents a base character with a combining accent mark. Read-only. 
            </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathAccent.m_equation">
            <summary>
            Specifies a <see cref="T:Syncfusion.Office.IOfficeMath"/> object that represents the base of the specified equation object. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathAccent.AccentCharacter">
            <summary>
            Gets or sets a string that represents the accent character for the <see cref="T:Syncfusion.Office.IOfficeMathAccent"/> object. Read/write.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathAccent.Equation">
            <summary>
            Gets a <see cref="T:Syncfusion.Office.IOfficeMath"/> object that represents the base of the specified equation object. Read-only. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathAccent.PropertiesHash">
            <summary>
            Gets the propertieshash value.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathAccent.Item(System.Int32)">
            <summary>
            Gets or sets the value for the property with specified key.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathAccent.ControlProperties">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Office.IOfficeRunFormat"/> object that represent the control property of MathML function.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathAccent.#ctor(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Office.OfficeMathAccent"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathAccent.Close">
            <summary>
            Closes this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathAccent.Clone(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Clones the item
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathAccent.GetPropertyValue(System.Int32)">
            <summary>
            Gets the property value.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathAccent.SetPropertyValue(System.Int32,System.Object)">
            <summary>
            Sets the property value.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathAccent.GetDefValue(System.Int32)">
            <summary>
            Return default value of the respective key.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathAccent.HasValue(System.Int32)">
            <summary>
            Determines whether the specified property key has value.
            </summary>
            <param name="propertyKey">The property key.</param>
            <returns>
            	if the specified property key has value, set to <c>true</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathAccent.HasKey(System.Int32)">
            <summary>
            Returns the value indicating whether the key exists in the properties collection.
            </summary>
            <param name="key">The <b>integer</b> that specifies the key.</param>
            <returns>
            	<b>True</b> if the specified key is present, otherwise <b>false</b>.
            </returns>
        </member>
        <member name="T:Syncfusion.Office.OfficeMathBreak">
             <summary>
            Represents a class to maintain break between the equation.
             </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathBreak.m_propertiesHash">
            <summary>
            Member to hold the collection of properties values and its keys.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathBreak.AlignAt">
            <summary>
            Gets or sets an integer that represents the operator in one line.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathBreak.PropertiesHash">
            <summary>
            Gets the PropertiesHash value.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathBreak.Item(System.Int32)">
            <summary>
            Gets or sets the value for the property with specified key.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathBreak.#ctor(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Office.IOfficeMathBreak"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathBreak.GetPropertyValue(System.Int32)">
            <summary>
            Gets the property value.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathBreak.SetPropertyValue(System.Int32,System.Object)">
            <summary>
            Sets the property Value.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathBreak.GetDefValue(System.Int32)">
            <summary>
            Return default value of the respective key.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathBreak.HasValue(System.Int32)">
            <summary>
            Determines whether the specified property key has value.
            </summary>
            <param name="propertyKey">The property key.</param>
            <returns>
            	if the specified property key has value, set to <c>true</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathBreak.HasKey(System.Int32)">
            <summary>
            Returns the value indicating whether the key exists in the properties collection.
            </summary>
            <param name="key">The <b>integer</b> that specifies the key.</param>
            <returns>
            	<b>True</b> if the specified key is present, otherwise <b>false</b>.
            </returns>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathBreak.Clone(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Clones the item
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathBreak.Close">
            <summary>
            Closes this Instance.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.OfficeMathFormat">
            <summary>
            Represents the <see cref="T:Syncfusion.Office.OfficeMathFormat"/> object that can be used for formatting the character of the mathematical text.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathFormat.HasAlignment">
            <summary>
            Gets or sets a boolean that represents the alignment property. When multiple alignment point is set, lastly set alignment point is considered. Default value is <b>false</b>.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathFormat.Break">
            <summary>
            Gets or sets individual line breaks in an equation.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathFormat.HasLiteral">
            <summary>
            Gets or sets a boolean that represents whether the characters in the run are literal (i.e., they are to be interpreted literally and not be built up based on any implied mathematical meaning). Default value is <b>false</b>.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathFormat.HasNormalText">
            <summary>
            Gets or sets a boolean that represents whether the run is normal text, i.e., math italics and math spacing are not applied. Default value is <b>false</b>.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathFormat.Font">
            <summary>
            Gets or sets the script applied to the characters in the run. Default value is <b>Roman</b>.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathFormat.Style">
            <summary>
            Gets or sets the style applied to the characters in the run. Default style is italic.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathFormat.PropertiesHash">
            <summary>
            Gets the propertieshash value.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathFormat.Item(System.Int32)">
            <summary>
            Gets or sets the value for the property with specified key.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathFormat.IsDefault">
            <summary>
            Gets or sets whether format is default.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathFormat.Close">
            <summary>
            Closes this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathFormat.GetPropertyValue(System.Int32)">
            <summary>
            Gets the property value.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathFormat.SetPropertyValue(System.Int32,System.Object)">
            <summary>
            Sets the property value.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathFormat.GetDefValue(System.Int32)">
            <summary>
            Return default value of the respective key.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathFormat.HasValue(System.Int32)">
            <summary>
            Determines whether the specified property key has value.
            </summary>
            <param name="propertyKey">The property key.</param>
            <returns>
            	if the specified property key has value, set to <c>true</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathFormat.HasKey(System.Int32)">
            <summary>
            Returns the value indicating whether the key exists in the properties collection.
            </summary>
            <param name="key">The <b>integer</b> that specifies the key.</param>
            <returns>
            	<b>True</b> if the specified key is present, otherwise <b>false</b>.
            </returns>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathFormat.Clone(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Clones the item
            </summary>
        </member>
        <member name="T:Syncfusion.Office.OfficeMathBreaks">
             <summary>
            Represents the Math break collection. 
            Represents the Math break collection. 
             </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathBreaks.#ctor(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Office.IOfficeMathBreaks"/> class.
            </summary>
            <param name="owner">The owner.</param>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathBreaks.Add(System.Int32)">
            <summary>
            Adds <see cref="T:Syncfusion.Office.IOfficeMathBreak"/> instance to the collection at specified index.
            </summary>
            <param name="index">The Index, where to add the <see cref="T:Syncfusion.Office.IOfficeMathBreak"/> instance.</param>
            <returns>Returns the newly added <see cref="T:Syncfusion.Office.IOfficeMathBreak"/>. </returns>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathBreaks.Add">
            <summary>
            Adds <see cref="T:Syncfusion.Office.IOfficeMathBreak"/> instance to the collection.
            </summary>
            <returns>Returns the newly added <see cref="T:Syncfusion.Office.IOfficeMathBreak"/>. </returns>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathBreaks.Item(System.Int32)">
            <summary>
            Returns <see cref="T:Syncfusion.Office.IOfficeMathBreak"/> object that represents the specified item in the collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathBreaks.CloneItemsTo(Syncfusion.Office.OfficeMathBreaks)">
            <summary>
            Clone the items in collection
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathBreaks.Close">
            <summary>
            Clears the object.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.OfficeMathFunctionBase">
            <summary>
            Represents the  Mathematical function.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathFunctionBase.Type">
            <summary>
            Gets the type of the mathematical function.Read-Only.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathFunctionBase.#ctor(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Office.OfficeMathFunctionBase"/> class with
            the owner <see cref="T:Syncfusion.Office.OfficeMathFunctionBase"/> instance.
            </summary>
            <param name="owner">The owner.</param>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathFunctionBase.GetDefaultControlProperties">
            <summary>
            Get default control properties of function.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathFunctionBase.GetBaseMathParagraph(Syncfusion.Office.OfficeMathFunctionBase)">
            <summary>
            Get math paragraph
            </summary>
            <param name="mathFunction"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Office.OfficeMathBaseCollection">
            <summary>
            Represents a Collection of function.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathBaseCollection.Item(System.Int32)">
            <summary>
            Represents the specified item in the Collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathBaseCollection.#ctor(Syncfusion.Office.OfficeMath)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Office.OfficeMathBaseCollection"/> class with
            the owner <see cref="T:Syncfusion.Office.OfficeMathBaseCollection"/> instance.
            </summary>
            <param name="owner">The owner.</param>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathBaseCollection.Add(System.Int32,Syncfusion.Office.MathFunctionType)">
            <summary>
            Adds <see cref="T:Syncfusion.Office.IOfficeMathFunctionBase"/> instance to the collection at specified index.
            </summary>
            <param name="index">The Index, where to add the <see cref="T:Syncfusion.Office.IOfficeMathFunctionBase"/> instance.</param>
            <param name="mathFunctionType"> Represents the type of function to add.</param>
            <returns>Returns the newly added <see cref="T:Syncfusion.Office.IOfficeMathFunctionBase"/>. </returns>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathBaseCollection.Add(Syncfusion.Office.MathFunctionType)">
            <summary>
            Adds <see cref="T:Syncfusion.Office.IOfficeMathFunctionBase"/> instance to the collection.
            </summary>
            <returns>Returns the newly added <see cref="T:Syncfusion.Office.IOfficeMathFunctionBase"/>. </returns>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathBaseCollection.CloneItemsTo(Syncfusion.Office.OfficeMathBaseCollection)">
            <summary>
            Clone the items in collection
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathBaseCollection.CloneItemsTo(Syncfusion.Office.OfficeMathBaseCollection,System.Int32,System.Int32)">
            <summary>
            Clone the items in collection from start index to end index
            </summary>
            <param name="items"></param>
            <param name="startIndex">Represent the start index to clone from.</param>
            <param name="endIndex">Represent the end index to clone until.</param>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathBaseCollection.Close">
            <summary>
            Clears the object.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.OfficeMathMatrixColumn">
             <summary>
            Represents a matrix column.
             </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathMatrixColumn.ColumnAlignKey">
            <summary>
            Keys.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathMatrixColumn.m_args">
            <summary>
            Gets a <see cref= "T:Syncfusion.Office.OfficeMaths" /> object that represents the arguments in a matrix row.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathMatrixColumn.m_propertiesHash">
            <summary>
            Holds the collection of properties values and its keys.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathMatrixColumn.ColumnIndex">
            <summary>
            Gets an Integer that represents the ordinal position of a column within the collection of columns in a matrix.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathMatrixColumn.Arguments">
            <summary>
            Gets  a <see cref= "T:Syncfusion.Office.OfficeMaths" /> object that represents the arguments in a matrix column.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathMatrixColumn.HorizontalAlignment">
            <summary>
            Gets or sets a MathHorizontalAlignment constant that represents the horizontal alignment for arguments in a matrix column.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathMatrixColumn.#ctor(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Office.OfficeMathMatrixColumns"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathMatrixColumn.GetPropertyValue(System.Int32)">
            <summary>
            Gets the property value.
            </summary>
            <param name="propKey">The prop key.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathMatrixColumn.SetPropertyValue(System.Int32,System.Object)">
            <summary>
            Sets the property value.
            </summary>
            <param name="propKey">The property key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathMatrixColumn.GetDefValue(System.Int32)">
            <summary>
            Sets the default properties.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathMatrixColumn.PropertiesHash">
            <summary>
            Gets the PropertiesHash value.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathMatrixColumn.Item(System.Int32)">
            <summary>
            Gets or sets the value for the property with specified key.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathMatrixColumn.HasValue(System.Int32)">
            <summary>
            Determines whether the specified property key has value.
            </summary>
            <param name="propertyKey">The property key.</param>
            <returns>
            	if the specified property key has value, set to <c>true</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathMatrixColumn.HasKey(System.Int32)">
            <summary>
            Returns the value indicating whether the key exists in the properties collection.
            </summary>
            <param name="key">The <b>integer</b> that specifies the key.</param>
            <returns>
            	<b>True</b> if the specified key is present, otherwise <b>false</b>.
            </returns>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathMatrixColumn.OnColumnAdded">
            <summary>
            After added a column in matrix.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathMatrixColumn.Clone(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Clones the item
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathMatrixColumn.Close">
            <summary>
            Closes the instances.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.OfficeMathMatrixRow">
             <summary>
            Represents a matrix row.
             </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathMatrixRow.m_args">
            <summary>
            Gets a <see cref= "T:Syncfusion.Office.OfficeMaths" /> object that represents the arguments in a matrix row.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathMatrixRow.RowIndex">
            <summary>
            Gets an integer that represents the ordinal position of a row within the collection of rows in a matrix.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathMatrixRow.Arguments">
            <summary>
            Gets a <see cref= "T:Syncfusion.Office.OfficeMaths" /> object that represents the arguments in a matrix row.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathMatrixRow.#ctor(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Office.OfficeMathMatrixRow"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathMatrixRow.Clone(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Clones the item
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathMatrixRow.Close">
            <summary>
            Closes the instances.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathMatrixRow.OnRowAdded">
            <summary>
            After row added into the matrix.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.OfficeMathRightScript">
            <summary>
            Represents an equation with a base that contains a superscript or subscript. 
            </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathRightScript.m_controlProperties">
            <summary>
            Represents the character format
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathRightScript.IsSkipAlign">
            <summary>
            Gets or sets a boolean that represents whether to horizontally align subscripts and superscripts in the <see cref="T:Syncfusion.Office.IOfficeMathRightScript"/> object. Read/write. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathRightScript.Subscript">
            <summary>
            Gets an <see cref="T:Syncfusion.Office.IOfficeMath"/> object that represents the subscript for a <see cref="T:Syncfusion.Office.IOfficeMathRightScript"/> object. Read-only. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathRightScript.Superscript">
            <summary>
            Gets an <see cref="T:Syncfusion.Office.IOfficeMath"/> object that represents the superscript for a <see cref="T:Syncfusion.Office.IOfficeMathRightScript"/> object. Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathRightScript.Equation">
            <summary>
            Gets an <see cref="T:Syncfusion.Office.IOfficeMath"/> object that represents the base of the specified equation object. Read-only. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathRightScript.PropertiesHash">
            <summary>
            Gets the propertieshash value.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathRightScript.Item(System.Int32)">
            <summary>
            Gets or sets the value for the property with specified key.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathRightScript.ControlProperties">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Office.IOfficeRunFormat"/> object that represent the control property of MathML function.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathRightScript.#ctor(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Office.IOfficeMathRightScript"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathRightScript.ToScrPre">
            <summary>
            Converts an equation with a base superscript or subscript to an equation with a superscript or subscript to the left of the base.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathRightScript.RemoveSub">
            <summary>
            Removes the subscript for an equation and returns an <see cref="T:Syncfusion.Office.OfficeMathFunctionBase"/> object that represents the updated equation without the subscript.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathRightScript.RemoveSup">
            <summary>
            Removes the superscript for an equation and returns an <see cref="T:Syncfusion.Office.OfficeMathFunctionBase"/> object that represents the updated equation without the superscript.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathRightScript.Close">
            <summary>
            Closes this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathRightScript.HasValue(System.Int32)">
            <summary>
            Determines whether the specified property key has value.
            </summary>
            <param name="propertyKey">The property key.</param>
            <returns>
            	if the specified property key has value, set to <c>true</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathRightScript.HasKey(System.Int32)">
            <summary>
            Returns the value indicating whether the key exists in the properties collection.
            </summary>
            <param name="key">The <b>integer</b> that specifies the key.</param>
            <returns>
            	<b>True</b> if the specified key is present, otherwise <b>false</b>.
            </returns>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathRightScript.GetPropertyValue(System.Int32)">
            <summary>
            Gets the property value.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathRightScript.SetPropertyValue(System.Int32,System.Object)">
            <summary>
            Sets the property value.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathRightScript.GetDefValue(System.Int32)">
            <summary>
            Return default value of the respective key.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathRightScript.Clone(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Clones the item
            </summary>
        </member>
        <member name="T:Syncfusion.Office.OfficeMathScript">
            <summary>
            Represents an equation with a base that contains a subscript or superscript.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathScript.m_scriptType">
            <summary>
            Specifies a <see cref="T:Syncfusion.Office.MathScriptType"/> represent either a subscript or superscript.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathScript.m_equation">
            <summary>
             Specifies an <see cref="T:Syncfusion.Office.IOfficeMath"/> object that represents the base of the specified equation object.                                         
            </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathScript.m_script">
             <summary>
            Gets the type of the script.
             </summary>
        </member>
        <member name="F:Syncfusion.Office.OfficeMathScript.m_controlProperties">
            <summary>
            Represents the character format
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathScript.ScriptType">
            <summary>
            Gets or sets a <see cref="T:Syncfusion.Office.MathScriptType"/> type to represent either a subscript or superscript.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathScript.Equation">
            <summary>
             Gets an <see cref="T:Syncfusion.Office.IOfficeMath"/> object that represents the base of the specified equation object.                                         
            </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathScript.Script">
             <summary>
            Gets the type of the script.
             </summary>
        </member>
        <member name="P:Syncfusion.Office.OfficeMathScript.ControlProperties">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Office.IOfficeRunFormat"/> object that represent the control property of MathML function.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathScript.#ctor(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Office.IOfficeMathScript"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathScript.Close">
            <summary>
            Closes this Instance.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OfficeMathScript.Clone(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Clones the item
            </summary>
        </member>
        <member name="T:Syncfusion.Office.OwnerHolder">
            <summary>
            Provides the base implementation for all the classes with holder behavior.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.OwnerHolder.m_owner">
            <summary>
            Specifies the OwnerHolder.       
            </summary>       
        </member>
        <member name="P:Syncfusion.Office.OwnerHolder.OwnerMathEntity">
            <summary>
            Gets the owner.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OwnerHolder.#ctor(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Office.OwnerHolder"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OwnerHolder.SetOwner(Syncfusion.Office.IOfficeMathEntity)">
            <summary>
            Sets the owner.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.OwnerHolder.Close">
            <summary>
            Closes this instance.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.MathJustification">
            <summary>
            Specifies the justification of the equation.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MathJustification.CenterGroup">
            <summary>
            Center as a group.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MathJustification.Center">
            <summary>
            Center.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MathJustification.Left">
            <summary>
            Left.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MathJustification.Right">
            <summary>
            Right.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.MathFontType">
            <summary>
            Specifies the script applied to the characters in the run.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MathFontType.DoubleStruck">
            <summary>
            Double-struck.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MathFontType.Fraktur">
            <summary>
            Fractur.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MathFontType.Monospace">
            <summary>
            Monospace.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MathFontType.Roman">
            <summary>
            Roman.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MathFontType.SansSerif">
            <summary>
            Sans-serif.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MathFontType.Script">
            <summary>
            Script.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.MathStyleType">
            <summary>
            Specifies the style of the characters in the run.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MathStyleType.Italic">
            <summary>
            Italic.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MathStyleType.BoldItalic">
            <summary>
            Bold-italic.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MathStyleType.Bold">
            <summary>
            Bold.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MathStyleType.Regular">
            <summary>
            Plain.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.MathFunctionType">
            <summary>
            Specifies the type of the MathML function.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MathFunctionType.Accent">
            <summary>
            Specifies equation accent mark.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MathFunctionType.Bar">
            <summary>
            Specifies equation fraction bar.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MathFunctionType.BorderBox">
            <summary>
            Specifies border box.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MathFunctionType.Box">
            <summary>
            Specifies box.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MathFunctionType.Delimiter">
            <summary>
            Specifies equation delimiters.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MathFunctionType.EquationArray">
            <summary>
            Specifies equation array.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MathFunctionType.Fraction">
            <summary>
            Specifies equation fraction.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MathFunctionType.Function">
            <summary>
            Specifies equation function.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MathFunctionType.GroupCharacter">
            <summary>
            Specifies Group character.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MathFunctionType.Limit">
            <summary>
            Specifies lower and upper limit.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MathFunctionType.Matrix">
            <summary>
            Specifies equation matrix.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MathFunctionType.NArray">
            <summary>
            Specifies equation N-array operator.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MathFunctionType.Phantom">
            <summary>
            Specifies equation phantom.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MathFunctionType.Radical">
            <summary>
            Specifies equation base expression.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MathFunctionType.LeftSubSuperscript">
            <summary>
            Specifies Left subScript.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MathFunctionType.SubSuperscript">
            <summary>
            Specifies subScript and superScript.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MathFunctionType.RightSubSuperscript">
            <summary>
            Specifies SubSuperScrpit.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MathFunctionType.RunElement">
            <summary>
            Specifies Equation text.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.MathDelimiterShapeType">
             <summary>
            Specifies the type that represents the appearance of delimiters.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MathDelimiterShapeType.Centered">
            <summary>
            Vertically centers delimiters around the entire height of the equation causing delimiters grow equally above and below their midpoint.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MathDelimiterShapeType.Match">
            <summary>
            Matches the shape of the delimiters to the size of their contents.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.MathFractionType">
            <summary> 
            Specifies the type of fraction bar. 
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MathFractionType.NormalFractionBar">
            <summary> 
            Normal fraction bar. 
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MathFractionType.NoFractionBar">
            <summary> 
            No fraction bar. 
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MathFractionType.SkewedFractionBar">
            <summary> 
            Skewed fraction bar.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MathFractionType.FractionInline">
            <summary> 
            Show fraction inline.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.MathHorizontalAlignment">
            <summary>
            Specifies the horizontal alignment for arguments in a matrix column.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MathHorizontalAlignment.Center">
            <summary>
            Center.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MathHorizontalAlignment.Left">
            <summary>
            Left.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MathHorizontalAlignment.Right">
            <summary>
            Right.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.MathVerticalAlignment">
            <summary>
            Specifies the vertical alignment for a matrix.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MathVerticalAlignment.Center">
            <summary>
            Center.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MathVerticalAlignment.Top">
            <summary>
            Top.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MathVerticalAlignment.Bottom">
            <summary>
            Bottom.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.SpacingRule">
            <summary>
            Specifies the spacing rule for the space that appears between two columns or two rows in a mathematical equation.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.SpacingRule.Single">
            <summary>
            Single line.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.SpacingRule.OneAndHalf">
            <summary>
            One and half line.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.SpacingRule.Double">
            <summary>
            Double line.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.SpacingRule.Exactly">
            <summary>
            Exact line.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.SpacingRule.Multiple">
            <summary>
            Multiple line.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.MathScriptType">
            <summary>
            Specifies the script type of equation.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MathScriptType.Superscript">
            <summary>
            SuperScript.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MathScriptType.Subscript">
            <summary>
            SubScript.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.MathLimitType">
             <summary>
            Specifies the type that represents the limit.
             </summary>
        </member>
        <member name="F:Syncfusion.Office.MathLimitType.LowerLimit">
            <summary>
            Specifies the lower limit.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.MathLimitType.UpperLimit">
            <summary>
            Specifies the upper limit.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.BreakOnBinaryOperatorsType">
             <summary>
            Specifies how binary operators are treated when they coincide with a line break.
             </summary>
        </member>
        <member name="F:Syncfusion.Office.BreakOnBinaryOperatorsType.After">
             <summary>
            Specifies the binary operator appears after the break.
             </summary>
        </member>
        <member name="F:Syncfusion.Office.BreakOnBinaryOperatorsType.Before">
             <summary>
            Specifies the binary operator appears before the break.
             </summary>
        </member>
        <member name="F:Syncfusion.Office.BreakOnBinaryOperatorsType.Repeat">
             <summary>
            Specifies the binary operator appears on both sides of the break.
             </summary>
        </member>
        <member name="T:Syncfusion.Office.BreakOnBinarySubtractionType">
             <summary>
            Specifies how the subtraction operator is treated when it coincides with a line break, when brkBin is set to repeat.
             </summary>
        </member>
        <member name="F:Syncfusion.Office.BreakOnBinarySubtractionType.PlusMinus">
             <summary>
            Specifies the repetition of subtraction sign after a line-wrapping break is plus on the first line and minus on the second line. 
             </summary>
        </member>
        <member name="F:Syncfusion.Office.BreakOnBinarySubtractionType.MinusPlus">
             <summary>
            Specifies the repetition of subtraction sign after a line-wrapping break is minus on the first line and plus on the second line.
             </summary>
        </member>
        <member name="F:Syncfusion.Office.BreakOnBinarySubtractionType.MinusMinus">
             <summary>
            Specifies the repetition of subtraction sign after a line-wrapping break is minus on the first and second lines. 
             </summary>
        </member>
        <member name="T:Syncfusion.Office.LimitLocationType">
            <summary>
            Represent the limit location of integral and n-ary.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LimitLocationType.SubSuperscript">
            <summary>
            Subscript-Superscript location
            </summary>
        </member>
        <member name="F:Syncfusion.Office.LimitLocationType.UnderOver">
            <summary>
            Under-Over location.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.IOfficeRun">
            <summary>
            Represents an interface for math run elements
            </summary>
        </member>
        <member name="M:Syncfusion.Office.IOfficeRun.CloneRun">
            <summary>
            Creates a duplicate copy of <see cref="T:Syncfusion.Office.IOfficeRun"/>.
            </summary>
            <returns>The reference of the newly created object.</returns>
        </member>
        <member name="M:Syncfusion.Office.IOfficeRun.Dispose">
            <summary>
            Releases all resources used by the object.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeRun.OwnerMathRunElement">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.IOfficeMath">
            <summary>
            Represents an equation. Math objects are members of the <see cref="T:Syncfusion.Office.OfficeMaths"/> collection.                
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMath.ArgumentSize">
            <summary>
            Gets or sets an integer that represents the script size of an argument.
            </summary>
            <value>The <b>int</b> that specifies the script size of an argument.</value>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMath.Functions">
            <summary>
            Gets or sets an <see cref="T:Syncfusion.Office.OfficeMathBaseCollection"/> collection that represents the functions contained within an equation. Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMath.OwnerColumn">
            <summary>
            Gets a <see cref="T:Syncfusion.Office.IOfficeMathMatrixColumn"/> object that represents the parent column in a matrix. Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMath.OwnerMath">
            <summary>
            Gets a <see cref="T:Syncfusion.Office.IOfficeMath"/> object that represents the parent element. Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMath.OwnerRow">
            <summary>
            Gets a <see cref="T:Syncfusion.Office.IOfficeMathMatrixRow"/> object that represents the parent row in a matrix. Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.IOfficeMath.Breaks">
            <summary>
            Gets a <see cref="T:Syncfusion.Office.IOfficeMathBreaks"/> collection that represents the line breaks in an equation.Read-only.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.MdParagraphStyle.None">
            <summary> 
            None. This is default style. 
            </summary> 
        </member>
        <member name="F:Syncfusion.Office.Markdown.MdParagraphStyle.Heading1">
             <summary>
            Heading 1
             </summary> 
        </member>
        <member name="F:Syncfusion.Office.Markdown.MdParagraphStyle.Heading2">
            <summary>
            Heading 2
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.MdParagraphStyle.Heading3">
             <summary> 
            Heading 3
             </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.MdParagraphStyle.Heading4">
             <summary>
            Heading 4
             </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.MdParagraphStyle.Heading5">
            <summary> 
            Heading 5 
            </summary> 
        </member>
        <member name="F:Syncfusion.Office.Markdown.MdParagraphStyle.Heading6">
            <summary> 
            Heading 6 
            </summary> 
        </member>
        <member name="F:Syncfusion.Office.Markdown.MdParagraphStyle.BlockQuote">
            <summary>
            Block quote 
            </summary> 
        </member>
        <member name="T:Syncfusion.Office.Markdown.MdSubSuperScript">
            <summary>
            Specifies type of the sub and super script.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.MdSubSuperScript.None">
            <summary>
            No subscript or superscript.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.MdSubSuperScript.SuperScript">
            <summary>
            Specifies superscript format.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.MdSubSuperScript.SubScript">
            <summary>
            Specifies subscript format.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.Markdown.ColumnAlignment">
            <summary> 
            Specifies type of alignment for table column. 
            </summary> 
        </member>
        <member name="F:Syncfusion.Office.Markdown.ColumnAlignment.Left">
            <summary> 
            Left alignment 
            </summary> 
        </member>
        <member name="F:Syncfusion.Office.Markdown.ColumnAlignment.Right">
            <summary> 
            Right alignment 
            </summary> 
        </member>
        <member name="F:Syncfusion.Office.Markdown.ColumnAlignment.Center">
            <summary> 
            Center alignment. 
            </summary> 
        </member>
        <member name="T:Syncfusion.Office.Markdown.IMdBlock">
            <summary>
            Represents an interface for Block in Markdown 
            </summary>
        </member>
        <member name="T:Syncfusion.Office.Markdown.IMdInline">
            <summary>
            Represents an interface for inlline in Markdown.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.Markdown.MarkdownDocument">
            <summary>
            Represents a class to maintain Markdown document.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MarkdownDocument.Blocks">
            <summary>
            Gets or sets list of blocks in Markdown 
            </summary>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownDocument.AddMdParagraph">
            <summary>
            Adds the <see cref="T:Syncfusion.Office.Markdown.MdParagraph"/> to the Markdown.
            </summary>
            <returns>The reference to the newly created paragraph.</returns>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownDocument.AddMdThematicBreak">
            <summary>
            Adds the <see cref="T:Syncfusion.Office.Markdown.MdThematicBreak"/> to the Markdown.
            </summary>
            <returns>The reference to the newly created thematicbreak.</returns>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownDocument.AddMdCodeBlock">
            <summary>
            Adds the <see cref="T:Syncfusion.Office.Markdown.MdCodeBlock"/> to the Markdown.
            </summary>
            <returns>Returns new MdCodeBlock.</returns>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownDocument.AddMdTable">
            <summary>
            Adds the <see cref="T:Syncfusion.Office.Markdown.MdTable"/> to the Markdown.
            </summary>
            /// <returns>The reference to the newly created table.</returns>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownDocument.Dispose">
            <summary>
            Disposes the document.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.Markdown.MarkdownToTextConverter">
            <summary>
            Converts word document Markdown.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.MarkdownToTextConverter.CrLf">
            <summary>
            Carriage return followed by line feed character: "\x000d\x000a" or "\r\n". 
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.MarkdownToTextConverter.SpaceChar">
            <summary>
            Space character
            </summary>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownToTextConverter.WriteTable(Syncfusion.Office.Markdown.MdTable,System.String,System.String)">
            <summary>
            Iterates through MarkdownTable and writes the contents of table. 
            </summary>
            <returns>The contents of table</returns>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownToTextConverter.IterateInlineItems(System.Collections.Generic.List{Syncfusion.Office.Markdown.IMdInline},System.String)">
            <summary>
            Returns Inline Items.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownToTextConverter.ValidateDelimiters(System.String@,System.String@,System.String@,Syncfusion.Office.Markdown.MdTextRange)">
            <summary>
            Validate the opening and closing delimiters along with symbols
            </summary>
            <param name="m_text">Paragraph text</param>
            <param name="emptySpace">Space to be add after delimiter</param>
            <param name="text">Current textrange text</param>
            <param name="nextSibiling">Next sibiling of current textrange</param>
        </member>
        <member name="T:Syncfusion.Office.Markdown.MdCodeBlock">
            <summary>
            Represents a code block in Markdown. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdCodeBlock.Lines">
            <summary>
            Gets or sets lines of code in code block.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdCodeBlock.IsFencedCode">
            <summary>
            Gets or sets a value indicating whether lines of code are indented or fenced code. Default it is true.  
            </summary>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MdCodeBlock.Close">
            <summary>
            Closes the code block.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.Markdown.MdHyperlink">
            <summary>
            Represents a hyperlink in Markdown. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdHyperlink.Url">
            <summary>
            Gets or sets hyperlink
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdHyperlink.DisplayText">
            <summary>
            Gets or sets display text of hyperlink 
            </summary>
        </member>
        <member name="T:Syncfusion.Office.Markdown.MdListFormat">
            <summary>
            Represents list format for a line in Markdown.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdListFormat.IsNumbered">
            <summary>
            Gets or sets a value indicating whether line is numbered. Default it is false. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdListFormat.BulletedListMarker">
            <summary>
            Gets a value used for bulleted list marker in Markdown.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdListFormat.NumberedListMarker">
            <summary>
            Gets a value used for Numbered List Marker in Markdown 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdListFormat.ListValue">
            <summary>
            Gets or sets a value used for representing the list including the nested list in Markdown
            </summary>
        </member>
        <member name="T:Syncfusion.Office.Markdown.MdParagraph">
            <summary>
            Represents a line in Markdown.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdParagraph.Inlines">
            <summary>
            Gets or sets list of inline items for a line. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdParagraph.StyleName">
            <summary>
            Gets or sets style for a line.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdParagraph.ListFormat">
            <summary>
            Gets or sets list format for a line. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdParagraph.TaskItemProperties">
            <summary>
            Gets or sets the task item properties of a line. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdParagraph.IsHorizontalRule">
            <summary>
            Gets or sets a value indicating horizontal rule in Markdown.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MdParagraph.AddMdTextRange">
            <summary>
            Defines methods to add MdTextRange to Inlines in the markdown document.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MdParagraph.AddMdHyperlink">
            <summary>
            Defines methods to add MdHyperlink to Inlines in the markdown document.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MdParagraph.ApplyParagraphStyle(System.String,Syncfusion.Office.Markdown.MdParagraph)">
            <summary>
            Applies Paragraph style to MdParagraph.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MdParagraph.GetCharForParaStyle(Syncfusion.Office.Markdown.MdParagraph,System.String)">
            <summary>
            Returns the character for Paragraph style.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MdParagraph.Close">
            <summary>
            Closes the paragraph.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.Markdown.MdPicture">
            <summary>
            Represents an image in a Markdown. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdPicture.AltText">
            <summary>
            Gets or sets alternate text for an image. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdPicture.ImageBytes">
            <summary>
            Gets or sets image bytes 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdPicture.ImageFormat">
            <summary>
            Gets or sets the image format
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdPicture.Url">
            <summary>
            Gets or sets the image url
            </summary>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MdPicture.Close">
            <summary>
            Closes the picture.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.Markdown.MdTable">
            <summary>
            Represents a table in Markdown.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdTable.Rows">
            <summary>
            Get or sets the rows in table. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdTable.ColumnAlignments">
            <summary>
            Gets or sets the alignments for each columns in table.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MdTable.AddMdTableRow">
            <summary>
            Adds table row to rows collection.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.Markdown.MdTableCell">
            <summary>
            Represents a table cell in Markdown.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdTableCell.Items">
            <summary>
            Gets or sets the collection of inline items to be preserved in cell.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.Markdown.MdTableRow">
            <summary>
            Represents a table row in Markdown.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdTableRow.Cells">
            <summary>
            Gets or sets the collection of cells for the particular row.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MdTableRow.AddMdTableCell">
            <summary>
            Adds table cell to cells collection for the particular row.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.Markdown.MdTaskProperties">
            <summary>
            Represents the properties for task item in Markdown. This property applies if a paragraph starts with checkbox.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdTaskProperties.IsChecked">
            <summary>
            Gets or sets a value indicating whether task item is checked. Default is false. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdTaskProperties.CheckedMarker">
            <summary>
            Gets or sets a string used for checked task item marker in Markdown 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdTaskProperties.Uncheckedmarker">
            <summary>
            Gets or sets a string used for unchecked task item marker in Markdown 
            </summary>
        </member>
        <member name="T:Syncfusion.Office.Markdown.MdTextRange">
            <summary>
            Represents a text with formatting in Markdown 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdTextRange.Text">
            <summary>
            Gets or sets a text in a line. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdTextRange.Bold">
            <summary>
            Gets or sets a value indicating whether text is bold or not. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdTextRange.Italic">
            <summary>
            Gets or sets a value indicating whether text is italic or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdTextRange.CodeSpan">
            <summary>
            Gets or sets a value indicating whether text is code spanned text. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdTextRange.StrikeThrough">
            <summary>
            Gets or sets a value indicating whether text is formatted with strikethrough. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdTextRange.IsHidden">
            <summary>
            Gets or sets a value indicating whether text is Hidden or not. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdTextRange.SubSuperScriptType">
            <summary>
            Gets or sets the subscript or superscript for the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdTextRange.IsLineBreak">
            <summary>
            Gets or sets a value indicating LineBreak. 
            </summary>
        </member>
        <member name="T:Syncfusion.Office.Markdown.MdThematicBreak">
            <summary>
            Represents a thematic break or horizontal rule in Markdown.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdThematicBreak.HorizontalRuleChar">
            <summary>
            Gets a string which is used to add horizontal rule in Markdown.
            </summary>
        </member>
    </members>
</doc>
