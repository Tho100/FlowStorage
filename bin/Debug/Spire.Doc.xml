<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Spire.Doc</name>
    </assembly>
    <members>
        <member name="T:Spire.License.Blacklist">
            <summary> 
            Authorization Blacklist
            </summary>
        </member>
        <member name="F:Spire.License.Blacklist.BlacklistData">
            <summary> 
            The serial number or the MD5 code of the key that is entered into the authorization blacklist. 
            </summary> 
        </member>
        <member name="P:Spire.Doc.CompoundFile.ClipboardData.Format">
            <summary>
            Clipboard format.
            </summary>
        </member>
        <member name="P:Spire.Doc.CompoundFile.ClipboardData.Data">
            <summary>
            Clipboard data.
            </summary>
        </member>
        <member name="M:Spire.Doc.CompoundFile.ClipboardData.Clone">
            <summary>
            Createas copy of the current object.
            </summary>
            <returns>A copy of the current object.</returns>
        </member>
        <member name="T:Spire.Doc.Collections.PermissionCollection">
            <summary>
            A collection of <see cref="T:Spire.Doc.Permission"/> objects that 
            represent the permission in the document.
            </summary>
        </member>
        <member name="P:Spire.Doc.Collections.PermissionCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:Spire.Doc.Permission"/> with the specified id.
            </summary>
            <value></value>
        </member>
        <member name="P:Spire.Doc.Collections.PermissionCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Spire.Doc.Permission"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="M:Spire.Doc.Collections.PermissionCollection.FindById(System.String)">
            <summary>
            Finds <see cref="T:Spire.Doc.Permission"/> object by specified id
            </summary>
            <param name="name">The Permission id</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Collections.PermissionCollection.RemoveAt(System.Int32)">
            <summary>
            Removes a permission at the specified index.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:Spire.Doc.Collections.PermissionCollection.Remove(Spire.Doc.Permission)">
            <summary>
            Removes the specified permission.
            </summary>
            <param name="permission">The permission.</param>
        </member>
        <member name="M:Spire.Doc.Collections.PermissionCollection.Clear">
            <summary>
            Removes all permissions from the document. 
            </summary>
        </member>
        <member name="T:Spire.Doc.Collections.ShapeItemCollection">
            <summary>
            Represents a collection for <see cref="T:Spire.Doc.Fields.ShapeObject"/> child items.
            </summary>
        </member>
        <member name="M:Spire.Doc.Collections.ShapeItemCollection.#ctor(Spire.Doc.Document,Spire.Doc.Fields.Shapes.ShapeBase)">
            <summary>
            Initializes a new instance of the <see cref="!:BodyItemCollection"/> class.
            </summary>
            <param name="body">The body.</param>       
        </member>
        <member name="M:Spire.Doc.Collections.GroupedShapeCollection.#ctor(Spire.Doc.Document)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Collections.GroupedShapeCollection"/> class.
            </summary>
        </member>
        <member name="M:Spire.Doc.Collections.GroupedShapeCollection.AddDocObject(System.Int32,Spire.Doc.Interface.IDocumentObject)">
            <summary>
            Add ShapeObject's to GroupedShape collection.
            </summary>
            <param name="shapeId">The shape id.</param>
            <param name="shapeGroup">The text box.</param>
        </member>
        <member name="M:Spire.Doc.Collections.GroupedShapeCollection.GetDocObject(System.Int32)">
            <summary>
            Get ShapeObject's text body by text identifier.
            </summary>
            <param name="shapeId">The shape id.</param>
            <returns></returns>
        </member>
        <member name="T:Spire.Doc.Collections.BodyRegionCollection">
            <summary>
            Represents a collection for <see cref="T:Spire.Doc.Body"/> child items.
            </summary>
        </member>
        <member name="M:Spire.Doc.Collections.BodyRegionCollection.#ctor(Spire.Doc.Body)">
            <summary>
            Initializes a new instance of the <see cref="!:BodyItemCollection"/> class.
            </summary>
            <param name="body">The body.</param>
        </member>
        <member name="M:Spire.Doc.Collections.BodyRegionCollection.UpdateWidgetCollectionFlag">
            <summary>
            Updates widget collection flag of paragraph.
            </summary>
        </member>
        <member name="T:Spire.Doc.Collections.BookmarkCollection">
            <summary>
            A collection of <see cref="T:Spire.Doc.Bookmark"/> objects that 
            represent the bookmarks in the document.
            </summary>
        </member>
        <member name="P:Spire.Doc.Collections.BookmarkCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:Spire.Doc.Bookmark"/> with the specified name.
            </summary>
            <value></value>
        </member>
        <member name="P:Spire.Doc.Collections.BookmarkCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Spire.Doc.Bookmark"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="M:Spire.Doc.Collections.BookmarkCollection.FindByName(System.String)">
            <summary>
            Finds <see cref="T:Spire.Doc.Bookmark"/> object by specified name
            </summary>
            <param name="name">The bookmark name</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Collections.BookmarkCollection.RemoveAt(System.Int32)">
            <summary>
            Removes a bookmark at the specified index.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:Spire.Doc.Collections.BookmarkCollection.Remove(Spire.Doc.Bookmark)">
            <summary>
            Removes the specified bookmark.
            </summary>
            <param name="bookmark">The bookmark.</param>
        </member>
        <member name="M:Spire.Doc.Collections.BookmarkCollection.Clear">
            <summary>
            Removes all bookmarks from the document. 
            </summary>
        </member>
        <member name="P:Spire.Doc.Collections.CollectionEx.Count">
            <summary>
            Gets the number of items in the collection.
            </summary>
            <value>The count.</value>
        </member>
        <member name="M:Spire.Doc.Collections.CollectionEx.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:Spire.Doc.Collections.DocumentInnerList.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">the index.</param>
            <returns></returns>
        </member>
        <member name="P:Spire.Doc.Collections.DocumentInnerList.Count">
            <summary>
            Gets the number of items in the collection.
            </summary>
            <value>The count.</value>
        </member>
        <member name="M:Spire.Doc.Collections.DocumentInnerList.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Spire.Doc.Collections.DocumentInnerList.Clear">
            <summary>
            Removes all items from the IList.
            </summary>
        </member>
        <member name="M:Spire.Doc.Collections.DocumentInnerList.Contains(System.Object)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The item.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Collections.DocumentInnerList.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="value">The Item.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Collections.DocumentInnerList.Add(System.Object)">
            <summary>
            Adds an item to the IList.
            </summary>
            <param name="value">the item.</param>
        </member>
        <member name="M:Spire.Doc.Collections.DocumentInnerList.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the IList at the specified index.
            </summary>
            <param name="index">the index.</param>
            <param name="value">the item.</param>
        </member>
        <member name="M:Spire.Doc.Collections.DocumentInnerList.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">the item.</param>
        </member>
        <member name="M:Spire.Doc.Collections.DocumentInnerList.RemoveAt(System.Int32)">
            <summary>
            Removes the IList item at the specified index.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Spire.Doc.Collections.DocumentInnerList.OnStateChange">
            <summary>
            Listening status change.
            </summary>
        </member>
        <member name="T:Spire.Doc.Collections.ColumnCollection">
            <summary>
            A collection of <see cref="T:Spire.Doc.Column"/> objects that 
            represent all the columns of text in a section of a document.
            </summary>
        </member>
        <member name="P:Spire.Doc.Collections.ColumnCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Spire.Doc.Column"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Spire.Doc.Collections.ColumnCollection.OnlyOneColumn">
            <summary>
            Only one column.
            </summary>
        </member>
        <member name="M:Spire.Doc.Collections.ColumnCollection.Add(Spire.Doc.Column)">
            <summary>
            Adds <see cref="T:Spire.Doc.Column"/> object to the collection.
            </summary>
            <param name="column">The column.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Collections.ColumnCollection.Populate(System.Int32,System.Single)">
            <summary>
            Populates the specified number of columns with specified spacing.
            </summary>
            <param name="count">The count.</param>
            <param name="spacing">The spacing.</param>
        </member>
        <member name="M:Spire.Doc.Collections.ColumnCollection.Clear">
            <summary>
            Removes all item.
            </summary>
        </member>
        <member name="T:Spire.Doc.Collections.CommentsCollection">
            <summary>
            A collection of <see cref="!:Spire.Doc.CommentsCollection"/> objects that 
            represent the comments in the document.
            </summary>
        </member>
        <member name="M:Spire.Doc.Collections.CommentsCollection.#ctor(Spire.Doc.Document)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Collections.CommentsCollection"/> class.
            </summary>
            <param name="doc">The doc.</param>
        </member>
        <member name="P:Spire.Doc.Collections.CommentsCollection.Item(System.Int32)">
            <summary>
            Gets the comment at specified index.
            </summary>
            <value></value>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Collections.CommentsCollection.Counts">
            <summary>
            Counts this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Collections.CommentsCollection.RemoveAt(System.Int32)">
            <summary>
            Remove a Comment at specified index.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Spire.Doc.Collections.CommentsCollection.Clear">
            <summary>
            Remove all the Comment from the document.
            </summary>
        </member>
        <member name="M:Spire.Doc.Collections.CommentsCollection.Remove(Spire.Doc.Fields.Comment)">
            <summary>
            Removes the specified Comment.
            </summary>
            <param name="comment"></param>
        </member>
        <member name="T:Spire.Doc.Collections.DocumentObjectCollection">
            <summary>
            Represents a collection of DLS entities.
            </summary>
        </member>
        <member name="P:Spire.Doc.Collections.DocumentObjectCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Spire.Doc.DocumentObject"/> at the specified index.
            </summary>
            <value></value>
            <returns></returns>
        </member>
        <member name="P:Spire.Doc.Collections.DocumentObjectCollection.FirstItem">
            <summary>
            Gets the first item.
            </summary>
            <value>The first item.</value>
        </member>
        <member name="P:Spire.Doc.Collections.DocumentObjectCollection.LastItem">
            <summary>
            Gets the last item.
            </summary>
            <value>The last item.</value>
        </member>
        <member name="M:Spire.Doc.Collections.DocumentObjectCollection.Add(Spire.Doc.Interface.IDocumentObject)">
            <summary>
            Adds the specified entity.
            </summary>
            <param name="entity">the document object.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Collections.DocumentObjectCollection.Clear">
            <summary>
            Removes all items
            </summary>
        </member>
        <member name="M:Spire.Doc.Collections.DocumentObjectCollection.Contains(Spire.Doc.Interface.IDocumentObject)">
            <summary>
            Determines whether a entity is in the collection.
            </summary>
            <param name="entity">the document object.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Collections.DocumentObjectCollection.IndexOf(Spire.Doc.Interface.IDocumentObject)">
            <summary>
            Returns the zero-based index of the specified entity.
            </summary>
            <param name="entity">the document object.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Collections.DocumentObjectCollection.Insert(System.Int32,Spire.Doc.Interface.IDocumentObject)">
            <summary>
            Inserts a entity into the collection at the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="entity">the document object.</param>
        </member>
        <member name="M:Spire.Doc.Collections.DocumentObjectCollection.Remove(Spire.Doc.Interface.IDocumentObject)">
            <summary>
            Removes the document object from the collection.
            </summary>
            <param name="entity">the document object.</param>
        </member>
        <member name="M:Spire.Doc.Collections.DocumentObjectCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the document object at the specified index from the collection.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:Spire.Doc.Collections.DocumentObjectCollection.GetFirstItem(Spire.Doc.Documents.DocumentObjectType)">
            <summary>
            Gets the first item.
            </summary>
            <param name="type">The type.</param>
            <returns>The documentobject.</returns>
        </member>
        <member name="M:Spire.Doc.Collections.DocumentObjectCollection.GetLastItem(Spire.Doc.Documents.DocumentObjectType)">
            <summary>
            Gets the last item.
            </summary>
            <param name="type">The type.</param>
            <returns>The documentobject.</returns>
        </member>
        <member name="T:Spire.Doc.Collections.DocumentObjectCollection.ChangeItemsType">
            <summary>
            Specifies Item DocumentObject type.
            </summary>
        </member>
        <member name="T:Spire.Doc.Collections.DocumentObjectCollection.ChangeItems">
            <summary>
            Eventhandler for DocumentObjectCollection class.
            </summary>
            <param name="type">DocumentObject type.</param>
            <param name="entity">The DocumentObject.</param>
        </member>
        <member name="M:Spire.Doc.Collections.DocumentObjectCollection.ChangeItemsHandlerList.Add(Spire.Doc.Collections.DocumentObjectCollection.ChangeItems)">
            <summary>
            Adds the specified handler.
            </summary>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:Spire.Doc.Collections.DocumentObjectCollection.ChangeItemsHandlerList.Remove(Spire.Doc.Collections.DocumentObjectCollection.ChangeItems)">
            <summary>
            Removes the specified handler.
            </summary>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:Spire.Doc.Collections.DocumentObjectCollection.ChangeItemsHandlerList.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Spire.Doc.Collections.DocumentObjectCollection.ChangeItemsHandlerList.Send(Spire.Doc.Collections.DocumentObjectCollection.ChangeItemsType,Spire.Doc.DocumentObject)">
            <summary>
            Sends the specified type.
            </summary>
            <param name="type">The type.</param>
            <param name="entity">the document object.</param>
        </member>
        <member name="T:Spire.Doc.Collections.DocumentSubsetCollection">
            <summary>
            Represents a subset from collection of specified type entities.
            </summary>
        </member>
        <member name="P:Spire.Doc.Collections.DocumentSubsetCollection.Document">
            <summary>
            Gets the document.
            </summary>
            <value>The document.</value>
        </member>
        <member name="P:Spire.Doc.Collections.DocumentSubsetCollection.Owner">
            <summary>
            Gets the owner.
            </summary>
            <value>The owner.</value>
        </member>
        <member name="P:Spire.Doc.Collections.DocumentSubsetCollection.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:Spire.Doc.Collections.DocumentSubsetCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Spire.Doc.DocumentObject"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="M:Spire.Doc.Collections.DocumentSubsetCollection.Clear">
            <summary>
            Removes all entities 
            </summary>
        </member>
        <member name="M:Spire.Doc.Collections.DocumentSubsetCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="T:Spire.Doc.Collections.DocumentSubsetCollection.SubSetEnumerator">
            <summary>
            Represents a internal enumerator for EntitySubSetCollection. 
            </summary>
        </member>
        <member name="M:Spire.Doc.Collections.DocumentSubsetCollection.SubSetEnumerator.#ctor(Spire.Doc.Collections.DocumentSubsetCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Collections.DocumentSubsetCollection.SubSetEnumerator"/> class.
            </summary>
            <param name="enColl">The entities collection.</param>
        </member>
        <member name="P:Spire.Doc.Collections.DocumentSubsetCollection.SubSetEnumerator.Current">
            <summary>
            Gets the current element in the collection.
            </summary>
            <value></value>
            <returns>The current element in the collection.</returns>
            <exception cref="T:System.InvalidOperationException">The enumerator is positioned before the first element of the collection or after the last element. </exception>
        </member>
        <member name="M:Spire.Doc.Collections.DocumentSubsetCollection.SubSetEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
        </member>
        <member name="M:Spire.Doc.Collections.DocumentSubsetCollection.SubSetEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
        </member>
        <member name="P:Spire.Doc.Collections.FieldCollection.Item(System.Int32)">
            <summary>
            Gets the field at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:Spire.Doc.Collections.FormFieldCollection">
            <summary>
            Represents a collection of form fields.
            </summary>
        </member>
        <member name="P:Spire.Doc.Collections.FormFieldCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="!:Spire.Doc.FormField"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Spire.Doc.Collections.FormFieldCollection.Item(System.String)">
            <summary>
            Gets the <see cref="!:Spire.Doc.FormField"/> by specified form field name.
            </summary>
            <value></value>
        </member>
        <member name="M:Spire.Doc.Collections.FormFieldCollection.ContainsName(System.String)">
            <summary>
            Determines whether the specified collection contains item with specified name.
            </summary>
            <param name="itemName">Name of the item.</param>
            <returns></returns>
        </member>
        <member name="T:Spire.Doc.Collections.ListLevelCollection">
            <summary>
            Represents a collections of list formatting for each level in a list.
            </summary>
        </member>
        <member name="P:Spire.Doc.Collections.ListLevelCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="!:Spire.Doc.WListLevel"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:Spire.Doc.Collections.ListStyleCollection">
            <summary>
            Represents a collection of list style
            </summary>
        </member>
        <member name="P:Spire.Doc.Collections.ListStyleCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="!:Spire.Doc.ListStyle"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="M:Spire.Doc.Collections.ListStyleCollection.Add(Spire.Doc.Documents.ListStyle)">
            <summary>
            Adds the list style into collection.
            </summary>
            <param name="style">The style.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Collections.ListStyleCollection.FindByName(System.String)">
            <summary>
            Finds list style by name.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="T:Spire.Doc.Collections.ParagraphItemCollection">
            <summary>
            Represents a collection for <see cref="!:Spire.Doc.Paragraph"/> child items.
            </summary>
        </member>
        <member name="M:Spire.Doc.Collections.ParagraphItemCollection.#ctor(Spire.Doc.Document)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Collections.ParagraphItemCollection"/> class.
            </summary>
            <param name="doc">The doc.</param>
        </member>
        <member name="M:Spire.Doc.Collections.ParagraphItemCollection.UpdateWidgetCollectionFlag">
            <summary>
            Updates widget collection flag of paragraph.
            </summary>
        </member>
        <member name="M:Spire.Doc.Collections.ShapeObjectTextCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Collections.ShapeObjectTextCollection"/> class.
            </summary>
        </member>
        <member name="M:Spire.Doc.Collections.ShapeObjectTextCollection.AddTextBox(System.Int32,Spire.Doc.Fields.TextBox)">
            <summary>
            Add ShapeObject's text to text collection.
            </summary>
            <param name="shapeId">The shape id.</param>
            <param name="textBox">The text box.</param>
        </member>
        <member name="M:Spire.Doc.Collections.ShapeObjectTextCollection.GetTextBox(System.Int32)">
            <summary>
            Get ShapeObject's text body by text identifier.
            </summary>
            <param name="shapeId">The shape id.</param>
            <returns></returns>
        </member>
        <member name="P:Spire.Doc.Collections.StyleCollection.Item(System.Int32)">
            <summary>
            Gets the at the specified index.
            </summary>
            <value></value>
            <returns></returns>
        </member>
        <member name="P:Spire.Doc.Collections.StyleCollection.Item(System.String)">
            <summary>
            Gets a style by name or alias.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Collections.StyleCollection.Add(Spire.Doc.Interface.IStyle)">
            <summary>
            Adds Style to collection 
            </summary>
            <param name="style">The style.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Collections.StyleCollection.ApplyDocDefaultsToNormalStyle">
            <summary>
            Applys the document default paragraph format and character format to normal style. 
            </summary>
        </member>
        <member name="M:Spire.Doc.Collections.StyleCollection.FindByName(System.String)">
            <summary>
            Finds Style by name
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Collections.StyleCollection.FindByName(System.String,Spire.Doc.Documents.StyleType)">
            <summary>
            Finds Style by name
            </summary>
            <param name="name">The name.</param>
            <param name="styleType">Type of the style.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Collections.StyleCollection.FindById(System.Int32)">
            <summary>
            Finds Style by id
            </summary>
            <param name="styleId">The style id.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Collections.StyleCollection.FindByIstd(System.Int32)">
            <summary>
            Finds Style by istd.
            </summary>
            <param name="istd">The style istd.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Collections.StyleCollection.FindByIdentifier(System.Int32)">
            <summary>
            Finds Style by identifier
            </summary>
            <param name="sIdentifier">The style identifier.
            The parameter value is the <see cref="T:Spire.Doc.Documents.BuiltinStyle"/> enumeration value 
            or the <see cref="T:Spire.Doc.Documents.DefaultTableStyle"/> enumeration value.</param>
            <returns></returns>
        </member>
        <member name="T:Spire.Doc.Collections.TabCollection">
            <summary>
            Represents a collection of <see cref="T:Spire.Doc.Tab"/> objects 
            for paragraph or paragraph format.
            </summary>
        </member>
        <member name="P:Spire.Doc.Collections.TabCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Spire.Doc.Tab"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="M:Spire.Doc.Collections.TabCollection.AddTab(System.Single)">
            <summary>
            Adds the tab.
            </summary>
            <param name="position">The position.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Collections.TabCollection.Clear">
            <summary>
            Removes all the tabs from the tab collection.
            </summary>
        </member>
        <member name="M:Spire.Doc.Collections.TabCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the tab at the specified index from the tab collection
            </summary>
            <param name="index"></param>
        </member>
        <member name="T:Spire.Doc.Collections.TextBoxCollection">
            <summary>
            Summary description for TextBoxCollection.
            </summary>
        </member>
        <member name="P:Spire.Doc.Collections.TextBoxCollection.Item(System.Int32)">
            <summary>
            Gets the textbox at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="M:Spire.Doc.Collections.TextBoxCollection.RemoveAt(System.Int32)">
            <summary>
            Removes a textbox at the specified index.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:Spire.Doc.Collections.TextBoxCollection.Clear">
            <summary>
            Removes all textboxes from the document. 
            </summary>
        </member>
        <member name="P:Spire.Doc.Collections.TypedSortedListEx`2.Capacity">
            <summary>
            Capacity of internal buffers.
            </summary>
        </member>
        <member name="P:Spire.Doc.Collections.TypedSortedListEx`2.Count">
            <summary>
            FontSize of the collection. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Doc.Collections.TypedSortedListEx`2.Keys">
            <summary>
            List of keys. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Doc.Collections.TypedSortedListEx`2.Values">
            <summary>
            List of values. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Doc.Collections.TypedSortedListEx`2.IsReadOnly">
            <summary>
            Returns True if list is readonly, False otherwise. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Doc.Collections.TypedSortedListEx`2.IsFixedSize">
            <summary>
            Returns True if collection has fixed size, False otherwise.
            </summary>
        </member>
        <member name="P:Spire.Doc.Collections.TypedSortedListEx`2.IsSynchronized">
            <summary>
            Returns True if the collection is synchronized, False otherwise.
            </summary>
        </member>
        <member name="P:Spire.Doc.Collections.TypedSortedListEx`2.SyncRoot">
            <summary>
            Returns the object that can be used to synchronize access to the collection.
            Read-only.
            </summary>
        </member>
        <member name="P:Spire.Doc.Collections.TypedSortedListEx`2.Item(`0)">
            <summary>
            Gets or sets the value associated with the specified key.
            </summary>
        </member>
        <member name="M:Spire.Doc.Collections.TypedSortedListEx`2.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Spire.Doc.Collections.TypedSortedListEx`2.#ctor(System.Int32)">
            <summary>
            Creates an empty list with the specified initial capacity.
            </summary>
            <param name="initialCapacity">Initial capacity.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            When initialCapacity is less than zero.
            </exception>
        </member>
        <member name="M:Spire.Doc.Collections.TypedSortedListEx`2.#ctor(System.Collections.Generic.IComparer{`0})">
            <summary>
            Creates an empty SortedList with the default initial capacity
            and specified comparer.
            </summary>
            <param name="comparer">
            The IComparer is used to determine whether two keys are equal.
            </param>
        </member>
        <member name="M:Spire.Doc.Collections.TypedSortedListEx`2.#ctor(System.Collections.Generic.IComparer{`0},System.Int32)">
            <summary>
            Creates an empty SortedList with the specified initial capacity
            and specified comparer.
            </summary>
            <param name="comparer">Initial capacity.</param>
            <param name="capacity">
            The IComparer is used to determine whether two keys are equal.
            </param>
        </member>
        <member name="M:Spire.Doc.Collections.TypedSortedListEx`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
            <summary>
            Copies the elements from the specified dictionary to a new list
            with the same initial capacity as the number of elements copied.
            </summary>
            <param name="d">The IDictionary to copy.</param>
        </member>
        <member name="M:Spire.Doc.Collections.TypedSortedListEx`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})">
            <summary>
            Copies the elements from the specified dictionary to a new list with the same
            initial capacity as the number of elements copied and with the specified comparer.
            </summary>
            <param name="d">The IDictionary to copy.</param>
            <param name="comparer">
            The IComparer to use to determine whether two keys are equal.
            </param>
            <exception cref="T:System.ArgumentNullException">
            When argument d is null.
            </exception>
        </member>
        <member name="M:Spire.Doc.Collections.TypedSortedListEx`2.Synchronized(Spire.Doc.Collections.TypedSortedListEx{`0,`1})">
            <summary>
            Returns a synchronized (thread-safe) wrapper for the SortedList.
            </summary>
            <param name="list">The SortedList to synchronize.</param>
            <returns>A synchronized (thread-safe) wrapper for the SortedList.</returns>
            <exception cref="T:System.ArgumentNullException">
            When list is null.
            </exception>
        </member>
        <member name="M:Spire.Doc.Collections.TypedSortedListEx`2.Add(`0,`1)">
            <summary>
            Adds an element with the provided key and value to the list.
            </summary>
            <param name="key">The Object to use as the key of the element to add.</param>
            <param name="value">The Object to use as the value of the element to add.</param>
            <exception cref="T:System.ArgumentNullException">
            When key is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            When list already contains specified key.
            </exception>
        </member>
        <member name="M:Spire.Doc.Collections.TypedSortedListEx`2.Clear">
            <summary>
            Removes all elements from the collection.
            </summary>
        </member>
        <member name="M:Spire.Doc.Collections.TypedSortedListEx`2.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>Copy of the current instance.</returns>
        </member>
        <member name="M:Spire.Doc.Collections.TypedSortedListEx`2.CloneAll">
            <summary>
            Clone current instance.
            </summary>
            <returns>Returns clone of current object.</returns>
        </member>
        <member name="M:Spire.Doc.Collections.TypedSortedListEx`2.Contains(`0)">
            <summary>
            Determines whether the list contains an element with the specified key.
            </summary>
            <param name="key">Key of the element to search.</param>
            <returns>True if list contains specified key.</returns>
        </member>
        <member name="M:Spire.Doc.Collections.TypedSortedListEx`2.ContainsKey(`0)">
            <summary>
            Determines whether the list contains an element with the specified key.
            </summary>
            <param name="key">Key of the element to search.</param>
            <returns>True if list contains specified key.</returns>
        </member>
        <member name="M:Spire.Doc.Collections.TypedSortedListEx`2.ContainsValue(`1)">
            <summary>
            Determines whether the list contains the specified value.
            </summary>
            <param name="value">Value of the element to search.</param>
            <returns>True if list contains specified value.</returns>
        </member>
        <member name="M:Spire.Doc.Collections.TypedSortedListEx`2.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all the elements of the SortedListEx to the specified one-dimensional Array
            starting at the specified destination Array index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the
            elements copied from the current list.</param>
            <param name="arrayIndex">The index in array at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            If specified array is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            If rank of the array is not 1 or there are not enough elements.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If specified arrayIndex is less than zero.
            </exception>
        </member>
        <member name="M:Spire.Doc.Collections.TypedSortedListEx`2.GetByIndex(System.Int32)">
            <summary>
            Gets the value at the specified index of the SortedListEx.
            </summary>
            <param name="index">The zero-based index of the value to get.</param>
            <returns>The value at the specified index of the SortedListEx.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            When index is less than zero or greater than size of the list.
            </exception>
        </member>
        <member name="M:Spire.Doc.Collections.TypedSortedListEx`2.GetKey(System.Int32)">
            <summary>
            Gets the key at the specified index of the SortedListEx.
            </summary>
            <param name="index">The zero-based index of the key to get.</param>
            <returns>The key at the specified index of the SortedListEx.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            When index is less than zero or greater than size of the list.
            </exception>
        </member>
        <member name="M:Spire.Doc.Collections.TypedSortedListEx`2.GetKeyList">
            <summary>
            Gets the keys in the SortedListEx.
            </summary>
            <returns>An IList containing the keys in the SortedListEx.</returns>
        </member>
        <member name="M:Spire.Doc.Collections.TypedSortedListEx`2.GetValueList">
            <summary>
            Gets the values in the SortedListEx.
            </summary>
            <returns>An IList containing the values in the SortedListEx.</returns>
        </member>
        <member name="M:Spire.Doc.Collections.TypedSortedListEx`2.IndexOfKey(`0)">
            <summary>
            Returns the zero-based index of the specified key.
            </summary>
            <param name="key">The key to locate.</param>
            <returns>The zero-based index of key, if key is found; otherwise, -1.</returns>
            <exception cref="T:System.ArgumentNullException">
            If specified key is null.
            </exception>
        </member>
        <member name="M:Spire.Doc.Collections.TypedSortedListEx`2.IndexOfValue(`1)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified value.
            </summary>
            <param name="value">The value to locate (can be NULL).</param>
            <returns>
            The zero-based index of the first occurrence of value, if value is found;
            otherwise, -1.
            </returns>
        </member>
        <member name="M:Spire.Doc.Collections.TypedSortedListEx`2.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            When index is less than zero or greater than size of the list.
            </exception>
        </member>
        <member name="M:Spire.Doc.Collections.TypedSortedListEx`2.Remove(`0)">
            <summary>
            Removes the element with the specified key from SortedListEx.
            </summary>
            <param name="key">The key of the element to remove.</param>
        </member>
        <member name="M:Spire.Doc.Collections.TypedSortedListEx`2.SetByIndex(System.Int32,`1)">
            <summary>
            Replaces the value at the specific index.
            </summary>
            <param name="index">The zero-based index at which to save value.</param>
            <param name="value">The Object to save into. Can be NULL.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            When index is less than zero or greater than size of the list.
            </exception>
        </member>
        <member name="M:Spire.Doc.Collections.TypedSortedListEx`2.TrimToSize">
            <summary>
            Sets the capacity to the actual number of elements.
            </summary>
        </member>
        <member name="M:Spire.Doc.Collections.TypedSortedListEx`2.GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Collections.TypedSortedListEx`2.TypedSortedListExEnumerator.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or
            resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Spire.Doc.Collections.TypedSortedListEx`2.TypedSortedListExEnumerator.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>Copy of the current instance.</returns>
        </member>
        <member name="P:Spire.Doc.Collections.TypedSortedListEx`2.TypedSortedListExEnumerator.Key">
            <summary>
            Returns key of the current element. Read-only.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            When the current version is not equal to the SortedListEx version
            or if current is false.
            </exception>
        </member>
        <member name="M:Spire.Doc.Collections.TypedSortedListEx`2.TypedSortedListExEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            True if the enumerator was successfully advanced to the next element;
            False if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            When the current version is not equal to the SortedListEx version.
            </exception>
        </member>
        <member name="P:Spire.Doc.Collections.TypedSortedListEx`2.TypedSortedListExEnumerator.Entry">
            <summary>
            Return DictionaryEntry for the current element.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            When the current version is not equal to the SortedListEx version
            or if current is false.
            </exception>
        </member>
        <member name="P:Spire.Doc.Collections.TypedSortedListEx`2.TypedSortedListExEnumerator.Current">
            <summary>
            The current element in the collection. Read-only.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            If current is false.
            </exception>
        </member>
        <member name="P:Spire.Doc.Collections.TypedSortedListEx`2.TypedSortedListExEnumerator.Value">
            <summary>
            Returns value for the current element.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            When the current version is not equal to the SortedListEx version
            or if current is false.
            </exception>
        </member>
        <member name="M:Spire.Doc.Collections.TypedSortedListEx`2.TypedSortedListExEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before
            the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            When the current version is not equal to the SortedListEx version.
            </exception>
        </member>
        <member name="M:Spire.Doc.Collections.TypedSortedListEx`2.KeysEnumerator.#ctor(Spire.Doc.Collections.TypedSortedListEx{`0,`1})">
            <summary>
            
            </summary>
            <param name="list"></param>
        </member>
        <member name="P:Spire.Doc.Collections.TypedSortedListEx`2.KeysEnumerator.Current">
            <summary>
            
            </summary>
        </member>
        <member name="P:Spire.Doc.Collections.TypedSortedListEx`2.KeyList.Count">
            <summary>
            FontSize of the collection. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Doc.Collections.TypedSortedListEx`2.KeyList.IsReadOnly">
            <summary>
            Returns True if list is readonly, False otherwise. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Doc.Collections.TypedSortedListEx`2.KeyList.IsFixedSize">
            <summary>
            Returns True if collection has fixed size, False otherwise.
            </summary>
        </member>
        <member name="P:Spire.Doc.Collections.TypedSortedListEx`2.KeyList.IsSynchronized">
            <summary>
            Returns True if the collection is synchronized, False otherwise.
            </summary>
        </member>
        <member name="P:Spire.Doc.Collections.TypedSortedListEx`2.KeyList.SyncRoot">
            <summary>
            Returns the object that can be used to synchronize access to the collection.
            Read-only.
            </summary>
        </member>
        <member name="M:Spire.Doc.Collections.TypedSortedListEx`2.KeyList.Add(`0)">
            <summary>
            Adds an element with the provided key to the list.
            </summary>
            <param name="key">The Object to use as the key of the element to add.</param>
        </member>
        <member name="M:Spire.Doc.Collections.TypedSortedListEx`2.KeyList.Clear">
            <summary>
            Removes all elements from the collection.
            </summary>
        </member>
        <member name="M:Spire.Doc.Collections.TypedSortedListEx`2.KeyList.Contains(`0)">
            <summary>
            Determines whether the list contains an element with the specified key.
            </summary>
            <param name="key">Key of the element to search.</param>
            <returns>True if list contains specified key.</returns>
        </member>
        <member name="M:Spire.Doc.Collections.TypedSortedListEx`2.KeyList.CopyTo(`0[],System.Int32)">
            <summary>
            Copies all the elements of the list to the specified one-dimensional Array
            starting at the specified destination Array index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the
            elements copied from the current list.</param>
            <param name="arrayIndex">The index in array at which copying begins.</param>
            <exception cref="T:System.ArgumentException">
            If array is null or rank of the array is not 1.
            </exception>
        </member>
        <member name="M:Spire.Doc.Collections.TypedSortedListEx`2.KeyList.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all the elements of the list to the specified one-dimensional Array
            starting at the specified destination Array index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the
            elements copied from the current list.</param>
            <param name="arrayIndex">The index in array at which copying begins.</param>
            <exception cref="T:System.ArgumentException">
            If array is null or rank of the array is not 1.
            </exception>
        </member>
        <member name="M:Spire.Doc.Collections.TypedSortedListEx`2.KeyList.Insert(System.Int32,`0)">
            <summary>
            Insert the value at the specific index.
            </summary>
            <param name="index">The zero-based index at which to save value.</param>
            <param name="value">The Object to save into. Can be NULL.</param>
        </member>
        <member name="P:Spire.Doc.Collections.TypedSortedListEx`2.KeyList.Item(System.Int32)">
            <summary>
            Gets or sets the key at the specified index.
            </summary>
        </member>
        <member name="M:Spire.Doc.Collections.TypedSortedListEx`2.KeyList.GetEnumerator">
            <summary>
            Returns an IEnumerator that can iterate through the list.
            </summary>
            <returns>An IEnumerator for the list.</returns>
        </member>
        <member name="M:Spire.Doc.Collections.TypedSortedListEx`2.KeyList.IndexOf(`0)">
            <summary>
            Returns the zero-based index of the specified key.
            </summary>
            <param name="key">The key to locate.</param>
            <returns>The zero-based index of the key, if the key is found; otherwise, -1.</returns>
        </member>
        <member name="M:Spire.Doc.Collections.TypedSortedListEx`2.KeyList.Remove(`0)">
            <summary>
            Removes the element with the specified key from list.
            </summary>
            <param name="key">The key of the element to remove.</param>
        </member>
        <member name="M:Spire.Doc.Collections.TypedSortedListEx`2.KeyList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index from the list.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
        </member>
        <member name="M:Spire.Doc.Collections.TypedSortedListEx`2.ValueList.UpdateValues">
            <summary>
            Re-read values from the list.
            </summary>
        </member>
        <member name="P:Spire.Doc.Collections.TypedSortedListEx`2.ValueList.Count">
            <summary>
            FontSize of the collection. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Doc.Collections.TypedSortedListEx`2.ValueList.IsReadOnly">
            <summary>
            Returns True if list is readonly, False otherwise. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Doc.Collections.TypedSortedListEx`2.ValueList.IsFixedSize">
            <summary>
            Returns True if collection has fixed size, False otherwise.
            </summary>
        </member>
        <member name="P:Spire.Doc.Collections.TypedSortedListEx`2.ValueList.IsSynchronized">
            <summary>
            Returns True if the collection is synchronized, False otherwise.
            </summary>
        </member>
        <member name="P:Spire.Doc.Collections.TypedSortedListEx`2.ValueList.SyncRoot">
            <summary>
            Returns the object that can be used to synchronize access to the collection.
            Read-only.
            </summary>
        </member>
        <member name="M:Spire.Doc.Collections.TypedSortedListEx`2.ValueList.Add(`1)">
            <summary>
            Adds an element with the provided key to the list.
            </summary>
            <param name="value">Value to add.</param>
        </member>
        <member name="M:Spire.Doc.Collections.TypedSortedListEx`2.ValueList.Clear">
            <summary>
            Removes all elements from the collection.
            </summary>
        </member>
        <member name="M:Spire.Doc.Collections.TypedSortedListEx`2.ValueList.Contains(`1)">
            <summary>
            Determines whether the list contains an element with the specified value.
            </summary>
            <param name="value">Value to search.</param>
            <returns>True if list contains specified value.</returns>
        </member>
        <member name="M:Spire.Doc.Collections.TypedSortedListEx`2.ValueList.CopyTo(`1[],System.Int32)">
            <summary>
            Copies all the elements of the list to the specified one-dimensional Array
            starting at the specified destination Array index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the
            elements copied from the current list.</param>
            <param name="arrayIndex">The index in array at which copying begins.</param>
        </member>
        <member name="M:Spire.Doc.Collections.TypedSortedListEx`2.ValueList.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all the elements of the list to the specified one-dimensional Array
            starting at the specified destination Array index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the
            elements copied from the current list.</param>
            <param name="arrayIndex">The index in array at which copying begins.</param>
        </member>
        <member name="M:Spire.Doc.Collections.TypedSortedListEx`2.ValueList.Insert(System.Int32,`1)">
            <summary>
            Insert the value at the specific index.
            </summary>
            <param name="index">The zero-based index at which to save value.</param>
            <param name="value">The Object to save into. Can be NULL.</param>
        </member>
        <member name="P:Spire.Doc.Collections.TypedSortedListEx`2.ValueList.Item(System.Int32)">
            <summary>
            Gets or sets the value at the specified index.
            </summary>
        </member>
        <member name="M:Spire.Doc.Collections.TypedSortedListEx`2.ValueList.GetEnumerator">
            <summary>
            Returns an IEnumerator that can iterate through the list.
            </summary>
            <returns>An IEnumerator for the list.</returns>
        </member>
        <member name="M:Spire.Doc.Collections.TypedSortedListEx`2.ValueList.IndexOf(`1)">
            <summary>
            Returns the zero-based index of the specified value.
            </summary>
            <param name="value">The value to locate.</param>
            <returns>The zero-based index of the value, if the value is found, otherwise -1.</returns>
        </member>
        <member name="M:Spire.Doc.Collections.TypedSortedListEx`2.ValueList.Remove(`1)">
            <summary>
            Removes the specified value from list.
            </summary>
            <param name="value">The value to remove.</param>
        </member>
        <member name="M:Spire.Doc.Collections.TypedSortedListEx`2.ValueList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index from the list.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
        </member>
        <member name="T:Spire.Doc.Collections.CellCollection">
            <summary>
            Represents a collection of <see cref="T:Spire.Doc.TableCell"/> objects.
            </summary>
        </member>
        <member name="M:Spire.Doc.Collections.CellCollection.#ctor(Spire.Doc.TableRow)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Collections.CellCollection"/> class.
            </summary>
            <param name="owner">The owner.</param>
        </member>
        <member name="M:Spire.Doc.Collections.CellCollection.Add(Spire.Doc.TableCell)">
            <summary>
            Adds the specified cell.
            </summary>
            <param name="cell">The cell.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Collections.CellCollection.Insert(System.Int32,Spire.Doc.TableCell)">
            <summary>
            Inserts a specified table cell into collection.
            </summary>
            <param name="index">The index.</param>
            <param name="cell">The cell.</param>
        </member>
        <member name="M:Spire.Doc.Collections.CellCollection.IndexOf(Spire.Doc.TableCell)">
            <summary>
            Returns index of a specified cell in collection.
            </summary>
            <param name="cell">The cell.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Collections.CellCollection.Remove(Spire.Doc.TableCell)">
            <summary>
            Removes the specified cell.
            </summary>
            <param name="cell">The cell.</param>
        </member>
        <member name="M:Spire.Doc.Collections.CellCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the document object at the specified index from the collection.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:Spire.Doc.Collections.DropDownCollection">
            <summary>
            Represent a collection of <see cref="T:Spire.Doc.Documents.DropDownItem"/> objects.
            </summary>
        </member>
        <member name="P:Spire.Doc.Collections.DropDownCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="!:Spire.Doc.DropDownItem"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="M:Spire.Doc.Collections.DropDownCollection.#ctor(Spire.Doc.Document)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Collections.DropDownCollection"/> class.
            </summary>
            <param name="doc">The doc.</param>
        </member>
        <member name="M:Spire.Doc.Collections.DropDownCollection.Add(System.String)">
            <summary>
            Adds the item.
            </summary>
            <param name="text">The text.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Collections.DropDownCollection.Remove(System.Int32)">
            <summary>
            Removes DropDownItems by index.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:Spire.Doc.Collections.DropDownCollection.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:Spire.Doc.Collections.ParagraphCollection.#ctor(Spire.Doc.Collections.BodyRegionCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Collections.ParagraphCollection"/> class.
            </summary>
            <param name="bodyItems">The body items.</param>
        </member>
        <member name="M:Spire.Doc.Collections.ParagraphCollection.Add(Spire.Doc.Interface.IParagraph)">
            <summary>
            Adds a paragraph to end of text body.
            </summary>
            <param name="paragraph">The paragraph.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Collections.ParagraphCollection.Contains(Spire.Doc.Interface.IParagraph)">
            <summary>
            Determines whether the <see cref="!:Spire.Doc.IParagraphCollection"/> contains a specific value.
            </summary>
            <param name="paragraph">The paragraph.</param>
            <returns>
            	If paragraph is found, set to <c>true</c>.
            </returns>
        </member>
        <member name="M:Spire.Doc.Collections.ParagraphCollection.Insert(System.Int32,Spire.Doc.Interface.IParagraph)">
            <summary>
            Inserts a paragraph into collection at the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="paragraph">The paragraph.</param>
        </member>
        <member name="M:Spire.Doc.Collections.ParagraphCollection.IndexOf(Spire.Doc.Interface.IParagraph)">
            <summary>
            Returns the zero-based index of the specified paragraph.
            </summary>
            <param name="paragraph">The paragraph.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Collections.ParagraphCollection.Remove(Spire.Doc.Interface.IParagraph)">
            <summary>
            Removes the specified paragraph.
            </summary>
            <param name="paragraph">The paragraph.</param>
        </member>
        <member name="M:Spire.Doc.Collections.ParagraphCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the paragraph at the specified index from the collection.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:Spire.Doc.Collections.RowCollection.#ctor(Spire.Doc.Table)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Collections.RowCollection"/> class.
            </summary>
            <param name="owner">The owner.</param>
        </member>
        <member name="M:Spire.Doc.Collections.RowCollection.Add(Spire.Doc.TableRow)">
            <summary>
            Adds a table row to collection.
            </summary>
            <param name="row">The row.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Collections.RowCollection.Insert(System.Int32,Spire.Doc.TableRow)">
            <summary>
            Inserts a table row into collection.
            </summary>
            <param name="index">The index.</param>
            <param name="row">The row.</param>
        </member>
        <member name="M:Spire.Doc.Collections.RowCollection.IndexOf(Spire.Doc.TableRow)">
            <summary>
            Returns index of a specified row in collection.
            </summary>
            <param name="row">The row.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Collections.RowCollection.Remove(Spire.Doc.TableRow)">
            <summary>
            Removes a specified row.
            </summary>
            <param name="row">The row.</param>
        </member>
        <member name="T:Spire.Doc.Collections.SectionCollection">
            <summary>
            Represents a collection of <see cref="T:Spire.Doc.Section"/>. 
            </summary>
        </member>
        <member name="M:Spire.Doc.Collections.SectionCollection.#ctor(Spire.Doc.Document)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Collections.SectionCollection"/> class.
            </summary>
            <param name="doc">The doc.</param>
        </member>
        <member name="M:Spire.Doc.Collections.SectionCollection.Add(Spire.Doc.Interface.ISection)">
            <summary>
            Adds a section to end of document.
            </summary>
            <param name="section">The section.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Collections.SectionCollection.IndexOf(Spire.Doc.Interface.ISection)">
            <summary>
            Returns the zero-based index of the specified section.
            </summary>
            <param name="section">The section.</param>
            <returns></returns>
        </member>
        <member name="T:Spire.Doc.Collections.TableCollection">
            <summary>
            Represents a collection of <see cref="!:Spire.Doc.ITable"/> objects.
            </summary>
        </member>
        <member name="M:Spire.Doc.Collections.TableCollection.#ctor(Spire.Doc.Collections.BodyRegionCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Collections.TableCollection"/> class.
            </summary>
            <param name="bodyItems">The body items.</param>
        </member>
        <member name="M:Spire.Doc.Collections.TableCollection.Add(Spire.Doc.Interface.ITable)">
            <summary>
            Adds a table to end of text body.
            </summary>
            <param name="table">The table.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Collections.TableCollection.Contains(Spire.Doc.Interface.ITable)">
            <summary>
            Determines whether the <see cref="!:Spire.Doc.ITableCollection"/> contains a specific value.
            </summary>
            <param name="table">The table.</param>
            <returns>
            	If table found, set to <c>true</c>.
            </returns>
        </member>
        <member name="M:Spire.Doc.Collections.TableCollection.IndexOf(Spire.Doc.Interface.ITable)">
            <summary>
            Determines the index of a specific item in the <see cref="!:Spire.Doc.ITableCollection"/>.
            </summary>
            <param name="table">The table.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Collections.TableCollection.Insert(System.Int32,Spire.Doc.Interface.ITable)">
            <summary>
            Inserts a table into collection at the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="table">The table.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Collections.TableCollection.Remove(Spire.Doc.Interface.ITable)">
            <summary>
            Removes the specified table.
            </summary>
            <param name="table">The table.</param>
        </member>
        <member name="M:Spire.Doc.Collections.TableCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the table at the specified index from the collection.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:Spire.Doc.Collections.TextBoxItemCollection">
            <summary>
            Represents a collection of <see cref="T:Spire.Doc.Fields.TextBox"/> objects.
            </summary>
        </member>
        <member name="M:Spire.Doc.Collections.TextBoxItemCollection.#ctor(Spire.Doc.Interface.IDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Collections.TextBoxItemCollection"/> class.
            </summary>
            <param name="doc">The doc.</param>
        </member>
        <member name="M:Spire.Doc.Collections.TextBoxItemCollection.Add(Spire.Doc.Interface.ITextBox)">
            <summary>
            Adds a textbox to the collection.
            </summary>
            <param name="textBox">The text box.</param>
            <returns></returns>
        </member>
        <member name="T:Spire.Doc.Documents.Comparison.CompareOptions">
            <summary>
            Document comparison parameter settings.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.Comparison.CompareOptions.IgnoreFormatting">
            <summary>
            Gets or sets a value indicating whether to ignore format comparisons when comparing documents.
            The default is false.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.Comparison.CompareOptions.TextCompareLevel">
            <summary>
            Gets or sets the text compare level.
            Default value is <see cref="F:Spire.Doc.Documents.Comparison.TextDiffMode.Word" />.
            </summary>       
        </member>
        <member name="T:Spire.Doc.Documents.Converters.BinaryDoc.Decrypt.XORObfuscation">
             <summary>
            The Class XORObfuscation. [MS-OFFCRYPTO].PDF] Section 2.3.7 XOR Obfuscation.
             </summary>
        </member>
        <member name="F:Spire.Doc.Documents.Converters.BinaryDoc.Decrypt.XORObfuscation.PadArray">
            <summary>
            The pad array
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.Converters.BinaryDoc.Decrypt.XORObfuscation.InitialCode">
            <summary>
            The initial code
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.Converters.BinaryDoc.Decrypt.XORObfuscation.XorMatrix">
            <summary>
            The xor matrix
            </summary>
        </member>
        <member name="M:Spire.Doc.Documents.Converters.BinaryDoc.Decrypt.XORObfuscation.CheckPassword(System.String,System.UInt32)">
            <summary>
             Checks whether password is correct.
            </summary>
            <param name="password">The password.</param>
            <param name="lKey">The lKey.</param>
            <returns>True if password verification succeeded.</returns>
        </member>
        <member name="M:Spire.Doc.Documents.Converters.BinaryDoc.Decrypt.XORObfuscation.CreatePasswordVerifierMethod1(System.Byte[])">
            <summary>
            Creates the password verifier method1.
            </summary>
            <param name="password">The password.</param>
            <returns>System.UInt16.</returns>
        </member>
        <member name="M:Spire.Doc.Documents.Converters.BinaryDoc.Decrypt.XORObfuscation.CreateXorArrayMethod1(System.String)">
            <summary>
            Creates the xor array method1.
            </summary>
            <param name="password">The password.</param>
            <returns>System.Byte[].</returns>
        </member>
        <member name="M:Spire.Doc.Documents.Converters.BinaryDoc.Decrypt.XORObfuscation.CreateXorKeyMethod1(System.Byte[])">
            <summary>
            Creates the xor key method1.
            </summary>
            <param name="password">The password.</param>
            <returns>System.UInt16.</returns>
            <exception cref="T:System.Exception">Passoword</exception>
        </member>
        <member name="M:Spire.Doc.Documents.Converters.BinaryDoc.Decrypt.XORObfuscation.XorRor(System.Byte,System.Byte)">
            <summary>
            Xors the ror.
            </summary>
            <param name="byte1">The byte1.</param>
            <param name="byte2">The byte2.</param>
            <returns>System.Byte.</returns>
        </member>
        <member name="M:Spire.Doc.Documents.Converters.BinaryDoc.Decrypt.XORObfuscation.Ror(System.Byte)">
            <summary>
            Rors the specified byte1.
            </summary>
            <param name="byte1">The byte1.</param>
            <returns>System.Byte.</returns>
        </member>
        <member name="M:Spire.Doc.Documents.Converters.BinaryDoc.Decrypt.XORObfuscation.EncryptDataMethod1(System.String,System.Byte[],System.Int32)">
            <summary>
            Encrypts the data method1.
            </summary>
            <param name="password">The password.</param>
            <param name="data">The data.</param>
            <param name="xorArrayIndex">Index of the xor array.</param>
        </member>
        <member name="M:Spire.Doc.Documents.Converters.BinaryDoc.Decrypt.XORObfuscation.DecryptDataMethod1(System.String,System.Byte[],System.Int32)">
            <summary>
            Decrypts the data method1.
            </summary>
            <param name="password">The password.</param>
            <param name="data">The data.</param>
            <param name="xorArrayIndex">Index of the xor array.</param>
        </member>
        <member name="M:Spire.Doc.Documents.Converters.BinaryDoc.Decrypt.XORObfuscation.CreateXorArrayMethod2(System.String)">
            <summary>
            Creates the xor array method2.
            </summary>
            <param name="password">The password.</param>
            <returns>System.Byte[].</returns>
        </member>
        <member name="T:Spire.Doc.Documents.Converters.BinaryDoc.Decrypt.CryptoAPI">
            <summary>
            Class CryptoAPI.
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.Converters.BinaryDoc.Decrypt.CryptoAPI.HashParameters">
            <summary>
            Enum HashParameters
            </summary>
        </member>
        <member name="M:Spire.Doc.Documents.Converters.BinaryDoc.Decrypt.CryptoAPI.CryptAcquireContext(System.IntPtr@,System.String,System.String,System.UInt32,System.UInt32)">
            <summary>
            Crypts the acquire context.
            </summary>
            <param name="hProv">The h prov.</param>
            <param name="pszContainer">The PSZ container.</param>
            <param name="pszProvider">The PSZ provider.</param>
            <param name="dwProvType">Type of the dw prov.</param>
            <param name="dwFlags">The dw flags.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Spire.Doc.Documents.Converters.BinaryDoc.Decrypt.CryptoAPI.CryptCreateHash(System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.IntPtr@)">
            <summary>
            Crypts the create hash.
            </summary>
            <param name="hProv">The h prov.</param>
            <param name="Algid">The algid.</param>
            <param name="hKey">The h key.</param>
            <param name="dwFlags">The dw flags.</param>
            <param name="phHash">The ph hash.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Spire.Doc.Documents.Converters.BinaryDoc.Decrypt.CryptoAPI.CryptGetHashParam(System.IntPtr,System.Int32,System.Int32@,System.Int32@,System.Int32)">
            <summary>
            Crypts the get hash parameter.
            </summary>
            <param name="hHash">The h hash.</param>
            <param name="dwParam">The dw parameter.</param>
            <param name="dwValue">The dw value.</param>
            <param name="dwBufferSize">Size of the dw buffer.</param>
            <param name="dwFlags">The dw flags.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Spire.Doc.Documents.Converters.BinaryDoc.Decrypt.CryptoAPI.CryptGetHashParam(System.IntPtr,System.Int32,System.Byte[],System.Int32@,System.Int32)">
            <summary>
            Crypts the get hash parameter.
            </summary>
            <param name="hHash">The h hash.</param>
            <param name="dwParam">The dw parameter.</param>
            <param name="pBuffer">The p buffer.</param>
            <param name="pdwDataLen">Length of the PDW data.</param>
            <param name="dwFlags">The dw flags.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Spire.Doc.Documents.Converters.BinaryDoc.Decrypt.CryptoAPI.CryptGetHashParam(System.IntPtr,System.Int32,System.IntPtr@,System.Int32@,System.Int32)">
            <summary>
            Crypts the get hash parameter.
            </summary>
            <param name="hHash">The h hash.</param>
            <param name="dwParam">The dw parameter.</param>
            <param name="hBuffer">The h buffer.</param>
            <param name="pdwDataLen">Length of the PDW data.</param>
            <param name="dwFlags">The dw flags.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Spire.Doc.Documents.Converters.BinaryDoc.Decrypt.CryptoAPI.CryptHashData(System.IntPtr,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Crypts the hash data.
            </summary>
            <param name="hHash">The h hash.</param>
            <param name="pbData">The pb data.</param>
            <param name="dwDataLen">Length of the dw data.</param>
            <param name="dwFlags">The dw flags.</param>
            <returns>Boolean.</returns>
        </member>
        <member name="M:Spire.Doc.Documents.Converters.BinaryDoc.Decrypt.CryptoAPI.CryptDestroyHash(System.IntPtr)">
            <summary>
            Crypts the destroy hash.
            </summary>
            <param name="hHash">The h hash.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Spire.Doc.Documents.Converters.BinaryDoc.Decrypt.CryptoAPI.CryptDecrypt(System.IntPtr,System.IntPtr,System.Int32,System.UInt32,System.Byte[],System.Int32@)">
            <summary>
            Crypts the decrypt.
            </summary>
            <param name="hKey">The h key.</param>
            <param name="hHash">The h hash.</param>
            <param name="Final">The final.</param>
            <param name="dwFlags">The dw flags.</param>
            <param name="pbData">The pb data.</param>
            <param name="pdwDataLen">Length of the PDW data.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Spire.Doc.Documents.Converters.BinaryDoc.Decrypt.CryptoAPI.CryptDeriveKey(System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.IntPtr@)">
            <summary>
            Crypts the derive key.
            </summary>
            <param name="hProv">The h prov.</param>
            <param name="Algid">The algid.</param>
            <param name="hBaseData">The h base data.</param>
            <param name="flags">The flags.</param>
            <param name="phKey">The ph key.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Spire.Doc.Documents.Converters.BinaryDoc.Decrypt.CryptoAPI.CryptDestroyKey(System.IntPtr)">
            <summary>
            Crypts the destroy key.
            </summary>
            <param name="phKey">The ph key.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Spire.Doc.Documents.Converters.BinaryDoc.Decrypt.CryptoAPI.CryptReleaseContext(System.IntPtr,System.Int32)">
            <summary>
            Crypts the release context.
            </summary>
            <param name="hProv">The h prov.</param>
            <param name="dwFlags">The dw flags.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Spire.Doc.Documents.Converters.BinaryDoc.Decrypt.RC4EncryptionVerifier.Parse(System.IO.Stream,System.Boolean)">
            <summary>
            
            </summary>
            <param name="stream"></param>
            <param name="bIs40bit"></param>
        </member>
        <member name="M:Spire.Doc.Documents.Converters.OOML.Output.OOMLDocumentOutputBase.VisitTableStart(Spire.Doc.Table)">
            <summary>
            Logs a warning to the user-provided warning callback.
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.Converters.FitText">
            Specifies a width,in twips,to which text is expanded or condensed to fit.By default,text is not modified to
            fit into a specific width..
        </member>
        <member name="T:Spire.Doc.Documents.Converters.rtfShapeAttr">
            <summary>
            Defines shape attributes written in rtf file.
            </summary>
        </member>
        <member name="M:Spire.Doc.Documents.Converters.WordXml.Output.WmlOutput.SaveToStream(Spire.Doc.Document,System.IO.Stream)">
            <summary>
            Called to save the document in WordML format.
            </summary>
            <param name="doc"></param>
            <param name="stream"></param>
        </member>
        <member name="M:Spire.Doc.Documents.Converters.WordXml.Output.WmlOutput.SaveToFile(Spire.Doc.Document,System.String)">
            <summary>
            Called to save the document in WordML format.
            </summary>
            <param name="doc"></param>
            <param name="fileName"></param>
        </member>
        <member name="M:Spire.Doc.Documents.PartContainer.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or
            resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Spire.Doc.Documents.AnimatedGifEncoder.SetTransparent(System.Drawing.Color)">
             Sets the transparent color for the last added frame
             and any subsequent frames.
             Since all colors are subject to modification
             in the quantization process, the color in the final
             palette for each frame closest to the given color
             becomes the transparent color for that frame.
             May be set to null to indicate no transparent color.
            
             @param c Color to be treated as transparent on display.
        </member>
        <member name="M:Spire.Doc.Documents.AnimatedGifEncoder.AddFrame(System.Drawing.Image)">
             Adds next GIF frame.  The frame is not written immediately, but is
             actually deferred until the next frame is received so that timing
             data can be inserted.  Invoking <code>finish()</code> flushes all
             frames.  If <code>setSize</code> was not invoked, the size of the
             first image is used for all subsequent frames.
            
             @param im BufferedImage containing frame to write.
             @return true if successful.
        </member>
        <member name="M:Spire.Doc.Documents.AnimatedGifEncoder.Finish">
            Flushes any pending data and closes output file.
            If writing to an OutputStream, the stream is not
            closed.
        </member>
        <member name="M:Spire.Doc.Documents.AnimatedGifEncoder.SetFrameRate(System.Single)">
             Sets frame rate in frames per second.  Equivalent to
             <code>setDelay(1000/fps)</code>.
            
             @param fps float frame rate (frames per second)
        </member>
        <member name="M:Spire.Doc.Documents.AnimatedGifEncoder.SetQuality(System.Int32)">
             Sets quality of color quantization (conversion of images
             to the maximum 256 colors allowed by the GIF specification).
             Lower values (minimum = 1) produce better colors, but slow
             processing significantly.  10 is the default, and produces
             good color mapping at reasonable speeds.  Values greater
             than 20 do not yield significant improvements in speed.
            
             @param quality int greater than 0.
             @return
        </member>
        <member name="M:Spire.Doc.Documents.AnimatedGifEncoder.SetSize(System.Int32,System.Int32)">
             Sets the GIF frame size.  The default size is the
             size of the first frame added if this method is
             not invoked.
            
             @param w int frame width.
             @param h int frame width.
        </member>
        <member name="M:Spire.Doc.Documents.AnimatedGifEncoder.Start(System.IO.FileStream)">
             Initiates GIF file creation on the given stream.  The stream
             is not closed automatically.
            
             @param os OutputStream on which GIF images are written.
             @return false if initial write failed.
        </member>
        <member name="M:Spire.Doc.Documents.AnimatedGifEncoder.Start(System.String)">
             Initiates writing of a GIF file with the specified name.
            
             @param file String containing output file name.
             @return false if open or initial write failed.
        </member>
        <member name="M:Spire.Doc.Documents.AnimatedGifEncoder.AnalyzePixels">
            Analyzes image colors and creates color map.
        </member>
        <member name="M:Spire.Doc.Documents.AnimatedGifEncoder.FindClosest(System.Drawing.Color)">
             Returns index of palette color closest to c
            
        </member>
        <member name="M:Spire.Doc.Documents.AnimatedGifEncoder.GetImagePixels">
            Extracts image pixels into byte array "pixels"
        </member>
        <member name="M:Spire.Doc.Documents.AnimatedGifEncoder.WriteGraphicCtrlExt">
            Writes Graphic Control Extension
        </member>
        <member name="M:Spire.Doc.Documents.AnimatedGifEncoder.WriteImageDesc">
            Writes Image Descriptor
        </member>
        <member name="M:Spire.Doc.Documents.AnimatedGifEncoder.WriteLSD">
            Writes Logical Screen Descriptor
        </member>
        <member name="M:Spire.Doc.Documents.AnimatedGifEncoder.WriteNetscapeExt">
            Writes Netscape application extension to define
            repeat count.
        </member>
        <member name="M:Spire.Doc.Documents.AnimatedGifEncoder.WritePalette">
            Writes color table
        </member>
        <member name="M:Spire.Doc.Documents.AnimatedGifEncoder.WritePixels">
            Encodes and writes pixel data
        </member>
        <member name="M:Spire.Doc.Documents.AnimatedGifEncoder.WriteShort(System.Int32)">
            Write 16-bit value to output stream, LSB first
        </member>
        <member name="M:Spire.Doc.Documents.AnimatedGifEncoder.WriteString(System.String)">
            Writes string to output stream
        </member>
        <member name="F:Spire.Doc.Documents.GifDecoder.STATUS_OK">
            File read status: No errors.
        </member>
        <member name="F:Spire.Doc.Documents.GifDecoder.STATUS_FORMAT_ERROR">
            File read status: Error decoding file (may be partially decoded)
        </member>
        <member name="F:Spire.Doc.Documents.GifDecoder.STATUS_OPEN_ERROR">
            File read status: Unable to open source.
        </member>
        <member name="M:Spire.Doc.Documents.GifDecoder.GetDelay(System.Int32)">
             Gets display duration for specified frame.
            
             @param n int index of frame
             @return delay in milliseconds
        </member>
        <member name="M:Spire.Doc.Documents.GifDecoder.GetFrameCount">
            Gets the number of frames read from file.
            @return frame count
        </member>
        <member name="M:Spire.Doc.Documents.GifDecoder.GetImage">
            <summary>
             Gets the first (or only) image read.
            </summary>
            <returns>return BufferedImage containing first frame, or null if none.</returns>
        </member>
        <member name="M:Spire.Doc.Documents.GifDecoder.GetLoopCount">
             Gets the "Netscape" iteration count, if any.
             A count of 0 means repeat indefinitiely.
            
             @return iteration count if one was specified, else 1.
        </member>
        <member name="M:Spire.Doc.Documents.GifDecoder.GetPixels(System.Drawing.Bitmap)">
            Creates new frame image from current data (and previous
            frames as specified by their disposition codes).
        </member>
        <member name="M:Spire.Doc.Documents.GifDecoder.GetFrame(System.Int32)">
             Gets the image contents of frame n.
            
             @return BufferedImage representation of frame, or null if n is invalid.
        </member>
        <member name="M:Spire.Doc.Documents.GifDecoder.GetFrameSize">
             Gets image size.
            
             @return GIF image dimensions
        </member>
        <member name="M:Spire.Doc.Documents.GifDecoder.Read(System.IO.Stream)">
             Reads GIF image from stream
            
             @param BufferedInputStream containing GIF file.
             @return read status code (0 = no errors)
        </member>
        <member name="M:Spire.Doc.Documents.GifDecoder.Read(System.String)">
             Reads GIF file from specified file/URL source  
             (URL assumed if name contains ":/" or "file:")
            
             @param name String containing source
             @return read status code (0 = no errors)
        </member>
        <member name="M:Spire.Doc.Documents.GifDecoder.DecodeImageData">
            Decodes LZW image data into pixel array.
            Adapted from John Cristy's ImageMagick.
        </member>
        <member name="M:Spire.Doc.Documents.GifDecoder.Error">
            Returns true if an error was encountered during reading/decoding
        </member>
        <member name="M:Spire.Doc.Documents.GifDecoder.Init">
            Initializes or re-initializes reader
        </member>
        <member name="M:Spire.Doc.Documents.GifDecoder.Read">
            Reads a single byte from the input stream.
        </member>
        <member name="M:Spire.Doc.Documents.GifDecoder.ReadBlock">
             Reads next variable length block from input.
            
             @return number of bytes stored in "buffer"
        </member>
        <member name="M:Spire.Doc.Documents.GifDecoder.ReadColorTable(System.Int32)">
             Reads color table as 256 RGB integer values
            
             @param ncolors int number of colors to read
             @return int array containing 256 colors (packed ARGB with full alpha)
        </member>
        <member name="M:Spire.Doc.Documents.GifDecoder.ReadContents">
            Main file parser.  Reads GIF content blocks.
        </member>
        <member name="M:Spire.Doc.Documents.GifDecoder.ReadGraphicControlExt">
            Reads Graphics Control Extension values
        </member>
        <member name="M:Spire.Doc.Documents.GifDecoder.ReadHeader">
            Reads GIF file header information.
        </member>
        <member name="M:Spire.Doc.Documents.GifDecoder.ReadImage">
            Reads next frame image
        </member>
        <member name="M:Spire.Doc.Documents.GifDecoder.ReadLSD">
            Reads Logical Screen Descriptor
        </member>
        <member name="M:Spire.Doc.Documents.GifDecoder.ReadNetscapeExt">
            Reads Netscape extenstion to obtain iteration count
        </member>
        <member name="M:Spire.Doc.Documents.GifDecoder.ReadShort">
            Reads next 16-bit value, LSB first
        </member>
        <member name="M:Spire.Doc.Documents.GifDecoder.ResetFrame">
            Resets frame state for reading next image.
        </member>
        <member name="M:Spire.Doc.Documents.GifDecoder.Skip">
            Skips variable length blocks up to and including
            next zero length block.
        </member>
        <member name="T:Spire.Doc.Documents.GifDecoder.GifFrame">
            <summary>
            Gif frames
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.DropDownItem.Text">
            <summary>
            Gets or sets  text
            </summary>
        </member>
        <member name="M:Spire.Doc.Documents.DropDownItem.#ctor(Spire.Doc.Interface.IDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Documents.DropDownItem"/> class.
            </summary>
            <param name="doc">The document</param>
        </member>
        <member name="P:Spire.Doc.Documents.Paragraph.ListText">
            <summary>
            Gets the list text.
            The value of the list number is obtained by dynamic calculation. 
            The value of the list number of the paragraph directly may be incorrect.
            To obtain the correct value, you need to traverse all paragraphs in the document.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.Paragraph.DocumentObjectType">
            <summary>
            Gets the type of the document object.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.Paragraph.ChildObjects">
            <summary>
            Gets the child objects.
            </summary>
            <value>The child objects.</value>
        </member>
        <member name="P:Spire.Doc.Documents.Paragraph.StyleName">
            <summary>
            Gets paragraph style name.
            </summary>
            <value></value>
        </member>
        <member name="P:Spire.Doc.Documents.Paragraph.Text">
            <summary>
            Returns or sets paragraph text.
            </summary>
            <value></value>
            <remarks>All internal formatting will be cleared when new text is set.</remarks>
        </member>
        <member name="P:Spire.Doc.Documents.Paragraph.Item(System.Int32)">
            <summary>
            Gets paragraph item by index.
            </summary>
            <value></value>
        </member>
        <member name="P:Spire.Doc.Documents.Paragraph.Items">
            <summary>
            Gets paragraph items.
            </summary>
            <value>The items.</value>
        </member>
        <member name="P:Spire.Doc.Documents.Paragraph.Format">
            <summary>
            Gets paragraph format.
            </summary>
            <value></value>
        </member>
        <member name="P:Spire.Doc.Documents.Paragraph.IsTOCPara">
            <summary>
            gets and sets whether the paragraph has toc field.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.Paragraph.BreakCharacterFormat">
            <summary>
            Gets character format for the break symbol.
            </summary>
            <value></value>
        </member>
        <member name="P:Spire.Doc.Documents.Paragraph.ListFormat">
            <summary>
            Gets format of the list for the paragraph.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.Paragraph.IsInCell">
            <summary>
            Gets a value indicating whether this paragraph is in cell.
            </summary>
            <value>
            	if this paragraph is in cell, set to <c>true</c>.
            </value>
        </member>
        <member name="P:Spire.Doc.Documents.Paragraph.IsEndOfSection">
            <summary>
            Gets a value indicating whether this paragraph is end of section.
            </summary>
            <value>
            if this paragraph is end of section, set to <c>true</c>.
            </value>
        </member>
        <member name="P:Spire.Doc.Documents.Paragraph.IsEndOfDocument">
            <summary>
            Gets a value indicating whether this paragraph is end of document.
            </summary>
            <value>
            if this instance is end of document, set to <c>true</c>.
            </value>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.AppendText(System.String)">
            <summary>
            Appends text to end of document.
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.AppendPicture(System.Byte[])">
            <summary>
            Appends image to end of paragraph.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.AppendField(System.String,Spire.Doc.FieldType)">
            <summary>
            Appends the field.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.AppendFieldMark(Spire.Doc.Documents.FieldMarkType)">
            <summary>
            Appends the field mark.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.AppendHyperlink(System.String,System.String,Spire.Doc.Documents.HyperlinkType)">
            <summary>
            Appends the hyperlink.
            </summary>
            <param name="link">The link.</param>
            <param name="text">The text to display.</param>
            <param name="type">The hyperlink type.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.AppendHyperlink(System.String,Spire.Doc.Fields.DocPicture,Spire.Doc.Documents.HyperlinkType)">
            <summary>
            Appends the hyperlink.
            </summary>
            <param name="link">The link.</param>
            <param name="picture">The picture to display.</param>
            <param name="type">The type of hyperlink.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.AppendBookmarkStart(System.String)">
            <summary>
            Appends start of the bookmark with specified name into paragraph.
            </summary>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.AppendBookmarkEnd(System.String)">
            <summary>
            Appends end of the bookmark with specified name into paragraph.
            </summary>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.AppendPermStart(System.String)">
            <summary>
            Appends start of the permission with specified id into paragraph.
            </summary>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.AppendPermEnd(System.String)">
            <summary>
            Appends end of the permission with specified id into paragraph.
            </summary>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.AppendComment(System.String)">
            <summary>
            Appends the comment.
            </summary>
            <param name="text">The string.</param>
            <returns>Returns WComment.</returns>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.AppendCommentMark(Spire.Doc.Documents.CommentMarkType)">
            <summary>
            Appends the comment mark.
            </summary>
            <param name="type">The type.</param>
            <returns>Returns CommentMark.</returns>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.AppendFootnote(Spire.Doc.FootnoteType)">
            <summary>
            Appends the footnote.
            </summary>
            <param name="type">The type.</param>
            <returns>returns the footnotes.</returns>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.AppendFootnote(Spire.Doc.FootnoteType,System.Boolean)">
            <summary>
            Appends the footnote.
            </summary>
            <param name="type">The type.</param>
            <param name="bIsAutoNumbered">Is auto numbered.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.AppendTextBox(System.Single,System.Single)">
            <summary>
            Append Textbox to the end of the paragraph
            </summary>
            <param name="width">Textbox width</param>
            <param name="height">Textbox height</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.AppendCheckBox">
            <summary>
            Appends the check box form field.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.AppendCheckBox(System.String,System.Boolean)">
            <summary>
            Appends the check box.
            </summary>
            <param name="checkBoxName">Name of the check box.</param>
            <param name="defaultCheckBoxValue">Default checkbox value</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.AppendTextFormField(System.String)">
            <summary>
            Appends the text form field.
            </summary>
            <param name="defaultText">The default text. Pass "null" to insert default Word text</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.AppendTextFormField(System.String,System.String)">
            <summary>
            Appends the text form field.
            </summary>
            <param name="formFieldName">Name of the form field.</param>
            <param name="defaultText">The default text. Pass "null" to insert default Word text</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.AppendDropDownFormField">
            <summary>
            Appends the drop down form field.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.AppendDropDownFormField(System.String)">
            <summary>
            Appends the drop down form field.
            </summary>
            <param name="dropDropDownName">Name of the drop drop down.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.AppendSymbol(System.Byte)">
            <summary>
            Appends special symbol to end of paragraph.
            </summary>
            <param name="characterCode">The character code.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.AppendShape(System.Single,System.Single,Spire.Doc.Documents.ShapeType)">
            <summary>
            Append Shape to the end of the paragraph.
            </summary>
            <param name="width">Shape width</param>
            <param name="height">Shape height</param>
            <param name="shapeType">Shape type</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.AppendHorizonalLine">
            <summary>
            Append Horizonal Line to the end of the paragraph.
            </summary>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.AppendShapeGroup(System.Single,System.Single)">
            <summary>
            Append shape Group to the end of the paragraph.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.AppendChart(Spire.Doc.Fields.Shapes.Charts.ChartType,System.Single,System.Single)">
            <summary>
              Append an chart object into the document and scales it to the specified size.
            </summary>
            <param name="chartType">The chart type to insert into the document.</param>
            <param name="width">The width of the image in points. Can be a negative or zero value to request 100% scale.</param>
            <param name="height">The height of the image in points. Can be a negative or zero value to request 100% scale.</param>
            <returns>The image node that was just inserted.</returns>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.AppendChart(Spire.Doc.Fields.Shapes.Charts.ChartType,Spire.Doc.Documents.HorizontalOrigin,System.Single,Spire.Doc.Documents.VerticalOrigin,System.Single,System.Single,System.Single,Spire.Doc.Documents.TextWrappingStyle)">
            <summary>
              Append an chart object into the document and scales it to the specified size.
            </summary>
            <param name="chartType">The chart type to insert into the document.</param>
            <param name="horzPos">Specifies where the distance to the image is measured from.</param>
            <param name="left">Distance in points from the origin to the left side of the image.</param>
            <param name="vertPos">Specifies where the distance to the image measured from.</param>
            <param name="top">Distance in points from the origin to the top side of the image.</param>
            <param name="width">The width of the image in points. Can be a negative or zero value to request 100% scale.</param>
            <param name="height">The height of the image in points. Can be a negative or zero value to request 100% scale.</param>
            <param name="wrapType">Specifies how to wrap text around the image.</param>
            <returns>The image node that was just inserted.</returns>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.AppendBreak(Spire.Doc.Documents.BreakType)">
            <summary>
            Appends break to end of paragraph.
            </summary>
            <param name="breakType">The break type.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.AppendTOC(System.Int32,System.Int32)">
            <summary>
            Appends the table of content.
            </summary>
            <param name="lowerLevel">The starting heading level of the table of content.</param>
            <param name="upperLevel">The ending heading level of the table of content.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.AppendPicture(System.Drawing.Image)">
            <summary>
            Appends the picture
            </summary>
            <param name="image">The image</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.AppendPicture(System.String)">
            <summary>
            Appends the picture.
            </summary>
            <param name="imgFile">The img file.</param>
            <returns>DocPicture.</returns>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.AppendPicture(System.IO.Stream)">
            <summary>
            Appends the picture.
            </summary>
            <param name="imgStream">The img stream.</param>
            <returns>DocPicture.</returns>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.AppendHTML(System.String)">
            <summary>
            Appends the HTML.
            </summary>
            <param name="html">The HTML.</param>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.AppendRTF(System.String,System.Boolean)">
            <summary>
            Appends the RTF.
            </summary>
            <param name="rtfcode">the RTF code.</param>
            <param name="addtolastsection">When is true, added to the last section of the document.</param>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.AppendRTF(System.String)">
            <summary>
            Appends the RTF.
            </summary>
            <param name="rtfCode">The RTF code.</param>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.AppendOleObject(System.IO.Stream,Spire.Doc.Fields.DocPicture,Spire.Doc.Documents.OleObjectType)">
            <summary>
            Appends the OLE object.
            </summary>
            <param name="oleStorage">The OLE object (file) stream.</param>
            <param name="olePicture">The OLE picture.</param>
            <param name="type">The type of OLE object.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.AppendOleObject(System.Byte[],Spire.Doc.Fields.DocPicture,Spire.Doc.Documents.OleObjectType)">
            <summary>
            Appends the OLE object into paragraph.
            </summary>
            <param name="oleBytes">The OLE object (file) bytes.</param>
            <param name="olePicture">The OLE picture.</param>
            <param name="type">The type of OLE object.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.AppendOleObject(System.String,System.String,System.Byte[],Spire.Doc.Fields.DocPicture)">
            <summary>
            Appends the OLE object into paragraph.
            </summary>
            <param name="progId">The programmatic identifier.</param>
            <param name="clsId">The class identifier.</param>
            <param name="nativeData">The native data of embedded OLE object.</param>
            <param name="olePicture">The OLE picture.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.AppendOleObject(System.String,Spire.Doc.Fields.DocPicture,Spire.Doc.Documents.OleObjectType)">
            <summary>
            Appends the OLE object into paragraph.
            </summary>
            <param name="pathToFile">The path to file.</param>
            <param name="olePicture">The OLE picture.</param>
            <param name="type">The type of OLE object.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.AppendOleObject(System.String,Spire.Doc.Fields.DocPicture)">
            <summary>
            Appends the OLE object.
            </summary>
            <param name="pathToFile">The path to file.</param>
            <param name="olePicture">The OLE picture.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.AppendOleObject(System.IO.Stream,Spire.Doc.Fields.DocPicture,Spire.Doc.Documents.OleLinkType)">
            <summary>
            Appends the OLE object into paragraph.
            </summary>
            <param name="oleStorage">The OLE storage.</param>
            <param name="olePicture">The OLE picture.</param>
            <param name="oleLinkType">The type of OLE object link type.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.AppendOleObject(System.Byte[],Spire.Doc.Fields.DocPicture,Spire.Doc.Documents.OleLinkType)">
            <summary>
            Appends the OLE object.
            </summary>
            <param name="oleBytes">The OLE storage bytes.</param>
            <param name="olePicture">The OLE picture.</param>
            <param name="oleLinkType">Type of the OLE link.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.AppendOleObject(System.String,Spire.Doc.Fields.DocPicture,Spire.Doc.Documents.OleLinkType)">
            <summary>
            Appends the OLE object.
            </summary>
            <param name="linkFile">The link file. </param>
            <param name="olePicture">The OLE picture.</param>
            <param name="oleLinkType">Type of the OLE link.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.AppendOleObject(System.Byte[],Spire.Doc.Fields.DocPicture,System.String)">
            <summary>
            Appends the package OLE object (ole object without specified type).
            </summary>
            <param name="oleBytes">The OLE object bytes.</param>
            <param name="olePicture">The OLE picture.</param>
            <param name="fileExtension">The file extension.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.AppendOleObject(System.IO.Stream,Spire.Doc.Fields.DocPicture,System.String)">
            <summary>
            Appends the package OLE object (ole object without specified type).
            </summary>
            <param name="oleStream">The OLE file stream.</param>
            <param name="olePicture">The OLE picture.</param>
            <param name="fileExtension">The file extension.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.RemoveFrame">
            <summary>
            Remove a frame.
            </summary>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.CalculatedResult">
            <summary>
            Get the text that the field items have been updated .
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.InsertSectionBreak">
            <summary>
            Inserts the section break.
            </summary>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.InsertSectionBreak(Spire.Doc.Documents.SectionBreakType)">
            <summary>
            Inserts the section break.
            </summary>
            <param name="breakType">Type of the break.</param>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.IntegrateFormatToCurrStyle(Spire.Doc.Document,Spire.Doc.Document)">
            <summary>
            Integrate the relative format to curr style para uses to keep its format same as format in source document.
            </summary>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.UpdateSourceFormatting(Spire.Doc.Document)">
            <summary>
            Updates the source formatting.
            </summary>
            <param name="doc">The doc.</param>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.UpdateListValue">
            <summary>
            Updates the list value.
            The value of the list number is obtained by dynamic calculation. 
            The value of the list number of the paragraph directly may be incorrect.
            To obtain the correct value, you need to traverse all paragraphs in the document.
            </summary>
            <returns>the value string.</returns>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.GetListFormatForApplyStyle">
            <summary>
            Gets the list format for apply style.
            </summary>
            <returns>the list format.</returns>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.GetParagraphFormatOfApplyListFormatAndStyle">
            <summary>
            Gets the paragraph format of apply list format and style.
            </summary>
            <returns>The paragraph format.</returns>
        </member>
        <member name="M:Spire.Doc.Documents.Paragraph.GetParagraphFormatOfStyle(Spire.Doc.Documents.ParagraphStyle,Spire.Doc.Formatting.ParagraphFormat)">
            <summary>
            Gets the paragraph format of the style.
            </summary>
            <param name="pStyley">the paragraph style.</param>
            <param name="pFormat">the paragraph format.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Documents.LayoutParagraphInfoImpl.UpdateTabWidth(Spire.Doc.Documents.ListTabs,System.Single)">
            <summary>
            Updates the width of the tab, based on the list text.
            </summary>
            <param name="tabs">The tabs.</param>
            <param name="width">The width.</param>
        </member>
        <member name="T:Spire.Doc.Documents.Borders">
            <summary>
            Represents a collection of four borders. <see cref="!:Spire.Doc.Border"/>
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.Borders.NoBorder">
            <summary>
            Gets whether the border exists
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.Borders.Left">
            <summary>
            Gets left border.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.Borders.Top">
            <summary>
            Gets top border.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.Borders.Right">
            <summary>
            Gets right border.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.Borders.Bottom">
            <summary>
            Gets bottom border.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.Borders.Vertical">
            <summary>
            Gets vertical border.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.Borders.Horizontal">
            <summary>
            Gets horizontal border.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.Borders.DiagonalDown">
            <summary>
            Gets diagonal border from top left corner to bottom right corner.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.Borders.DiagonalUp">
            <summary>
            Gets diagonal border from bottom left corner to top right corner.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.Borders.Color">
            <summary>
            Sets color of the borders.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.Borders.LineWidth">
            <summary>
            Sets width of the borders.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.Borders.BorderType">
            <summary>
            Sets style of the borders.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.Borders.Space">
            <summary>
            Sets width of space to maintain between borders and text within borders.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.Borders.IsShadow">
            <summary>
            Sets whether borders are drawn with shadow.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.Borders.IsDefault">
            <summary>
            Gets a value indicating whether format is default.
            </summary>
            <value><c>true</c> if format is default; otherwise,<c>false</c>.</value>>
        </member>
        <member name="M:Spire.Doc.Documents.Borders.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Documents.Borders"/> class.
            </summary>
        </member>
        <member name="M:Spire.Doc.Documents.Borders.Clone">
            <summary>
            Clones self.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Spire.Doc.Documents.ListOverrideStyle.StyleType">
            <summary>
            Gets the type of the style.
            </summary>
            <value>The type of the style.</value>
        </member>
        <member name="M:Spire.Doc.Documents.ListOverrideStyle.Clone">
            <summary>
            Clones itself
            </summary>
            <returns></returns>
        </member>
        <member name="P:Spire.Doc.Documents.IStructureDocument.SDTProperties">
            <summary>
            Get the Sdt properties.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.IStructureDocument.BreakCharacterFormat">
            <summary>
            Get the character format of the break.
            </summary>
        </member>
        <member name="M:Spire.Doc.Documents.IStructureDocument.UpdateDataBinding">
            <summary>
            Updates stuctured documnet tag content with bound data.
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.CommentMark">
            <summary>
            Represents a container for text of a comment. 
            </summary>
            <summary>
            Class represents comment start marker
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.CommentMark.CommentId">
            <summary>
            Gets or sets the id of the comment this mark refers to.
            </summary>
            <value>The comment id.</value>
        </member>
        <member name="P:Spire.Doc.Documents.CommentMark.DocumentObjectType">
            <summary>
            Gets the type of the document object.
            </summary>
            <value>The type of the document object.</value>
        </member>
        <member name="P:Spire.Doc.Documents.CommentMark.Type">
            <summary>
            Gets or sets the type of the CommentMark.
            </summary>
            <value>The type.</value>
        </member>
        <member name="M:Spire.Doc.Documents.CommentMark.#ctor(Spire.Doc.Interface.IDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Documents.CommentMark"/> class.
            </summary>
            <param name="doc">The doc.</param>
        </member>
        <member name="M:Spire.Doc.Documents.CommentMark.#ctor(Spire.Doc.Interface.IDocument,Spire.Doc.Documents.CommentMarkType)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Documents.CommentMark"/> class.
            </summary>
            <param name="doc">The document.</param>
            <param name="type">The comment mark type.</param>
        </member>
        <member name="P:Spire.Doc.Documents.XmlParagraphItem.DocumentObjectType">
            <summary>
            Gets the type of the document object.
            </summary>
            <value>The type of the document object.</value>
        </member>
        <member name="T:Spire.Doc.Documents.Rendering.PageLayoutHandler">
            <summary>
            Represents the method that will handle an event that with event data.
            </summary>
            <param name="sender">The source of the event</param>
            <param name="args">args that contains event data</param>
        </member>
        <member name="T:Spire.Doc.Documents.Rendering.BookmarkLevelHandler">
            <summary>
            Represents the method that will handle an event that with event data.
            </summary>
            <param name="sender">The source of the event</param>
            <param name="args">args that contains event data</param>
        </member>
        <member name="T:Spire.Doc.Documents.Rendering.BookmarkLevelEventArgs">
            <summary>
            BookmarkLevelEventArgs is the class containg event data.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.Rendering.BookmarkLevelEventArgs.BookmarkStart">
            <summary>
            Represents the current bookmark.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.Rendering.BookmarkLevelEventArgs.BookmarkLevel">
            <summary>
            Represents the current bookmark level informations.
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.Rendering.PageLayoutEventArgs">
             <summary>
            Spire.Doc.Documents.Rendering.DocumentLayouter.PageLayoutEventArgs is the class containg event data
             </summary>
        </member>
        <member name="P:Spire.Doc.Documents.Rendering.PageLayoutEventArgs.PageIndex">
            <summary>
            Represents the page number of documents.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.Rendering.PageLayoutEventArgs.PageSetup">
            <summary>
            Represents the document page informations.
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.Rendering.BookmarkLevel">
            <summary>
            Class BookmarkLevel.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.Rendering.BookmarkLevel.ChildObjects">
            <summary>
            Gets the child objects.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.Rendering.BookmarkLevel.Color">
            <summary>
            Gets or Sets the text color of the bookmark when convert to PDF.
            the default value is the "SaddleBrown" color(#FF8B4513).
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.Rendering.BookmarkLevel.Name">
            <summary>
            Gets the name of the bookmark.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.Rendering.BookmarkLevel.Level">
            <summary>
            Gets or sets the level.
            </summary>
            <value>The level.</value>
        </member>
        <member name="P:Spire.Doc.Documents.Rendering.BookmarkLevel.Style">
            <summary>
            Sets the text style of the bookmark when convert to PDF.
            the default value is the Bold.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.Rendering.DrawingContext.PsFontLineSpacing">
            <summary>
            Gets the list of the DrFont line spacing.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.Rendering.DrawingContext.PsFontCaches">
            <summary>
            Gets the list of the DrFont caches.
            </summary>
        </member>
        <member name="M:Spire.Doc.Documents.Rendering.DrawingContext.DrawListTabLeader(Spire.Doc.Documents.Paragraph,Spire.Doc.OldLayout.ParagraphLayoutInfo,System.Single,System.Single,System.Single)">
            <summary> 
            Draws the list tab leader.
            </summary>
            <param name="paragraph">The paragraph.</param>
            <param name="paragraphInfo">The paragraph info.</param>
            <param name="listWidth">Width of the list.</param>
            <param name="xPosition">The x position.</param>
            <param name="yPosition">The y position.</param>        
        </member>
        <member name="M:Spire.Doc.Documents.Rendering.DrawingContext.ConvertImageDPIAbove300(System.Drawing.Image,System.Single,System.Single)">
            <summary>
            Converts the image dpi above 300.
            </summary>
            <param name="img">The Image.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Documents.Rendering.DrawingContext.isMonoSpaceFont(Spire.Doc.Fields.TextRange)">
            <summary>
             check whether the specified font is a monospace font.
             if the width of letter "i" is eqaul to the width of letter "W" and " ",the font is a monospace font. 
            </summary>
            <param name="txtRange"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Documents.Rendering.DrawingContext.GetFontAscentDescent(Spire.Doc.Fields.Symbol)">
            <summary>
            Get the ascent and descent of the symbol.
            </summary>
            <param name="symbol"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Documents.Rendering.DrawingContext.IsEndWhiteTextRange(Spire.Doc.Fields.TextRange)">
            <summary>
            check whether the text of the textrange is white space 
            and the textranges after the textrange are all white space.
            </summary>
            <param name="tr"></param>
            <returns></returns>
        </member>
        <member name="T:Spire.Doc.Documents.Rendering.FontAscentDescent">
            <summary>
            The font ascent and descent struct.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.Rendering.FontAscentDescent.Ascent">
            <summary>
            Gets/Sets the ascent of the font.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.Rendering.FontAscentDescent.Descent">
            <summary>
             Gets/Sets the descent of the font.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.Rendering.FontAscentDescent.Height">
            <summary>
            Gets the height of the font.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.Rendering.FontAscentDescent.LineSpacing">
            <summary>
            Gets/Sets the spacing of the font.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.Rendering.FontAscentDescent.FontSize">
            <summary>
            Gets or sets the size of the font.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.Rendering.FontAscentDescent.FontName">
            <summary>
            Gets or sets the name of the font.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.Rendering.PictureAndTextPositionInfo.Picture">
            <summary>
            Gets/Set picture.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.Rendering.PictureAndTextPositionInfo.LtWidget">
            <summary>
            Gets/Sets layoted widget.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.Rendering.PictureAndTextPositionInfo.UnScaled">
            <summary>
            Gets/Sets picuter scaled.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.Rendering.PictureAndTextPositionInfo.OrderIndex">
            <summary>
            Gets/Sets object order index.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.Rendering.PictureAndTextPositionInfo.IsHeaderFooter">
            <summary>
            Gets/Sets  is headerfooter.
            </summary>
        </member>
        <member name="M:Spire.Doc.Documents.Rendering.PictureAndTextPositionInfo.CompareTo(System.Object)">
            <summary>
            compare to.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Documents.Rendering.PrivateFontFamilys.GetFontFamily(System.Int32)">
            <summary>
            Get font family.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Documents.Rendering.PrivateFontFamilys.GetFontFamily(System.String)">
            <summary>
            Get font family.
            </summary>
            <param name="fontName"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Documents.Rendering.PrivateFontFamilys.GetFontFamily(System.String,System.Collections.Generic.List{System.Int32})">
            <summary>
            Get font family.
            </summary>
            <param name="fontName"></param>
            <param name="localeId"></param>
            <returns></returns>
        </member>
        <member name="P:Spire.Doc.Documents.SdtCheckBox.Checked">
            <summary>
            Indicates if checkbox is in checked state.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.SdtCheckBox.CheckedStateFontName">
            <summary>
            Font name used for checked state.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.SdtCheckBox.CheckedStateCharacterCode">
            <summary>
            Character code used for checked state.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.SdtCheckBox.UnCheckedStateFontName">
            <summary>
            Font name used for unchecked state.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.SdtCheckBox.UnCheckedStateCharacterCode">
            <summary>
            Character code used for unchecked state.
            </summary>
        </member>
        <member name="M:Spire.Doc.Documents.SDTContent.GetOwnerTableCell">
            <summary>
            Get the owner table cell.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Spire.Doc.Documents.SDTInlineContent">
            <summary>
            This element specifies the last known contents of a structured document tag around one or more inline-level structures.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.SDTInlineContent.ChildObjects">
            <summary>
            Gets the child objects.
            </summary>
            <value>The child objects.</value>
        </member>
        <member name="P:Spire.Doc.Documents.SDTInlineContent.DocumentObjectType">
            <summary>
            Gets the type of the entity.
            </summary>
            <value>The type of the entity.</value>
        </member>
        <member name="P:Spire.Doc.Documents.SDTInlineContent.OwnerParagraph">
            <summary>
            Gets the object owner paragraph.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.SDTInlineContent.Text">
            <summary>
             Returns or sets STD text.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.SDTInlineContent.Item(System.Int32)">
            <summary>
            Gets paragraph item by index.
            </summary>
            <value></value>
        </member>
        <member name="M:Spire.Doc.Documents.SDTInlineContent.GetText">
            <summary>
            get text.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Spire.Doc.Documents.SdtControlProperties.Type">
            <summary>
            Get the sdt type.
            </summary>
            <value>The sdt type.</value>
        </member>
        <member name="P:Spire.Doc.Documents.SdtControlProperties.Owner">
            <summary>
            Get or set the owner.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.SdtDropDownListBase.ListItems">
            <summary>
            Provides access to all list items <see cref="T:Spire.Doc.Documents.SdtListItem"/> of this <b>Sdt</b>
            </summary>
        </member>
        <member name="M:Spire.Doc.Documents.SdtPicture.ReplaceImage(System.Drawing.Image)">
            <summary>
             Replaces the image.
            </summary>
            <param name="image">The image.</param>
        </member>
        <member name="P:Spire.Doc.Documents.SDTProperties.Id">
            <summary>
            Gets the id. specifes that the contents of this attribute contains a decimal number.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.SDTProperties.Alias">
            <summary>
            Gets or sets the an alias.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.SDTProperties.Owner">
            <summary>
            Get the owner.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.SDTProperties.IsPlainTextControl">
            <summary>
            Gets is plain text control.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.SDTProperties.TabIndex">
            <summary>
            Gets or sets the a value specifies that the contents of this attribute contains a positive decimal number.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.SDTProperties.Tag">
            <summary>
            Gets or sets the a value specifies that its contents contain a string.
            </summary>
        </member>
        <!-- 对于成员“P:Spire.Doc.Documents.SDTProperties.IsDataBindingOfCoreProperties”忽略有格式错误的 XML 注释 -->
        <member name="P:Spire.Doc.Documents.SDTProperties.LockSettings">
            <summary>
            Gets or sets a value that specifies locking behaviors
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.SDTProperties.IsShowingPlaceHolder">
            <summary>
            Gets or sets a value indicating whether this instance is showing place holder.
            </summary>       
        </member>
        <member name="P:Spire.Doc.Documents.SDTProperties.IsTemporary">
            <summary>
            Gets or sets a value indicating whether remove SDT when contents are edited.
            </summary> 
        </member>
        <member name="P:Spire.Doc.Documents.SDTProperties.Appearance">
            <summary>
            Gets or sets a value for the border appearance type.
            </summary>
        </member>
        <member name="M:Spire.Doc.Documents.SDTProperties.UpdataBoundContent(Spire.Doc.Document)">
            <summary>
            Updates structured documnet tag content with bound data.
            </summary>
            <param name="customXmlParts"></param>
        </member>
        <member name="M:Spire.Doc.Documents.SDTProperties.SetDataBindingXPathWithFirst(Spire.Doc.DocumentObject,System.Xml.XmlNode,System.String)">
            <summary>
            Sets the data binding XPath.
            </summary>
            <param name="owner">The owner.</param>
            <param name="xmlNode">The XmlNode.</param>
        </member>
        <member name="M:Spire.Doc.Documents.SDTProperties.ReplaceChildDataBindingXPath(Spire.Doc.DocumentObject,System.String,System.String)">
            <summary>
            Replaces the chid data binding XPath.
            </summary>
            <param name="owner"></param>
            <param name="oldXPath"></param>
            <param name="newXPath"></param>
        </member>
        <member name="M:Spire.Doc.Documents.SDTProperties.GetXPathByNode(System.Xml.XmlNode)">
            <summary>
            Gets the XPath by node.
            </summary>
            <param name="node">The node.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Documents.SDTProperties.InsertContent(Spire.Doc.DocumentObject,System.String)">
            <summary>
            Inserts content inside sdt. Verifies
            </summary>
            <param name="sdt"></param>
            <param name="newText"></param>
        </member>
        <member name="M:Spire.Doc.Documents.SDTProperties.ReplaceParagraphItemOfSdtTag(Spire.Doc.Documents.Paragraph,Spire.Doc.Fields.ParagraphBase)">
            <summary>
            Replaces the Paragraph item of SDT tag.
            </summary>
            <param name="para">The para.</param>
            <param name="paraBase">The paragraph item.</param>
        </member>
        <member name="M:Spire.Doc.Documents.SDTProperties.OnChange">
            <summary>
            Action on format change.
            </summary>
        </member>
        <member name="M:Spire.Doc.Documents.SDTProperties.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Spire.Doc.Documents.SdtText.IsMultiline">
            <summary>
            Allow Soft Line Breaks. Specifies whether soft line breaks can be added to 
            the contents of this structured document tag when this document is modified. 
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.StructureDocumentTag.SDTContent">
            <summary>
            Gets the a value specifies the last known contents of a structured document tag around one or more block-level structures.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.StructureDocumentTag.SDTProperties">
            <summary>
            Gets the structured document tag properties.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.StructureDocumentTag.BreakCharacterFormat">
            <summary>
            Gets character format for the break symbol.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.StructureDocumentTag.DocumentObjectType">
            <summary>
            Gets the type of the entity.
            </summary>
            <value>The type of the entity.</value>
        </member>
        <member name="P:Spire.Doc.Documents.StructureDocumentTag.ChildObjects">
            <summary>
            Gets the child entities.
            </summary>
            <value>The child entities.</value>
        </member>
        <member name="M:Spire.Doc.Documents.StructureDocumentTag.#ctor(Spire.Doc.Document)">
            <summary>
            Initializes a new instance of the Block-Level structured document tag class.
            </summary>
            <param name="doc">The doc.</param>
        </member>
        <member name="M:Spire.Doc.Documents.StructureDocumentTag.GetBodyRegionCollection">
            <summary>
            Gets the region collecton of the body.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Spire.Doc.Documents.StructureDocumentTagRow.DocumentObjectType">
            <summary>
             Gets the type of the entity.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.StructureDocumentTagRow.SDTProperties">
            <summary>
            Gets the structured document tag properties.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.StructureDocumentTagRow.BreakCharacterFormat">
            <summary>
            Gets character format for the break symbol.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.StructureDocumentTagRow.ChildObjects">
            <summary>
            Gets the child object.
            </summary>
            <value>The child object.</value>
        </member>
        <member name="P:Spire.Doc.Documents.StructureDocumentTagRow.Cells">
            <summary>
            Returns or sets cell collection.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.StructureDocumentTagRow.SdtRows">
            <summary>
            Gets the inner structure documnet rows.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.StructureDocumentTagRow.OwnerTable">
            <summary>
            Gets the owner table.
            </summary>
            <value>The owner table.</value>        
        </member>
        <member name="M:Spire.Doc.Documents.StructureDocumentTagRow.#ctor(Spire.Doc.Table)">
            <summary>
            Initializes a new instance of the Block-Level structured document tag row class.
            </summary>
            <param name="ownerTable">The owner table.</param>
        </member>
        <member name="P:Spire.Doc.Documents.StructureDocumentTagCell.DocumentObjectType">
            <summary>
            Gets the type of the entity.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.StructureDocumentTagCell.SDTProperties">
            <summary>
            Gets the structured document tag properties.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.StructureDocumentTagCell.BreakCharacterFormat">
            <summary>
            Gets character format for the break symbol.
            </summary>
        </member>
        <member name="M:Spire.Doc.Documents.StructureDocumentTagCell.#ctor(Spire.Doc.TableRow)">
            <summary>
            Initializes a new instance of the Block-Level structured document tag cell class.
            </summary>
            <param name="doc">The ownerRow.</param>
        </member>
        <member name="P:Spire.Doc.Documents.StructureDocumentTagInline.SDTContent">
            <summary>
            Gets a valie specifies the last known contents of a structured document tag around one or more inline-level structures.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.StructureDocumentTagInline.SDTProperties">
            <summary>
            Gets the structured document tag properties.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.StructureDocumentTagInline.BreakCharacterFormat">
            <summary>
            Gets character format for the break symbol.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.StructureDocumentTagInline.DocumentObjectType">
            <summary>
            Gets the type of the entity.
            </summary>
            <value>The type of the entity.</value>
        </member>
        <member name="P:Spire.Doc.Documents.StructureDocumentTagInline.ChildObjects">
            <summary>
            Gets the child entities.
            </summary>
            <value>The child entities.</value>
        </member>
        <member name="M:Spire.Doc.Documents.StructureDocumentTagInline.#ctor(Spire.Doc.Document)">
            <summary>
            Initializes a new instance of the Inline-Level structured document tag class.
            </summary>
            <param name="doc">The doc.</param>
        </member>
        <member name="T:Spire.Doc.Documents.SdtType">
            <summary>
            Specifies the type of a structured document tag (SDT) Element.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.SdtType.None">
            <summary>
            No type is assigned to the SDT.
            If no type element is specified, the SDT structured document tag should be a rich text box.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.SdtType.RichText">
            <summary>
            The SDT represents a rich text box when displayed in the document.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.SdtType.Bibliography">
            <summary>
            The SDT represents a bibliography entry. 
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.SdtType.Citation">
            <summary>
            The SDT represents a citation.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.SdtType.ComboBox">
            <summary>
            The SDT represents a combo box when displayed in the document.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.SdtType.DropDownList">
            <summary>
            The SDT represents a drop down list when displayed in the document.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.SdtType.Picture">
            <summary>
            The SDT represents a picture when displayed in the document.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.SdtType.Text">
            <summary>
            The SDT represents a plain text box when displayed in the document.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.SdtType.Equation">
            <summary>
            The SDT represents an equation.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.SdtType.DatePicker">
            <summary>
            The SDT represents a date picker when displayed in the document.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.SdtType.BuildingBlockGallery">
            <summary>
            The SDT represents a building block gallery type.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.SdtType.DocPartObj">
            <summary>
            The SDT represents a document part type.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.SdtType.Group">
            <summary>
            The SDT represents a restricted grouping when displayed in the document.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.SdtType.CheckBox">
            <summary>
            The SDT represents a checkbox when displayed in the document.
            </summary>
        </member>
        <member name="M:Spire.Doc.Documents.ParagraphStyle.ApplyDcoDefauts">
            <summary>
            Apply the document default paragraph format and character format. 
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.Style.StyleId">
            <summary>
            Gets or sets the style id.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.Style.IsCustomStyle">
            <summary>
            Gets or sets a value indicating whether this instance is custom style.
            </summary>
            <value>if this instance is custom, set to <c>true</c>.</value>
        </member>
        <member name="P:Spire.Doc.Documents.ListLevel.NumberSufix">
            <summary>
            Gets or sets suffix pattern for numbered level.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.ListLevel.PatternType">
            <summary>
            Gets or sets list numbering type.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.ListLevel.CharacterFormat">
            <summary>
            Gets character format of list symbol.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.ListLevel.ParagraphFormat">
            <summary>
            Gets paragraph format of list level.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.ListLevel.FollowCharacter">
            <summary>
            Gets or Sets the type of character following the number text for the paragraph.
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.ListLevel.NoPlaceholder">
            <summary>
            [MS-DOC] 2.9.149 LVL
            </summary>
        </member>
        <member name="P:Spire.Doc.Documents.DigitToChnText.Type">
            <summary>
            Gets/Sets digit type.
            </summary>
        </member>
        <member name="M:Spire.Doc.Documents.DigitToChnText.Convert(System.String)">
            <summary>
            
            </summary>
            <param name="strDigit"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Documents.DigitToChnText.GetChicago(System.String)">
            <summary>
            get chicago text.
            </summary>
            <param name="strDigit"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Documents.DigitToChnText.GetIdeographTraditional(System.String)">
            <summary>
            Get ideograph traditional text.
            </summary>
            <param name="strDigit"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Documents.DigitToChnText.GetIdeographZodiac(System.String)">
            <summary>
            Get ideograph zodiac text.
            </summary>
            <param name="strDigit"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Documents.DigitToChnText.GetDecimalEnclosedCircle(System.String)">
            <summary>
            Get decimal enclosed circle text.
            </summary>
            <param name="strDigit"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Documents.DigitToChnText.GetDecimalEnclosedFullstop(System.String)">
            <summary>
            Get decimal enclosed fullstop text.
            </summary>
            <param name="strDigit">the number.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Documents.DigitToChnText.GetIdeographEnclosedCircle(System.String)">
            <summary>
            Get ideograph enclosed circle text.
            </summary>
            <param name="strDigit"></param>
            <returns></returns>
        </member>
        <member name="T:Spire.Doc.Documents.ShapeType">
            <summary>
            Specifies type of the Shape.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ShapeType.Group">
            <summary>
            the shape is a group shape
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ShapeType.Image">
            <summary>
            The shape is an image.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ShapeType.TextBox">
            <summary>
             The shape is a textbox.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ShapeType.OleObject">
            <summary>
            The shape is an OLE object.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ShapeType.OleControl">
            <summary>
            The shape is an ActiveX control.
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.TextWrappingStyle">
            <summary>
            Specify text wrapping style for object.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.TextWrappingStyle.Inline">
            <summary>
            Inline text wrapping style
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.TextWrappingStyle.TopAndBottom">
            <summary>
            TopAndBottom text wrapping style
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.TextWrappingStyle.Square">
            <summary>
            Square text wrapping style
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.TextWrappingStyle.InFrontOfText">
            <summary>
            No text wrapping style
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.TextWrappingStyle.Tight">
            <summary>
            Tight text wrapping style
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.TextWrappingStyle.Through">
            <summary>
            Through text wrapping style
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.TextWrappingStyle.Behind">
            <summary>
            Behind text wrapping style
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.DocumentObjectType">
            <summary>
            Specifies the type of a Document object type.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.DocumentObjectType.Section">
            <summary>
            The text bodies
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.DocumentObjectType.Paragraph">
            <summary>
            The text body items
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.DocumentObjectType.TextRange">
            <summary>
            The paragraph items
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.DocumentObjectType.Break">
            Tab,
        </member>
        <member name="T:Spire.Doc.Documents.HeaderFooterType">
            <summary>
            Specifies type of the Header/Footer.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.HeaderFooterType.HeaderEven">
            <summary>
            Header for even numbered pages.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.HeaderFooterType.HeaderOdd">
            <summary>
            Header for odd numbered pages.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.HeaderFooterType.FooterEven">
            <summary>
            Footer for even numbered pages.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.HeaderFooterType.FooterOdd">
            <summary>
            Footer for odd numbered pages.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.HeaderFooterType.HeaderFirstPage">
            <summary>
            Header for the first page of the section. 
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.HeaderFooterType.FooterFirstPage">
            <summary>
            Footer for the first page of the section. 
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.StyleType">
            <summary>
            Specifies type of the Style.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.StyleType.ParagraphStyle">
            <summary>
            The style is a paragraph style. 
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.StyleType.CharacterStyle">
            <summary>
            The style is a character style. 
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.StyleType.TableStyle">
            <summary>
            The style is a table style.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.StyleType.ListStyle">
            <summary>
            The style is a list style.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.StyleType.OtherStyle">
            <summary>
            The style is other kind of style. 
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.ParagraphItemType">
            <summary>
            Specifies type of the ParagraphBase.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ParagraphItemType.TextRange">
            <summary>
            ParagraphBase is a text.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ParagraphItemType.Picture">
            <summary>
            ParagraphBase is a picture.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ParagraphItemType.Field">
            <summary>
            ParagraphBase is a field.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ParagraphItemType.FieldMark">
            <summary>
            Paragraph item is field mark.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ParagraphItemType.MergeField">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ParagraphItemType.FormField">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ParagraphItemType.CheckBox">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ParagraphItemType.TextFormField">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ParagraphItemType.DropDownFormField">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ParagraphItemType.SeqField">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ParagraphItemType.EmbedField">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ParagraphItemType.ControlField">
            <summary>
            Paragraph item is form control field.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ParagraphItemType.BookmarkStart">
            <summary>
            ParagraphBase is a start of bookmark.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ParagraphItemType.BookmarkEnd">
            <summary>
            ParagraphBase is a end of bookmark.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ParagraphItemType.PermissionStart">
            <summary>
            ParagraphBase is a start of Permission
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ParagraphItemType.PermissionEnd">
            <summary>
            ParagraphBase is a end of Permission.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ParagraphItemType.ShapeObject">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ParagraphItemType.Comment">
            <summary>
            ParagraphBase is a comment.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ParagraphItemType.CommentMark">
            <summary>
            Paragraph item is comment mark.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ParagraphItemType.Footnote">
            <summary>
            ParagraphBase is a footnote.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ParagraphItemType.TextBox">
            <summary>
            ParagraphBase is a textbox. 
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ParagraphItemType.Break">
            <summary>
            PragraphItem is a break.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ParagraphItemType.Symbol">
            <summary>
            
            </summary>    
        </member>
        <member name="F:Spire.Doc.Documents.ParagraphItemType.TOC">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ParagraphItemType.OleObject">
            <summary>
            
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.PageOrientation">
            <summary>
            Specifies orientation of the page.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.PageOrientation.Portrait">
            <summary>
            Portrait page orientation.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.PageOrientation.Landscape">
            <summary>
            Landscape page orientation.
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.PageAlignment">
            <summary>
            Specifies alignment of the text on a page.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.PageAlignment.Top">
            <summary>
            Text is aligned at the top of the page.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.PageAlignment.Middle">
            <summary>
            Text is aligned at the middle of the page.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.PageAlignment.Justified">
            <summary>
            Text is spanned to fill the page. 
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.PageAlignment.Bottom">
            <summary>
            Text is aligned at the bottom of the page.
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.VerticalAlignment">
            <summary>
            Specifies type of the vertical alignment.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.VerticalAlignment.Top">
            <summary>
            Specifies top alignment.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.VerticalAlignment.Middle">
            <summary>
            Specifies middle alignment.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.VerticalAlignment.Bottom">
            <summary>
            Specifies bottom alignment.
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.HorizontalAlignment">
            <summary>
            Specifies type of the horizontal alignment.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.HorizontalAlignment.Left">
            <summary>
            Specifies alignment to the left. 
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.HorizontalAlignment.Center">
            <summary>
            Specifies alignment to the center. 
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.HorizontalAlignment.Right">
            <summary>
            Specifies alignment to the right. 
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.HorizontalAlignment.Justify">
            <summary>
            Specifies alignment to both left and right. 
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.HorizontalAlignment.Distribute">
            <summary>
            Specifies that the text shall be justified between both
            of the text margins in the document.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.HorizontalAlignment.ThaiDistribute">
            <summary>
            Specifies that the text shall be justified with an optimization for Thai.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.HorizontalAlignment.HightKashida">
            <summary>
            Specifies that the kashida length for text in the current paragraph
            shall be extended to its wides possible length.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.HorizontalAlignment.LowKashida">
            <summary>
            Specifies that the kashida length for text in the current paragraph
            shall be exended to a slightly longer length.
            This setting shall also be applied to Arabic text when the both setting is applied.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.HorizontalAlignment.MediumKashida">
            <summary>
            Specifies that the kashida length for text in the current paragraph
            shall be extended to a medium length determined by the consumer.
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.RowAlignment">
            <summary>
            Specifies type of the horizontal alignment.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.RowAlignment.Left">
            <summary>
            Specifies alignment to the left. 
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.RowAlignment.Center">
            <summary>
            Specifies alignment to the center. 
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.RowAlignment.Right">
            <summary>
            Specifies alignment to the right. 
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.UnderlineStyle">
            <summary>
            Specifies style of the underline.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.UnderlineStyle.None">
            <summary>
            No underlining.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.UnderlineStyle.Single">
            <summary>
            Normal single underline. 
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.UnderlineStyle.Words">
            <summary>
            Underline words only.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.UnderlineStyle.Double">
            <summary>
            Double underline.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.UnderlineStyle.Dotted">
            <summary>
            Dotted underline.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.UnderlineStyle.Thick">
            <summary>
            Heavy underline.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.UnderlineStyle.Dash">
            <summary>
            Dashed underline.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.UnderlineStyle.DotDash">
            <summary>
            Dot-dash underline.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.UnderlineStyle.DotDotDash">
            <summary>
            Dot-dot-dash underline.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.UnderlineStyle.Wavy">
            <summary>
            Wavy underline.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.UnderlineStyle.DottedHeavy">
            <summary>
            Heavy dotted underline.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.UnderlineStyle.DashHeavy">
            <summary>
            Heavy dashed underline.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.UnderlineStyle.DotDashHeavy">
            <summary>
            Heavy dot-dash underline.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.UnderlineStyle.DotDotDashHeavy">
            <summary>
            Heavy dot-dot-dash underline.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.UnderlineStyle.WavyHeavy">
            <summary>
            Heavy wavy underline.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.UnderlineStyle.DashLong">
            <summary>
            Long-dash underline.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.UnderlineStyle.WavyDouble">
            <summary>
            Wavy double underline.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.UnderlineStyle.DashLongHeavy">
            <summary>
            Heavy long-dash underline.
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.SubSuperScript">
            <summary>
            Specifies type of the SubSuperScript.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.SubSuperScript.None">
            <summary>
            No sub- or superscript.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.SubSuperScript.SuperScript">
            <summary>
            Specified superscript format.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.SubSuperScript.SubScript">
            <summary>
            Specified subscript format.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.SubSuperScript.BaseLine">
            <summary>
            Specified baseline format.
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.Emphasis">
            <summary>
            Specifies the emphasis mark type.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.Emphasis.None">
            <summary>
            No Emphasis Mark
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.Emphasis.Dot">
            <summary>
            Dot Emphasis Mark Above Characters
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.Emphasis.CommaAbove">
            <summary>
            Comma Emphasis Mark Above Characters
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.Emphasis.CircleAbove">
            <summary>
            Circle Emphasis Mark Above Characters
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.Emphasis.DotBelow">
            <summary>
            Dot Emphasis Mark Below Characters
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.BorderStyle">
            <summary>
            Specifies style of the border line.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.BorderStyle.TwistedLines1">
            <summary>
            
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.SectionBreakType">
            <summary>
            Specifies type of the section break code.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.SectionBreakType.NoBreak">
            <summary>
            The section starts on the same page.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.SectionBreakType.NewColumn">
            <summary>
            The section starts from a new column.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.SectionBreakType.NewPage">
            <summary>
            The section starts from a new page. 
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.SectionBreakType.EvenPage">
            <summary>
            The section starts on a new even page. 
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.SectionBreakType.Oddpage">
            <summary>
            The section starts on a new odd page. 
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.HyperlinkType">
            <summary>
            Specifies type of the link. 
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.HyperlinkType.None">
            <summary>
            No links. 
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.HyperlinkType.FileLink">
            <summary>
            Links to another file. 
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.HyperlinkType.WebLink">
            <summary>
            Links to a web page. 
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.HyperlinkType.EMailLink">
            <summary>
            Link to e-mail.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.HyperlinkType.Bookmark">
            <summary>
            Bookmark link.
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.ListType">
            <summary>
            Specifies type of the list format.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ListType.Numbered">
            <summary>
            Specifies numbered list. 
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ListType.Bulleted">
            <summary>
            Specifies bulleted list.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ListType.NoList">
            <summary>
            No numbering.
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.ListPatternType">
            <summary>
            Specifies type of the list numbering format.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ListPatternType.Arabic">
            <summary>
            Specifies default numbering format.
            Arabic numbering (1, 2, 3, ...)
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ListPatternType.UpRoman">
            <summary>
            Specifies UppRoman numbering format.
            Upper case Roman (I, II, III, ...)
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ListPatternType.LowRoman">
            <summary>
            Specifies LowRoman numbering format.
             Lower case Roman (i, ii, iii, ...)
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ListPatternType.UpLetter">
            <summary>
            Specifies UpLetter numbering format.
            Upper case Letter (A, B, C, ...)
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ListPatternType.LowLetter">
            <summary>
            Specifies LowLetter numbering format.
             Lower case letter (a, b, c, ...)
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ListPatternType.Ordinal">
            <summary>
            Specifies Ordinal numbering format.
            Ordinal (1st, 2nd, 3rd, ...)
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ListPatternType.CardinalText">
            <summary>
            Specifies Cardinal Text numbering format.
             Numbered (One, Two, Three, ...)
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ListPatternType.OrdinalText">
            <summary>
            Specifies Ordinal Text numbering format.
            Ordinal (text) (First, Second, Third, ...)
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ListPatternType.Chicago">
            <summary>
            Chicago manual of style.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ListPatternType.DecimalFullWidth">
            <summary>
            Specifies that the sequence shall consist of full-width Arabic numbering.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ListPatternType.DecimalHalfWidth">
            <summary>
            Specifies that the sequence shall consist of half-width Arabic numbering.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ListPatternType.Hebrew1">
            <summary>
            Specifies that the sequence shall consist of Hebrew letters from the set listed below.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ListPatternType.ArabicAlpha">
            <summary>
            Specifies that the sequence shall consist of one or more occurrences of 
            a single character int the Arabic alphabet from the set listed below. 
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ListPatternType.Hebrew2">
            <summary>
            Specifies that the sequence shall consist of the Hebrew alphabet.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ListPatternType.ArabicAbjad">
            <summary>
            Specifies that the sequence shall consist of one or more occurrences of 
            a single ascending Abjad numerall from the set listed below. 
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ListPatternType.JapaneseCounting">
            <summary>
            Japanese Counting System.
            Specifies that the sequence shall consist of sequential numbers from
            the Japanese counting system.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ListPatternType.JapaneseLegal">
            <summary>
            Japanese Legal Numbering.
            Specifies that the sequence shall consist of sequential numbers from
            the Japanese legal counting system.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ListPatternType.JapaneseDigitalTenThousand">
            <summary>
            Japanese Digital Ten Thousand Counting System.
            Specifies that the sequence shall consist of sequential numbers from
            the Japanese digital the thousand counting system.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ListPatternType.DecimalEnclosedCircle">
            <summary>
            Decimal Numbers Enclosed in a Circle.
            Specifies that the sequence shall consist of sequential numbering enclosed
            in a circle,using the enclosed character.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ListPatternType.LeadingZero">
            <summary>
            Specifies LeadingZero numbering format.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ListPatternType.Bullet">
            <summary>
            Specifies Bullet numbering format.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ListPatternType.DecimalEnclosedFullstop">
            <summary>
            Decimal numbers followed by a period.
            Specifies that the sequence shall consist of decimal numbering followed
            by a period,using the appropriate character,as described below.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ListPatternType.DecimalEnclosedParen">
            <summary>
            Decimal numbers enclosed in parenthesis.
            Specifies that the sequence shall consist of decimal numbering enclosed in parentheses.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ListPatternType.DecimalEnclosedCircleChinese">
            <summary>
            Identical to DecimalEnclosedCircle
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ListPatternType.KoreanDigital">
            <summary>
            Korean Digital Counting System.
            Specifies that the sequence shall consist of sequential numbers from
            the Korean digital counting system.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ListPatternType.KoreanCounting">
            <summary>
            Korean Counting System.
            Specifies that the sequence shall consist of sequential numbers from
            the Korean counting system.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ListPatternType.KoreanLegal">
            <summary>
            Korean Legal numbering.
            Specifies that the sequence shall consist of sequential numbers from
            the Korean legal numbering system.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ListPatternType.KoreanDigital2">
            <summary>
            Korean Digital Counting System Alternate.
            Specifies that the sequence shall consist of sequential numbers from
            the Korean digital counting system. 
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ListPatternType.AiueoFullWidth">
            <summary>
            Specifies that the sequence shal consist of one or more occurrences of a single
            full-width katakana character,in the traditonal a-i-u-e-o order.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ListPatternType.Aiueo">
            <summary>
            <para>Specifies that the sequence shall consist of one or more occurrences of a single </para>
            <para>half-width katakana character from the set listed below, in the traditional</para>
            <para>a-i-u-e-o order.</para>
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ListPatternType.Iroha">
            <summary>
            Specifies that the sequence shall consist of the iroha.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ListPatternType.IdeographDigital">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ListPatternType.IrohaFullWidth">
            <summary>
            Specifies that the sequence shall consist of the full-width forms of the iroha.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ListPatternType.IdeographTraditional">
            <summary>
            Specifies that the sequence shall consist of sequential numerical traditonal ideographs.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ListPatternType.IdeographZodiac">
            <summary>
             Specifies that the sequence shall consist of sequential numerical zodiac ideographs.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ListPatternType.IdeographEnclosedCircle">
            <summary>
            Specifies that the sequence shall consist of sequential numerical ideographs.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ListPatternType.IdeographZodiacTraditional">
            <summary>
            Specifies that the sequence shall consist of sequential traditional zodiac ideographs.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ListPatternType.TaiwaneseCounting">
             <summary>
            Specifies that the sequence shall consist of sequential numbers from the Taiwanese counting system.
             </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ListPatternType.IdeographLegalTraditional">
            <summary>
            Sperifies that the sequence shall consist of sequential numerical traditional legal ideographs.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ListPatternType.TaiwaneseCountingThousand">
            <summary>
            Specifies that the sequence shall consist of sequential numbers from the Taiwanese counting thousand system.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ListPatternType.TaiwaneseDigital">
            <summary>
            Specifies that the sequence shall consist of sequential numbers from the Taiwanese digital counting system.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ListPatternType.ChineseCounting">
            <summary>
            Specifies that the sequence shall consist of one or more occurrences of
            a single ascending number from the chinese counting system.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ListPatternType.ChineseLegalSimplified">
            <summary>
            Specifies that the sequence shall consist of one or more occurrences of
            a single sequential number from the Chiness simplified legal format.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ListPatternType.ChineseCountingThousand">
            <summary>
            Specifies that the sequence shall consist of one or more occurrences of
            a single sequential number from the Chiness counting thousand system.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ListPatternType.Special">
            <summary>
            IsSpecial numbering format.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ListPatternType.None">
            <summary>
            Specifies None numbering format.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ListPatternType.CustomType">
            <summary>
            Specifies custom format.
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.CellMerge">
            <summary>
            Specifies the way of cell merging.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CellMerge.None">
            <summary>
            No merge.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CellMerge.Start">
            <summary>
            Merge starts from this cell.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CellMerge.Continue">
            <summary>
            Merge is continued.
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.HorizontalOrigin">
            <summary>
            Specify object's horizontal origin 
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.VerticalOrigin">
            <summary>
            Specify vertical origin of the object
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ShapeLineStyle.Single">
            <summary>
            Single line.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ShapeLineStyle.Double">
            <summary>
            Double lines of equal width.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ShapeLineStyle.ThickThin">
            <summary>
            Double lines, one thick, one thin.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ShapeLineStyle.ThinThick">
            <summary>
            Double lines, one thin, one thick.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ShapeLineStyle.Triple">
            <summary>
            Three lines, thin, thick, thin.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ShapeLineStyle.Default">
            <summary>
            Default value is <see cref="F:Spire.Doc.Documents.ShapeLineStyle.Single"/>.
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.TextBoxLineStyle">
            <summary>
            Specify object's line style
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.TextBoxLineStyle.Simple">
            <summary>
            Single line (of width lineWidth)
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.TextBoxLineStyle.Double">
            <summary>
            Double lines of equal width
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.TextBoxLineStyle.ThickThin">
            <summary>
            Double lines, one thick, one thin
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.TextBoxLineStyle.ThinThick">
            <summary>
            Double lines, reverse order
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.TextBoxLineStyle.Triple">
            <summary>
            Three lines, thin, thick, thin
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.TextWrappingType">
            <summary>
            Specify text wrapping type for textbox.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.TextWrappingType.Both">
            <summary>
            Wrap text both sides
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.TextWrappingType.Left">
            <summary>
            Wrap text left side
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.TextWrappingType.Right">
            <summary>
            Wrap text right side
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.TextWrappingType.Largest">
            <summary>
            Wrap text largest
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.TextWrappingType.Default">
            <summary>
            The default.
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.TabJustification">
            <summary>
            Specifies the tab justification.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.TabJustification.Left">
            <summary>
            Left tab.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.TabJustification.Centered">
            <summary>
            Centered tab.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.TabJustification.Right">
            <summary>
            Right tab.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.TabJustification.Decimal">
            <summary>
            Decimal tab.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.TabJustification.Bar">
            <summary>
            Bar.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.TabJustification.List">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.TabJustification.Clear">
            <summary>
            Clears any tab stop in this position.
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.TabLeader">
            <summary>
            Specifies Tab leader.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.TabLeader.NoLeader">
            <summary>
            No leader.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.TabLeader.Dotted">
            <summary>
            Dotted leader.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.TabLeader.Hyphenated">
            <summary>
            Hyphenated leader.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.TabLeader.Single">
            <summary>
            Single line leader. 
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.TabLeader.Heavy">
            <summary>
            Heavy line leader.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.TabLeader.MiddleDot">
            <summary>
            The leader line is made up from middle-dots.
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.TabRelativeToPosition">
            <summary>
            Specifies the possible extents which can be used to calculate the absolute positioning of the positional tab character.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.TabRelativeToPosition.Indent">
            <summary>
            Specifies that the absolute positioning of the tab shall be relative to the indents.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.TabRelativeToPosition.Margin">
            <summary>
            Specifies that the absolute positioning of the tab shall be relative to the margins.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.TabRelativeToPosition.Default">
            <summary>
            Defaults to <see cref="F:Spire.Doc.Documents.TabRelativeToPosition.Indent"/>
            </summary>
            <remarks>This default is AW specific, it is not defined in open xml specification.</remarks>
        </member>
        <member name="T:Spire.Doc.Documents.TableRowHeightType">
            <summary>
            Specifies the table row height type.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.TableRowHeightType.AtLeast">
            <summary>
            "At least" table row height type
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.TableRowHeightType.Exactly">
            <summary>
            " Exactly" table row height type
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.TableRowHeightType.Auto">
            <summary>
            The height will grow automatically to accommodate all text inside an object.
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.ListNumberAlignment">
            <summary>
            Number alignments
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ListNumberAlignment.Left">
            <summary>
            Number aligned left
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ListNumberAlignment.Center">
            <summary>
            Number is centered 
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ListNumberAlignment.Right">
            <summary>
            Number aligned right
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.FollowCharacterType">
            <summary>
            The type of character following the number text for the paragraph
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.FollowCharacterType.Tab">
            <summary>
            List levels number or bullet is followed by tab
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.FollowCharacterType.Space">
            <summary>
            List levels number or bullet is followed by space
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.FollowCharacterType.Nothing">
            <summary>
            Follow character isn't used  
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.PictureColor">
            <summary>
            Picture color types.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.PictureColor.Automatic">
            <summary>
            Picture automatic color.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.PictureColor.Grayscale">
            <summary>
            Picture grayscale color.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.PictureColor.BlackAndWhite">
            <summary>
            Picture black and white color.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.PictureColor.Washout">
            <summary>
            Picture washout color.
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.BreakType">
            <summary>
            Document's break type.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.BreakType.PageBreak">
            <summary>
            Page break type.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.BreakType.ColumnBreak">
            <summary>
            Column break type.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.BreakType.LineBreak">
            <summary>
            Line break type.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.LineBreakClear.None">
            <summary>
            Restart On NextLine.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.LineBreakClear.Left">
            <summary>
            Restart In Next TextRegion Unblocked on the Left.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.LineBreakClear.Right">
            <summary>
            Restart In Next TextRegion Unblocked on the Right.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.LineBreakClear.All">
            <summary>
            Restart On Next Full Line.
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.WatermarkType">
            <summary>
            Specifies the watermark type.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.WatermarkType.NoWatermark">
            <summary>
            No watermark.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.WatermarkType.PictureWatermark">
            <summary>
            Picture watermark.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.WatermarkType.TextWatermark">
            <summary>
            Text watermark.
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.WatermarkLayout">
            <summary>
            Specifies WatermarkLayout.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.WatermarkLayout.Diagonal">
            <summary>
            Diagonal watermark layout.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.WatermarkLayout.Horizontal">
            <summary>
            Horizontal watermark layout.
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.BackgroundType">
            <summary>
            Specifies BackgroundType
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.BackgroundType.NoBackground">
            <summary>
            No background fill effect.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.BackgroundType.Gradient">
            <summary>
            Gradient fill effect.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.BackgroundType.Picture">
            <summary>
            Picture fill effect.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.BackgroundType.Texture">
            <summary>
            Texture fill effect.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.BackgroundType.Color">
            <summary>
            Color fill effect.
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.GradientShadingStyle">
            <summary>
            Shading styles for Gradient background effect. 
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.GradientShadingStyle.Horizontal">
            <summary>
            Horizontal shading style.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.GradientShadingStyle.Vertical">
            <summary>
            Vertical shading style.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.GradientShadingStyle.DiagonalUp">
            <summary>
            Diagonal Up shading style.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.GradientShadingStyle.DiagonalDown">
            <summary>
            Diagonal Down shading style.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.GradientShadingStyle.FromCorner">
            <summary>
            FromCorner shading style.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.GradientShadingStyle.FromCenter">
            <summary>
            From Center shading style.
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.GradientShadingVariant">
            <summary>
            Shading variants for background gradient.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.GradientShadingVariant.ShadingUp">
            <summary>
            Shading in the upper part.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.GradientShadingVariant.ShadingDown">
            <summary>
            Shading in the lower part.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.GradientShadingVariant.ShadingOut">
            <summary>
            Shading in upper and lower parts.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.GradientShadingVariant.ShadingMiddle">
            <summary>
            Shading in the middle.
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.FormFieldType">
            <summary>
            Specifies the type of a form field.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.FormFieldType.TextInput">
            <summary>
            Text form field.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.FormFieldType.CheckBox">
            <summary>
            Check box form field.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.FormFieldType.DropDown">
            <summary>
            Drop-down form field.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.FormFieldType.Unknown">
            <summary>
            Unknown form field.
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.CheckBoxSizeType">
            <summary>
            Defines checkBox size type.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CheckBoxSizeType.Auto">
            <summary>
            Auto check box size.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CheckBoxSizeType.Exactly">
            <summary>
            Exact check box size.
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.TextFormat">
            <summary>
            Defines TextFormat
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.TextFormat.None">
            <summary>
            No text formatting
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.TextFormat.Uppercase">
            <summary>
            Uppercase text formatting.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.TextFormat.Lowercase">
            <summary>
            Lowercase text formatting.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.TextFormat.FirstCapital">
            <summary>
            First capital text formatting.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.TextFormat.Titlecase">
            <summary>
            Title case text formatting.
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.TextAlignment">
            <summary>
            A 16-bit unsigned integer that specifies vertical font alignment for East Asian languages.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.TextAlignment.Top">
            <summary>
            This value specifies that characters are aligned based on the top of each character.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.TextAlignment.Center">
            <summary>
            This value specifies that characters are centered on the line.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.TextAlignment.Baseline">
            <summary>
            This value specifies that characters are aligned based on their baseline. 
            This is how standard Latin text is displayed.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.TextAlignment.Bottom">
            <summary>
            This value specifies that characters are aligned based on the bottom of each character.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.TextAlignment.Auto">
            <summary>
            This value specifies that alignment is automatically determined by the application.
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.NumberFormat">
            <summary>
            Defines Number format.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.NumberFormat.None">
            <summary>
            No formatting 
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.NumberFormat.WholeNumber">
            <summary>
            Format with while number.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.NumberFormat.FloatingPoint">
            <summary>
            Format with floating point number.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.NumberFormat.WholeNumberPercent">
            <summary>
            Whole number in percents.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.NumberFormat.FloatingPointPercent">
            <summary>
            Floating point number in percents. 
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.NumberFormat.WholeNumberWithSpace">
            <summary>
            Format which suits to "#?#0" Word format.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.NumberFormat.FloatingPointWithSpace">
            <summary>
            Format which suites to "#?#0,00" Word format.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.NumberFormat.CurrencyFormat">
            <summary>
            Format which suites to "#?#0,00 $;(#?#0,00 $)" Word format.
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.TextDirection">
            <summary>
            Defines the direction of text.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.TextDirection.TopToBottom">
            <summary>
            Specifies that text in the parent object shall flow from left to right horizontally,
            then top to bottom vertically on the page.
            This means that horizontal lines are filled before the text expands vertically.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.TextDirection.RightToLeftRotated">
            <summary>
            Specifies that text in the parent object shall flow from top to bottom vertically, 
            then right to left horizontally on the page.
            This means that horizontal lines are filled before the text expands vertically.
            This flow is also rotated such that all text is rotated 90 degrees when displayed on a page.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.TextDirection.LeftToRight">
            <summary>
            Specifies that text in the parent object shall flow from bottom to top vertically,
            then from left to right horizontally on the page.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.TextDirection.RightToLeft">
            <summary>
            Specifies that text in the parent object shall flow from right to left horizontally, 
            then top to bottom vertically on the page.
            This means that horizontal lines are filled before the text expands vertically.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.TextDirection.TopToBottomRotated">
            <summary>
            Specifies that text in the parent object shall flow from left to right horizontally,
            then top to bottom vertically on the page.
            This means that horizontal lines are filled before the text expands vertically.
            This flow is also rotated such that any East Asian text shall be rotated 270 degrees when displayed on a page.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.TextDirection.LeftToRightRotated">
            <summary>
            Specifies that text in the parent object shall flow from top to bottom vertically,
            then left to right horizontally on the page.
            This means that horizontal lines are filled before the text expands vertically.
            This flow is also rotated such that all text is rotated 90 degrees when displayed on a page.
            </summary>      
        </member>
        <member name="T:Spire.Doc.Documents.FieldMarkType">
            <summary>
            Defines types of field marks.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.FieldMarkType.FieldSeparator">
            <summary>
            Field separator type
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.FieldMarkType.FieldEnd">
            <summary>
            Field end type.
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.BuiltinStyle">
            <summary>
            Defines built-in styles.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ConditionalFormattingCode.OddRowBanding">
            <summary>
            Banded Row Conditional Formatting. the tag "band1Horz".
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ConditionalFormattingCode.OddColumnBanding">
            <summary>
            Banded Column Conditional Formatting. the tag "band1Vert".
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ConditionalFormattingCode.EvenRowBanding">
            <summary>
            Even Row Stripe Conditional Formatting. the tag "band2Horz".
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ConditionalFormattingCode.EvenColumnBanding">
            <summary>
            Even Column Stripe Conditional Formatting. the tag "band2Vert".
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ConditionalFormattingCode.FirstColumn">
            <summary>
            First Column Conditional Formatting. the tag "firstCol".
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ConditionalFormattingCode.FirstRow">
            <summary>
            First Row Conditional Formatting. the tag "firstRow".
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ConditionalFormattingCode.LastColumn">
            <summary>
            Last table column formatting. the tag "lastCol".
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ConditionalFormattingCode.LastRow">
            <summary>
            Last table row formatting. the tag "lastRow".
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ConditionalFormattingCode.FirstRowLastCell">
            <summary>
            Top right table cell formatting. the tag "neCell".
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ConditionalFormattingCode.FirstRowFirstCell">
            <summary>
            Top left table cell formatting. the tag "nwCell".
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ConditionalFormattingCode.LastRowLastCell">
            <summary>
            Bottom right table cell formatting. the tag "seCell".
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ConditionalFormattingCode.LastRowFirstCell">
            <summary>
            Bottom left table cell formatting. the tag "swCell".
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.ConditionalFormattingCode.WholeTable">
            <summary>
            Whole table formatting. the tag "wholeTable".
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.BorderSide">
            <summary>
            
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.PageNumberStyle">
            <summary>
            Specifies the Number Style for a page.
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.PageNumberAlignment">
            <summary>
            Specifies PageNumber alignment.
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.FrameHorzAnchor">
            <summary>
            Specifies the horizontal frame anchor.
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.FrameVertAnchor">
            <summary>
            Specifies the vertical frame anchor.
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.XHTMLValidationType">
            <summary>
            Specifies the XHTMLValidation type.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.XHTMLValidationType.Strict">
            <summary>
            XHTML 1.0 validation.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.XHTMLValidationType.Transitional">
            <summary>
            XHTML 1.1 validation.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.XHTMLValidationType.None">
            <summary>
            No validation.
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.GridPitchType">
            <summary>
            Defines how tall a grid unit is up/down
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.DocumentVersion">
            <summary>
            Defines document version
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.DocumentVersion.Word97">
            <summary>
            Document created using Word 97
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.DocumentVersion.Word2000">
            <summary>
            Document created using Word 2000
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.DocumentVersion.Word2002">
            <summary>
            Document created using Word 2002
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.DocumentVersion.Word2003">
            <summary>
            Document created using Word 2003
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.DocumentVersion.Word2007">
            <summary>
            Document created using Word 2007
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.CommentMarkType">
            <summary>
            Defines types of comment mark.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CommentMarkType.CommentStart">
            <summary>
            Comment start mark type.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CommentMarkType.CommentEnd">
            <summary>
            Comment end mark type
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.OleLinkType">
            <summary>
            Defines types of the ole object field
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.OleLinkType.Embed">
            <summary>
            Ole object field type is EMBED
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.OleLinkType.Link">
            <summary>
            Ole object field type is LINK
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.OleObjectType">
            <summary>
            defines the types of OLE object
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.OleObjectType.Undefined">
            <summary>
            Type is not defined
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.OleObjectType.AdobeAcrobatDocument">
            <summary>
            Adobe Acrobat Document. File has ".pdf" extension.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.OleObjectType.BitmapImage">
            <summary>
            Bitmap Image. File has ".png" extension.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.OleObjectType.MediaClip">
            <summary>
            Media Clip
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.OleObjectType.Equation">
            <summary>
            Equation
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.OleObjectType.GraphChart">
            <summary>
            Graph Chart
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.OleObjectType.Excel_97_2003_Worksheet">
            <summary>
            Excel 97-2003 Worksheet. File has ".xls" extension
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.OleObjectType.ExcelBinaryWorksheet">
            <summary>
            Excel Binary Worksheet. File has ".xlsb" extension
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.OleObjectType.ExcelChart">
            <summary>
            Excel chart. File has ".xls" extension
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.OleObjectType.ExcelMacroWorksheet">
            <summary>   
            Excel Macro-Enabled Worksheet. File has ".xlsm" extension.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.OleObjectType.ExcelWorksheet">
            <summary>
            Excel Worksheet. File has ".xlsx" extension.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.OleObjectType.PowerPoint_97_2003_Presentation">
            <summary>
            PowerPoint 97-2003 Presentation. File has ".ppt" extension.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.OleObjectType.PowerPoint_97_2003_Slide">
            <summary>
            PowerPoint 97-2003 Slide. File has ".sld" extension.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.OleObjectType.PowerPointMacroPresentation">
            <summary>
            PowerPoint Macro-Enabled Presentation. File has ".pptm" extension.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.OleObjectType.PowerPointMacroSlide">
            <summary>
            PowerPoint Macro-Enabled Slide. File has ".sldm" extension.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.OleObjectType.PowerPointPresentation">
            <summary>
            PowerPoint Presentation. File has ".pptx" extension.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.OleObjectType.PowerPointSlide">
            <summary>
            PowerPoint Slide. File has ".sldx" extension.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.OleObjectType.Word_97_2003_Document">
            <summary>
            Word 97-2003 Document. File has ".doc" extension.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.OleObjectType.WordDocument">
            <summary>
            Word Document. File has ".docx" extension.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.OleObjectType.WordMacroDocument">
            <summary>
            Word Macro-Enabled Document. File has ".docm" extension.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.OleObjectType.VisioDrawing">
            <summary>
            Visio Deawing
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.OleObjectType.MIDISequence">
            <summary>
            MIDI Sequence
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.OleObjectType.OpenDocumentPresentation">
            <summary>
            OpenDocument Presentation
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.OleObjectType.OpenDocumentSpreadsheet">
            <summary>
            OpenDocument Spreadsheet
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.OleObjectType.OpenDocumentText">
            <summary>
            OpenDocument Text
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.OleObjectType.OpenOfficeSpreadsheet1_1">
            <summary>
            OpenOffice.org 1.1 Spreadsheet
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.OleObjectType.OpenOfficeText_1_1">
            <summary>
            OpenOffice.org 1.1 Text
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.OleObjectType.Package">
            <summary>
            Package
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.OleObjectType.VideoClip">
            <summary>
            Video Clip
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.OleObjectType.WaveSound">
            <summary>
            Wave Sound
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.OleObjectType.WordPadDocument">
            <summary>
            WordPad Document
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.OleObjectType.OpenOfficeSpreadsheet">
            <summary>
            OpenOffice spreadsheet
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.OleObjectType.OpenOfficeText">
            <summary>
            OpenOffice Text
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.OleObjectType.VisioDrawing_2013">
            <summary>
            Visio Deawing for visio 2013.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.OleObjectType.WordPicture">
            <summary>
            word picture
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.OleObjectType.MathType">
            <summary>
            Equation DSMT4
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.OleObjectType.WordTemplate">
            <summary>
            Word.Template.12
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.OleObjectType.WordMacroTemplate">
            <summary>
            Microsoft Word Macro-Enabled Template
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.ImageType">
            <summary>
            Specifies the image type.
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.LigatureType">
            <summary>
            Specifies the ligature type.
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.NumberFormType">
            <summary>
            Specifies the number form type.
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.NumberSpaceType">
            <summary>
            Specifies the number spacing type.
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.StylisticSetType">
            <summary>
            Specifies the stylistic set type.
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.FontTypeHint">
            <summary>
            Defines the FontTypeHint enumeration.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.FontTypeHint.Default">
            <summary>
            High ANSI Font.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.FontTypeHint.EastAsia">
            <summary>
            East Asian Font.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.FontTypeHint.ComplexScript">
            <summary>
            Complex Script Font.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.NoTabForInd">
            <summary>
              Don't add automatic tab stop for hanging indent.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.NoSpaceRaiseLower">
            <summary>
            Don't add extra space for raised/lowered characters.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.MapPrintTextColor">
            <summary>
             Print colors as black on noncolor printers.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.WrapTrailSpaces">
            <summary>
             Wrap trailing spaces to next line.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.NoColumnBalance">
            <summary>
            Don't balance columns for continuous section starts.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.ConvMailMergeEsc">
            <summary>
             Treat \" as "" in mail merge data sources.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.SuppressSpBfAfterPgBrk">
            <summary>
             Suppress Space Before after a hard page or column break.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.SuppressTopSpacing">
            <summary>
             Suppress extra line spacing at top of page.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.OrigWordTableRules">
            <summary>
             Combine table borders like Word 5.x for the Macintosh.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.TruncDxaExpand">
            <summary>
             Truncate font height.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.ShowBreaksInFrames">
            <summary>
             Show hard page or column breaks in frames.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.SwapBordersFacingPgs">
            <summary>
             Swap left and right borders on odd facing pages.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.LeaveBackslashAlone">
            <summary>
            Convert backslash characters into yen signs.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.ExpShRtn">
            <summary>
             Don't expand character spaces on the line ending Shift+Return.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.DontULTrlSpc">
            <summary>
              Draw underline on trailing spaces.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.DontBlnSbDbWid">
            <summary>
             Balance SBCS characters and DBCS characters.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.SuppressTopSpacingMac5">
            <summary>
            Suppress extra line spacing at top of page like Word 5.x for the Macintosh.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.F2ptExtLeadingOnly">
            <summary>
            Specifies whether line spacing emulates WordPerfect 5.x line spacing
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.PrintBodyBeforeHdr">
            <summary>
            Print body text before header/footer.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.NoExtLeading">
            <summary>
            Don't add leading (extra space) between rows of text.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.DontMakeSpaceForUL">
            <summary>
            Add space for underline.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.MWSmallCaps">
            <summary>
            Use larger small caps like Word 5.x for the Macintosh.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.ExtraAfter">
            <summary>
            Suppress extra line spacing like WordPerfect 5.x.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.TruncFontHeight">
            <summary>
            Truncate font height.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.SubOnSize">
            <summary>
            Substitute fonts based on font size.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.PrintMet">
            <summary>
             Use printer metrics to lay out document.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.WW6BorderRules">
            <summary>
            Use Word 6.x/95 border rules.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.ExactOnTop">
            <summary>
            Don't center "exact line height" lines.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.WPSpace">
            <summary>
            Set the width of a space like WordPerfect 5.x.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.WPJust">
            <summary>
            Do full justification like WordPerfect 6.x for Windows.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.LineWrapLikeWord6">
            <summary>
            Line wrap like Word 6.0.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.SpLayoutLikeWW8">
            <summary>
            Lay out autoshapes like Word 97.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.FtnLayoutLikeWW8">
            <summary>
            Lay out footnotes like Word 6.x/95/97.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.DontUseHTMLParagraphAutoSpacing">
            <summary>
             Don't use HTML paragraph auto spacing.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.DontAdjustLineHeightInTable">
            <summary>
              Adjust line height to grid height in the table.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.ForgetLastTabAlign">
            <summary>
            Forget last tab alignment.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.UseAutospaceForFullWidthAlpha">
            <summary>
            Specifies whether to emulate Word for Windows 95 full-width character spacing
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.AlignTablesRowByRow">
            <summary>
            Slign table rows independently.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.LayoutRawTableWidth">
            <summary>
            Lay out tables with raw width.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.LayoutTableRowsApart">
            <summary>
            Allow table rows to lay out apart.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.UseWord97LineBreakingRules">
            <summary>
            Use Word 97 line breaking rules for Asian text.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.DontBreakWrappedTables">
            <summary>
             Don't break wrapped tables across pages.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.DontSnapToGridInCell">
            <summary>
            Don't snap text to grid inside table with inline objects.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.DontAllowFieldEndSelect">
            <summary>
            Select entire field with first or last character.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.ApplyBreakingRules">
            <summary>
            Use line-breaking rules.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.DontWrapTextWithPunct">
            <summary>
             Don't allow hanging punctuation with character grid.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.DontUseAsianBreakRules">
            <summary>
             Don't use Asian rules for line breaks with character grid.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.UseWord2002TableStyleRules">
            <summary>
            Use Word 2002 table style rules.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.GrowAutoFit">
            <summary>
            Allow tables to extend into margins.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.UseNormalStyleForList">
            <summary>
             Use the Normal style instead of the List Paragraph style for bulleted or
              numbered lists.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.DontUseIndentAsNumberingTabStop">
            <summary>
             Do not use hanging indent as tab stop for bullets and numbering.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.FELineBreak11">
            <summary>
            Use Word 2003 hanging-punctuation rules in Asian langauges.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.AllowSpaceOfSameStyleInTable">
            <summary>
            Allow space between paragraphs of the same style in a table.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.WW11IndentRules">
            <summary>
            Use Word 2003 indent rules for text next to wrapped objects.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.DontAutofitConstrainedTables">
            <summary>
            Do not autofit tables next to wrapped objects.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.AutofitLikeWW11">
            <summary>
            Use Microsoft Office Word 2003 table autofit rules.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.UnderlineTabInNumList">
            <summary>
            Underline the tab character between the number and the text in numbered lists.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.HangulWidthLikeWW11">
            <summary>
            Do not use proportional width for Korean characters.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.SplitPgBreakAndParaMark">
            <summary>
            Split apart page break and paragraph mark.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.DontVertAlignCellWithSp">
            <summary>
            Specifies whether to not vertically align cells containing floating objects
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.DontBreakConstrainedForcedTables">
            <summary>
            Specifies whether to not break table rows around floating tables
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.DontVertAlignInTxbx">
            <summary>
            Specifies whether to ignore vertical alignment in text boxes
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.Word11KerningPairs">
            <summary>
            Specifies whether to use ANSI kerning pairs from fonts instead of the Unicode kerning pair info
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.CachedColBalance">
            <summary>
            Specifies whether to use cached paragraph information for column balancing
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.overrideTableStyleFontSizeAndJustification">
            <summary>
            specifies whether to apply the additional preceding rules when determining the font size and justification of text within tables.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.enableOpenTypeFeatures">
            <summary>
            specifies whether the preceding features are to be used when displaying the font.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.doNotFlipMirrorIndents">
            <summary>
            specifies whether to swap indentation values when displaying paragraphs.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.differentiateMultirowTableHeader">
            <summary>
            conditional formatting of table row headers does apply separately to multi-row table headers 
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.CompatibilityOptions.UseFELayout">
            <summary>
            Specifies that applications shall not bypass code relating to the layout of East Asian and/or Complex Script characters.
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.GroupedShapeOrigin">
            <summary>
              Specify vertical/horizontal origin the object in the GroupedShape.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.GroupedShapeOrigin.UpperLeftCorner">
            <summary>
            On the upper left corner.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.GroupedShapeOrigin.Center">
            <summary>
            Center.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.FieldNumFormat.Default">
            <summary>
            none
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.FieldNumFormat.Arabic">
            <summary>
            1,2,3.....
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.FieldNumFormat.ArabicDash">
            <summary>
            -1-,-2-,-3-,.....
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.FieldNumFormat.LowLetter">
            <summary>
             a,b,c,......
            </summary>  
        </member>
        <member name="F:Spire.Doc.Documents.FieldNumFormat.UpLetter">
            <summary>
            A,B,C,.....
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.FieldNumFormat.LowRoman">
            <summary>
            i,ii,iii,.....
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.FieldNumFormat.UpRoman">
            <summary>
            I,II,III,.....
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.FieldNumFormat.ChineseNum3">
            <summary>
            一，二，三，.....
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.FieldNumFormat.ChineseNum2">
            <summary>
            壹，贰，叁......
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.FieldNumFormat.Zodiac1">
            <summary>
            甲，乙，丙，.....
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.FieldNumFormat.Zodiac2">
            <summary>
            子，丑，寅.......
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.FieldNumFormat.GB1">
            <summary>
            1.,2.,3.,.....
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.FieldNumFormat.GB2">
            <summary>
            (1),(2),(3),......
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.FieldNumFormat.GB3">
            <summary>
            ①,②,③,....
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.FieldNumFormat.GB4">
            <summary>
            (一),(二),(三),......
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.RubyAlign">
            <summary>
            Specifies the alignment setting which shall be used to determine the placement of phonetic guide
            text with respect to the base text when this phonetic guide is displayed.
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.DisplacedByCustomXml">
            <summary>
            Specifies that the parent annotation's placement shall be directly linked with the location
            of the physical presentation of a custom XML element in the document.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.DisplacedByCustomXml.Next">
            <summary>
            Displaced by Next Custom XML Markup Tag.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.DisplacedByCustomXml.Prev">
            <summary>
            Displaced by Previous Custom XML Markup Tag.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.DisplacedByCustomXml.None">
            <summary>
            Defult
            </summary>
        </member>
        <member name="T:Spire.Doc.Documents.EditingGroup">
            <summary>
            This simple type specifies the set of possible aliases (or editing groups) which can be used as aliases to
            determine if the current user shall be allowed to edit a single range defined by a range permission with 
            in a document. This mechanism simply provides a set of predefined editing groups which can be associated 
            with accounts by applications in any desired manner.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.EditingGroup.None">
            <summary>
            No users.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.EditingGroup.Current">
            <summary>
            The current user.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.EditingGroup.Editors">
            <summary>
            Editors of the documnet.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.EditingGroup.Owners">
            <summary>
            Owners of the documnet.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.EditingGroup.Contributors">
            <summary>
            Contributors to the documnet.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.EditingGroup.Administrators">
            <summary>
            Members of the administrator group on the computer.
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.EditingGroup.Everyone">
            <summary>
            All users.
            </summary>
        </member>
        <member name="M:Spire.Doc.Documents.TextSelection.#ctor(Spire.Doc.Documents.Paragraph,System.Int32,System.Int32)">
             Initializes a new instance of the {@link TextSelection} class.
            
             @param para         The paragraph
             @param startCharPos The start char position.
             @param endCharPos   The end char position.
        </member>
        <member name="M:Spire.Doc.Documents.TextSelection.GetAsRange">
             Gets as range. more than one paragraph,every paragraph to one text range.
            
             @return TextRange[]
        </member>
        <member name="M:Spire.Doc.Documents.TextSelection.GetAsRange(System.Boolean)">
            Gets as range. more than one paragraph,every paragraph to one text range.
            @param isCopyFormat Is copy existing formats to textrange
            @return TextRange[]
        </member>
        <member name="T:Spire.Doc.Documents.MD5">
            <summary>
             Summary description for MD5.
             </summary>
        </member>
        <member name="M:Spire.Doc.Documents.MD5.ROTATE_LEFT(System.UInt32,System.Byte)">
            <summary>
            rotates x left n bits.
            </summary>
            <param name="x"></param>
            <param name="n"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Documents.MD5.FF(System.UInt32@,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Byte,System.UInt32)">
            FF, GG, HH, and II transformations 
            for rounds 1, 2, 3, and 4.
            Rotation is separate from addition to prevent recomputation.
        </member>
        <member name="F:Spire.Doc.Documents.MD5.state">
            <summary>
            state (ABCD)
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.MD5.count">
            <summary>
            number of bits, modulo 2^64 (lsb first)
            </summary>
        </member>
        <member name="F:Spire.Doc.Documents.MD5.buffer">
            <summary>
            input buffer
            </summary>
        </member>
        <member name="M:Spire.Doc.Documents.MD5.Initialize">
            <summary>
            MD5 initialization. Begins an MD5 operation, writing a new context.
            </summary>
            <remarks>
            The RFC named it "MD5Init"
            </remarks>
        </member>
        <member name="M:Spire.Doc.Documents.MD5.HashCore(System.Byte[],System.Int32,System.Int32)">
            <summary>
            MD5 block update operation. Continues an MD5 message-digest
            operation, processing another message block, and updating the
            context.
            </summary>
            <param name="input"></param>
            <param name="offset"></param>
            <param name="count"></param>
            <remarks>The RFC Named it MD5Update</remarks>
        </member>
        <member name="M:Spire.Doc.Documents.MD5.HashFinal">
            <summary>
            MD5 finalization. Ends an MD5 message-digest operation, writing the
            the message digest and zeroizing the context.
            </summary>
            <returns>message digest</returns>
            <remarks>The RFC named it MD5Final</remarks>
        </member>
        <member name="M:Spire.Doc.Documents.MD5.Transform(System.Byte[],System.Int32)">
            <summary>
            MD5 basic transformation. Transforms state based on 64 bytes block.
            </summary>
            <param name="block"></param>
            <param name="offset"></param>
        </member>
        <member name="M:Spire.Doc.Documents.MD5.Encode(System.Byte[],System.Int32,System.UInt32[],System.Int32,System.Int32)">
            <summary>
            Encodes input (uint) into output (byte). Assumes len is
             multiple of 4.
            </summary>
            <param name="output"></param>
            <param name="outputOffset"></param>
            <param name="input"></param>
            <param name="inputOffset"></param>
            <param name="count"></param>
        </member>
        <member name="M:Spire.Doc.Documents.MD5.Decode(System.UInt32[],System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Decodes input (byte) into output (uint). Assumes len is
            a multiple of 4.
            </summary>
            <param name="output"></param>
            <param name="outputOffset"></param>
            <param name="input"></param>
            <param name="inputOffset"></param>
            <param name="count"></param>
        </member>
        <member name="M:Spire.Doc.Documents.ColorUtil.FromHtml(System.String)">
            <summary>
            Translates an HTML color representation to a GDI+ System.Drawing.Color structure.
            </summary>
            <param name="htmlColor">The string representation of the Html color to translate.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Documents.XsdGenerator.GetDLSLocalSchema">
               XmlValidatingReader valReader = new XmlValidatingReader(reader);
               valReader.ValidationType = ValidationType.Schema;
               valReader.ValidationEventHandler += validationHandler;
               while (valReader.Read())
               {
                   // reads full document
               }
        </member>
        <member name="P:Spire.Doc.Formatting.Revisions.MoveRevision.Type">
            <summary>
            Indicates whether the run is 'moved from' or 'moved to' during the revision.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.Revisions.MoveRevision.IsInheritedComplexAttr">
            <summary>
            Reserved for system use. IComplexAttr.
            </summary>
        </member>
        <member name="M:Spire.Doc.Formatting.Revisions.MoveRevision.Spire#Doc#Interface#IComplexAttr#DeepCloneComplexAttr">
            <summary>
            Reserved for system use. IComplexAttr.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.Revisions.RevisionBase.Author">
            <summary>
            Gets the author.
            Specifies the author for an annotation within a Word document.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.Revisions.RevisionBase.DateTime">
            <summary>
            Gets or sets the date time.
            Specifies the date information for an annotation within a Word document.
            </summary>
        </member>
        <member name="F:Spire.Doc.Formatting.BorderPositions.DiagonalDown">
            <summary>
            Diagonal Down border
            </summary>
        </member>
        <member name="F:Spire.Doc.Formatting.BorderPositions.DiagonalUp">
            <summary>
            Diagonal Up border
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.Border.Color">
            <summary>
            Gets or sets color of the border.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.Border.LineWidth">
            <summary>
            Gets or sets width of the border.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.Border.BorderType">
            <summary>
            Gets or sets  style of the border.
            </summary>
        </member>
        <member name="M:Spire.Doc.Formatting.Border.SetPropertyValue(System.Int32,System.Object)">
            <summary>
            set value,and change IsChanged to true
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.Border.Space">
            <summary>
            Returns or setswidth of space to maintain between border and text within border.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.Border.Shadow">
            <summary>
            Setting to define if border should be drawn with shadow.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.Border.IsDefault">
            <summary>
            Gets a value indicating whether format is default.
            </summary>
            <value><c>true</c> if format is default; otherwise,<c>false</c>.</value>
        </member>
        <member name="M:Spire.Doc.Formatting.Border.#ctor(Spire.Doc.Formatting.FormatBase,System.Int32)">
            <summary>
            Initializing constructor.
            </summary>
            <param name="parent">The parent.</param>
            <param name="baseKey">The base key.</param>
        </member>
        <member name="M:Spire.Doc.Formatting.Border.InitFormatting(System.Drawing.Color,System.Single,Spire.Doc.Documents.BorderStyle,System.Boolean)">
            <summary>
            Initialize Border style.
            </summary>
            <param name="color">The color.</param>
            <param name="lineWidth">Width of the line.</param>
            <param name="borderType">Type of the border.</param>
            <param name="shadow">if it specifies shadow, set to <c>true</c>.</param>
        </member>
        <member name="M:Spire.Doc.Formatting.Border.IsEqualsWhitoutSpace(Spire.Doc.Formatting.Border)">
            <summary>
            
            </summary>
            <param name="border"></param>
            <returns></returns>
        </member>
        <member name="P:Spire.Doc.Formatting.CellFormat.Borders">
            <summary>
            Gets borders.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.CellFormat.Paddings">
            <summary>
            Gets paddings.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.CellFormat.VerticalAlignment">
            <summary>
            Gets or sets vertical alignment.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.CellFormat.BackColor">
            <summary>
            Gets or sets background color.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.CellFormat.VerticalMerge">
            <summary>
            Returns or setsthe way of vertical merging of the cell.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.CellFormat.HorizontalMerge">
            <summary>
            Returns or setsthe way of horizontal merging of the cell.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.CellFormat.TextWrap">
            <summary>
            Gets or sets a value indicating whether [text wrap].
            </summary>
            <value><c>true</c> if it specifies text wrap, set to <c>true</c>.</value>
        </member>
        <member name="P:Spire.Doc.Formatting.CellFormat.FitText">
            <summary>
            Gets or sets fit text option.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.CellFormat.TextDirection">
            <summary>
            Gets or sets cell text direction.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.CellFormat.SamePaddingsAsTable">
            <summary>
            Defines whether to use same paddings as table has. 
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.CellFormat.HideMark">
            <summary>
             Gets or sets a value specifies whether the end of cell glyph shall influence the height of the given table row in the table.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.CellFormat.WidthUnit">
            <summary>
            Gets or sets teh Width unit.
            </summary>
        </member>
        <member name="M:Spire.Doc.Formatting.CellFormat.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Formatting.CellFormat"/> class.
            </summary>
        </member>
        <member name="M:Spire.Doc.Formatting.CellFormat.ClearBackground">
            <summary>
            Clears cell background.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.FormatBase.IsDefault">
            <summary>
            Gets a value indicating whether format is default.
            </summary>
            <value><c>true</c> if format is default; otherwise,<c>false</c>.</value>
        </member>
        <member name="M:Spire.Doc.Formatting.FormatBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Formatting.FormatBase"/> class.
            </summary>
        </member>
        <member name="M:Spire.Doc.Formatting.FormatBase.#ctor(Spire.Doc.Interface.IDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Formatting.FormatBase"/> class.
            </summary>
            <param name="doc">The doc.</param>
        </member>
        <member name="M:Spire.Doc.Formatting.FormatBase.#ctor(Spire.Doc.Interface.IDocument,Spire.Doc.DocumentObject)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Formatting.FormatBase"/> class.
            </summary>
            <param name="doc">The doc.</param>
            <param name="owner">The owner.</param>
        </member>
        <member name="M:Spire.Doc.Formatting.FormatBase.#ctor(Spire.Doc.Formatting.FormatBase,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Formatting.FormatBase"/> class.
            </summary>
            <param name="parent">The parent.</param>
            <param name="parentKey">The parent key.</param>
        </member>
        <member name="M:Spire.Doc.Formatting.FormatBase.#ctor(Spire.Doc.Formatting.FormatBase,System.Int32,System.Int32)">
            <summary>
            Initializing constructor.
            </summary>
            <param name="parent">The parent.</param>
            <param name="parentKey">The parent key.</param>
            <param name="parentOffset">The parent offset.</param>
        </member>
        <member name="M:Spire.Doc.Formatting.FormatBase.HasKey(System.Int32)">
            <summary>
            Checks if Key exists.
            </summary>
            <param name="key">The key.</param>
            <returns>
            if the specified key has key, set to <c>true</c>.
            </returns>
        </member>
        <member name="M:Spire.Doc.Formatting.FormatBase.ClearFormatting">
            <summary>
            Clears the formatting.
            </summary>
        </member>
        <member name="M:Spire.Doc.Formatting.FormatBase.GetKey(System.Int32)">
            <summary>
            Gets the key.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:Spire.Doc.Formatting.Frame">
            <summary>
            Represents Frame object used in framed document.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.Frame.FrameAnchorLock">
            <summary>
            Gets or Sets whether lock the anchor of Frame or not.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.Frame.FrameHorizontalPosition">
            <summary>
            Gets or Sets Horizontal Position of Frame.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.Frame.FrameVerticalPosition">
            <summary>
            Gets or Sets Vertical Position of Frame.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.Frame.FrameWidthRule">
            <summary>
            Gets or Sets Width Rule of Frame.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.Frame.FrameHeightRule">
            <summary>
            Gets or Sets Height Rule of Frame.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.Frame.WrapFrameAround">
            <summary>
            Gets or Sets wrap type of Frame.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.Frame.FrameHorizontalOrigin">
            <summary>
            Gets or sets relative to what the frame is positioned horizontally. 
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.Frame.FrameVerticalOrigin">
            <summary>
            gets or sets relative to what the frame is positioned vertically. 
            </summary>
        </member>
        <member name="M:Spire.Doc.Formatting.Frame.GetWidth">
            <summary>
            Gets width of this frame
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Formatting.Frame.SetWidth(System.Single)">
            <summary>
            Sets width of this frame
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Spire.Doc.Formatting.Frame.GetHeight">
            <summary>
            Gets height of this frame
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Formatting.Frame.SetHeight(System.Single)">
            <summary>
            Sets height of this frame
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Spire.Doc.Formatting.Frame.GetHorizontalPosition">
            <summary>
            Gets the position of the left edge of the frame
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Formatting.Frame.SetHorizontalPosition(System.Single)">
            <summary>
            Sets the position of the left edge of the frame
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Spire.Doc.Formatting.Frame.GetHorizontalDistanceFromText">
            <summary>
            Gets the distance between the document text and left or right edge of the frame.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Formatting.Frame.SetHorizontalDistanceFromText(System.Single)">
            <summary>
            Sets the distance between the document text and left or right edge of the frame.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Spire.Doc.Formatting.Frame.GetVerticalPosition">
            <summary>
            Gets the position of the top edge of the frame
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Formatting.Frame.SetVerticalPosition(System.Single)">
            <summary>
            Sets the position of the top edge of the frame
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Spire.Doc.Formatting.Frame.GetVerticalDistanceFromText">
            <summary>
            Gets the distance between the document text and top or bottom edge of the frame.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Formatting.Frame.SetVerticalDistanceFromText(System.Single)">
            <summary>
            Sets the distance between the document text and top or bottom edge of the frame.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Spire.Doc.Formatting.ListFormatUtils.BuildListLabelPart(Spire.Doc.Formatting.ListFormat,Spire.Doc.Documents.ListLevel,System.Int32)">
            <summary>
            Gets the label for the specified level of the current list.
            </summary>
        </member>
        <member name="F:Spire.Doc.Formatting.Paddings.LeftKey">
            <summary>
            Constant value for left key.
            </summary>
        </member>
        <member name="F:Spire.Doc.Formatting.Paddings.TopKey">
            <summary>
            Constant value for top key.
            </summary>
        </member>
        <member name="F:Spire.Doc.Formatting.Paddings.BottomKey">
            <summary>
            Constant value for bottom key.
            </summary>
        </member>
        <member name="F:Spire.Doc.Formatting.Paddings.RightKey">
            <summary>
            Constant value for right key.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.Paddings.Left">
            <summary>
            Gets/ sets left padding.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.Paddings.Top">
            <summary>
            Gets/ sets top padding.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.Paddings.Right">
            <summary>
            Gets/ sets right padding.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.Paddings.Bottom">
            <summary>
            Gets/ sets bottom padding.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.Paddings.All">
            <summary>
            Sets all paddings.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.Paddings.PaddingWidth">
            <summary>
            Get the width of left and right.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.Paddings.PaddingHeight">
            <summary>
            Get the height of top and bottom.
            </summary>
        </member>
        <member name="F:Spire.Doc.Formatting.ViewSetup.DEF_ZOOMING">
            <summary>
            Constant value for Zoom.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.ViewSetup.ZoomPercent">
            <summary>
            Returns or sets zooming value in percents
            </summary>
            <value>The zoom percent.</value>
        </member>
        <member name="P:Spire.Doc.Formatting.ViewSetup.ZoomType">
            <summary>
            Returns or sets zooming type
            </summary>
            <value>The type of the zoom.</value>
        </member>
        <member name="P:Spire.Doc.Formatting.ViewSetup.DocumentViewType">
            <summary>
            Returns or sets document view mode
            </summary>
            <value>The type of the document view.</value>
        </member>
        <member name="M:Spire.Doc.Formatting.ViewSetup.#ctor(Spire.Doc.Interface.IDocument)">
            <summary>
            Creates PageSetup object for specified document.
            </summary>
            <param name="doc">The doc.</param>
        </member>
        <member name="P:Spire.Doc.Formatting.CharacterFormat.Font">
            <summary>
            Gets or sets  font.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.CharacterFormat.FontName">
            <summary>
            Returns or sets font name
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.CharacterFormat.FontSize">
            <summary>
            Returns or sets font size
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.CharacterFormat.Bold">
            <summary>
            Returns or sets bold style
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.CharacterFormat.Italic">
            <summary>
            Returns or sets italic style
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.CharacterFormat.IsStrikeout">
            <summary>
            Returns or sets strikeout style.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.CharacterFormat.DoubleStrike">
            <summary>
            Returns or sets double strikeout style.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.CharacterFormat.UnderlineStyle">
            <summary>
            Returns or sets underline style
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.CharacterFormat.UnderlineColor">
            add underline color tiger 2015-01-04
             <summary>
             Returns or sets underline color
             </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.CharacterFormat.FitText">
            <summary>
            Returns or sets fitText
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.CharacterFormat.Kerning">
            add kern tiger 2015-01-04
             <summary>
             Returns or sets kern
             </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.CharacterFormat.TextEffect">
            add effect tiger 2015-01-04
             <summary>
             Return or sets effect
             </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.CharacterFormat.EmphasisMark">
            <summary>
            Returns or sets text emphasis mark
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.CharacterFormat.TextColor">
            <summary>
            Returns or sets text color
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.CharacterFormat.TextScale">
            <summary>
            Gets or sets a value specifies that the percentage by which the contents of a run shall be expanded or compressed
            with respect to its normal(100%) character width,with a minimun width of 1% and maximum width of 600%.       
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.CharacterFormat.TextBackgroundColor">
            <summary>
            Gets or sets text background color
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.CharacterFormat.IsShadow">
            <summary>
            Gets or sets shadow property of text.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.CharacterFormat.Emboss">
            <summary>
            Gets or sets emboss property of text.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.CharacterFormat.Engrave">
            <summary>
            Gets or sets Engrave property of text.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.CharacterFormat.Hidden">
            <summary>
            Gets or sets Hidden property of text.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.CharacterFormat.AllCaps">
            <summary>
            Gets or sets AllCaps property of text.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.CharacterFormat.IsSmallCaps">
            <summary>
            Gets or sets IsSmallCaps property of text.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.CharacterFormat.Bidi">
            <summary>
            Returns or sets right-to-left property of text.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.CharacterFormat.BoldBidi">
            <summary>
            Returns or sets bold property for right-to-left text.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.CharacterFormat.ItalicBidi">
            <summary>
            Returns or sets italic property for right-to-left text.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.CharacterFormat.FontSizeBidi">
            <summary>
            Returns or sets font size of the right-to-left text.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.CharacterFormat.HighlightColor">
            <summary>
            Gets or sets highlight color of text.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.CharacterFormat.Border">
            <summary>
            Gets border.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.CharacterFormat.FontNameAscii">
            <summary>
            Gets or setsthe font used for Latin text (characters with character codes from 0 through 127). 
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.CharacterFormat.FontNameBidi">
            <summary>
            Gets or sets font name for right-to-left text.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.CharacterFormat.FontNameFarEast">
            <summary>
            Gets or sets East Asian font name.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.CharacterFormat.FontNameNonFarEast">
            <summary>
            Gets or sets font used for characters with character codes from 128 through 255.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.CharacterFormat.FontTypeHint">
            <summary>
            Gets or sets the font type hint.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.CharacterFormat.LocaleIdASCII">
            <summary>
            Gets or sets the ASCII locale id .
            </summary>
            <value>The ASCII locale id .</value>
        </member>
        <member name="P:Spire.Doc.Formatting.CharacterFormat.LocaleIdFarEast">
            <summary>
            Gets or sets the far east locale id .
            </summary>
            <value>The far east locale id .</value>
        </member>
        <member name="P:Spire.Doc.Formatting.CharacterFormat.IsOutLine">
            <summary>
            Get/set outline character property.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.CharacterFormat.AllowContextualAlternates">
            <summary>
            Gets or sets a value indicating whether to allow contextual alternates.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.CharacterFormat.AnnotationAuthor">
            <summary>
            Specifies the author for an annotation within a WordprocessingML document.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.CharacterFormat.LigaturesType">
            <summary>
            Gets or sets the ligatures type.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.CharacterFormat.NumberFormType">
            <summary>
            Gets or sets the number form type.
            </summary>
            <value>The number form.</value>
        </member>
        <member name="P:Spire.Doc.Formatting.CharacterFormat.NumberSpaceType">
            <summary>
            Gets or sets the number space type.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.CharacterFormat.StylisticSetType">
            <summary>
            Gets or sets the stylistic set type.
            </summary>
        </member>
        <member name="M:Spire.Doc.Formatting.CharacterFormat.#ctor(Spire.Doc.Interface.IDocument)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Spire.Doc.Formatting.CharacterFormat.ApplyProperty">
            <summary>
            Updates the character properties.
            </summary>
        </member>
        <member name="M:Spire.Doc.Formatting.CharacterFormat.ClearBackground">
            <summary>
            Clear the text background.
            </summary>
        </member>
        <member name="T:Spire.Doc.Formatting.CharacterFormatLayoutInfo">
            <summary>
            The character foramt layout info class.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.CommentFormat.DateTime">
            <summary>
            Gets or sets the DateTime.
            </summary>
            <value>The DateTime.</value>
        </member>
        <member name="P:Spire.Doc.Formatting.CommentFormat.Initial">
            <summary>
            Gets or sets the user initials.
            </summary>
            <value>The user initials.</value>
        </member>
        <member name="P:Spire.Doc.Formatting.CommentFormat.Author">
            <summary>
            Gets or sets the user.
            </summary>
            <value>The user.</value>
        </member>
        <member name="P:Spire.Doc.Formatting.CommentFormat.CommentId">
            <summary>
            Gets or sets the id of the comment.
            </summary>
            <value>The comment id.</value>
        </member>
        <member name="M:Spire.Doc.Formatting.CommentFormat.#ctor(Spire.Doc.Fields.Comment)">
            <summary>
            Initializes a new instance of the <see cref="!:WCommentFormat"/> class.
            </summary>
        </member>
        <member name="M:Spire.Doc.Formatting.CommentFormat.Clone(Spire.Doc.Interface.IDocument)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="P:Spire.Doc.Formatting.ListFormat.ListLevelNumber">
            <summary>
            Returns or sets list nesting level. 
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.ListFormat.ListType">
            <summary>
            Gets type of the list.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.ListFormat.IsRestartNumbering">
            <summary>
            Returns or sets whether numbering of the list must restart from previous list.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.ListFormat.CustomStyleName">
            <summary>
            Gets the name of custom style.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.ListFormat.CurrentListStyle">
            <summary>
            Gets paragraph's list style.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.ListFormat.CurrentListLevel">
            <summary>
            Gets paragraph's ListLevel.
            </summary>
        </member>
        <member name="M:Spire.Doc.Formatting.ListFormat.#ctor(Spire.Doc.Interface.IParagraph)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Formatting.ListFormat"/> class.
            </summary>
            <param name="owner">The owner (paragraph).</param>
        </member>
        <member name="M:Spire.Doc.Formatting.ListFormat.#ctor(Spire.Doc.Document,Spire.Doc.Documents.ParagraphStyle)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Formatting.ListFormat"/> class.
            </summary>
            <param name="doc">The document.</param>
            <param name="owner">The owner.</param>
        </member>
        <member name="M:Spire.Doc.Formatting.ListFormat.IncreaseIndentLevel">
            <summary>
            Increase level indent.
            </summary>
        </member>
        <member name="M:Spire.Doc.Formatting.ListFormat.DecreaseIndentLevel">
            <summary>
            Decrease level indent.
            </summary>
        </member>
        <member name="M:Spire.Doc.Formatting.ListFormat.ContinueListNumbering">
            <summary>
            Continue last list.
            </summary>
        </member>
        <member name="M:Spire.Doc.Formatting.ListFormat.ApplyStyle(System.String)">
            <summary>
            Apply list style.
            </summary>
            <param name="styleName">The list style name.</param>
        </member>
        <member name="M:Spire.Doc.Formatting.ListFormat.ApplyBulletStyle">
            <summary>
            Apply default bullet style for current paragraph.
            </summary>
        </member>
        <member name="M:Spire.Doc.Formatting.ListFormat.ApplyNumberedStyle">
            <summary>
            Apply default numbered style for current paragraph.
            </summary>
        </member>
        <member name="M:Spire.Doc.Formatting.ListFormat.RemoveList">
            <summary>
            Removes the list from current paragraph.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.ParagraphFormat.IsKinSoku">
            <summary>
            Get or Set a value that determines whether use Asian rules for controlling first and last characters.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.ParagraphFormat.FirstLineIndentChars">
            <summary>
            Gets or sets the value that represents the paragraph first line indent in character units.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.ParagraphFormat.IsBidi">
            <summary>
            Returns or sets right-to-left property of the paragraph.
            </summary>
            <value>if bidi, set to <c>true</c>.</value>
        </member>
        <member name="P:Spire.Doc.Formatting.ParagraphFormat.Tabs">
            <summary>
            Gets the tabs info.
            </summary>
            <value>The tabs info.</value>
        </member>
        <member name="P:Spire.Doc.Formatting.ParagraphFormat.KeepLines">
            <summary>
            True if all lines in the paragraph are to remain on the same page. 
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.ParagraphFormat.KeepFollow">
            <summary>
            True if the paragraph is to remains on the same page as the 
            paragraph that follows it. 
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.ParagraphFormat.PageBreakBefore">
            <summary>
            True if a page break is forced before the paragraph
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.ParagraphFormat.PageBreakAfter">
            <summary>
            True if a page break is forced after the paragraph
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.ParagraphFormat.IsWidowControl">
            <summary>
            True if the first and last lines in the paragraph 
            are to remain on the same page as the rest of the paragraph. 
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Spire.Doc.Formatting.ParagraphFormat.AutoSpaceDN">
            <summary>
            Gets or sets the value that determines whether the space is automatically adjusted between Asian text and numbers. 
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.ParagraphFormat.AutoSpaceDE">
            <summary>
             Gets or sets the value that determines whether the space is automatically adjusted between Asian and Latin text.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.ParagraphFormat.HorizontalAlignment">
            <summary>
            Returns or sets horizontal alignment for the paragraph. 
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.ParagraphFormat.LeftIndent">
            <summary>
            Returns or set sthe value that represents the left indent for paragraph. 
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.ParagraphFormat.RightIndent">
            <summary>
            Returns or sets the value that represents the right indent for paragraph.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.ParagraphFormat.FirstLineIndent">
            <summary>
            Gets or sets the value(in points) for first line or hanging indent.Positive
            value represents first-line indent, and Negative value
            represents hanging indent.
            </summary>        
        </member>
        <member name="P:Spire.Doc.Formatting.ParagraphFormat.BeforeSpacing">
            <summary>
            Returns or sets the spacing (in points) before the paragraph. 
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.ParagraphFormat.AfterSpacing">
            <summary>
            Returns or sets the spacing (in points) after the paragraph.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.ParagraphFormat.Borders">
            <summary>
            Gets collection of borders in the paragraph
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.ParagraphFormat.BackColor">
            <summary>
            Gets or sets background color of the paragraph 
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.ParagraphFormat.LineSpacing">
            <summary>
            Returns or sets line spacing property of the paragraph.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.ParagraphFormat.LineSpacingRule">
            <summary>
            Returns or sets line spacing rule property of the paragraph.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.ParagraphFormat.BeforeAutoSpacing">
            <summary>
            Gets or sets a value indicating whether spacing before is automatic.
            </summary>
            <value>if spacing before is automatic, set to <c>true</c>.</value>
        </member>
        <member name="P:Spire.Doc.Formatting.ParagraphFormat.AfterAutoSpacing">
            <summary>
            Gets or sets a value indicating whether spacing after is automatic.
            </summary>
            <value>if spacing after is automatic, set to <c>true</c>.</value>
        </member>
        <member name="P:Spire.Doc.Formatting.ParagraphFormat.SnapToGrid">
            <summary>
            Gets or sets a value specifies whether the current paragraph snaps to grid when document grid is defined.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.ParagraphFormat.OutlineLevel">
            <summary>
            Gets or sets the outline level.
            </summary>
            <value>The outline level.</value>
        </member>
        <member name="P:Spire.Doc.Formatting.ParagraphFormat.OutlineLevelEx">
            <summary>
            Gets the outline level.(1-9); the default 10.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.ParagraphFormat.OverflowPunc">
            <summary>
            Gets or set allow punctuation to extend past text extents.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.ParagraphFormat.IsFrame">
            <summary>
            Gets a value indicating whether this instance is frame.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.ParagraphFormat.FrameWrapType">
            <summary>
            Gets or sets the frame wrapping text type.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.ParagraphFormat.FrameAnchorLock">
            <summary>
            Gets or sets the a value specifies whether the anchor of th frame.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.ParagraphFormat.WordWrap">
            <summary>        
             Gets or sets a value that determines whether allow Latin text to wrap in the middle of a word.   
            </summary>       
        </member>
        <member name="P:Spire.Doc.Formatting.ParagraphFormat.BeforeSpacingLines">
            <summary>        
            Gets or sets a value specifies the spacing that should be added before the first line
            in this paragraph in the document in line units.
            </summary> 
        </member>
        <member name="P:Spire.Doc.Formatting.ParagraphFormat.AfterSpacingLines">
            <summary>        
            Gets or sets a value specifies the spacing that should be added after the last line
            in this paragraph in the document in line units.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.ParagraphFormat.TextAlignment">
            <summary>
            Gets or sets the style of textalignment 
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.ParagraphFormat.MirrorIndents">
            <summary>
            Gets a value indicating whether indentation type is mirror indents.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.ParagraphFormat.SuppressAutoHyphens">
            <summary>
            Indicates whether to suppress automatic hyphenation for the paragraph.
            </summary>
        </member>
        <member name="M:Spire.Doc.Formatting.ParagraphFormat.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Formatting.ParagraphFormat"/> class.
            </summary>
        </member>
        <member name="M:Spire.Doc.Formatting.ParagraphFormat.#ctor(Spire.Doc.Interface.IDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Formatting.ParagraphFormat"/> class.
            </summary>
            <param name="document">The document.</param>
        </member>
        <member name="M:Spire.Doc.Formatting.ParagraphFormat.SetLeftIndent(System.Single)">
            <summary>
            Sets the value that represents the left indent for paragraph.
            </summary>
            <param name="leftIndent">The left indent.</param>
        </member>
        <member name="M:Spire.Doc.Formatting.ParagraphFormat.SetRightIndent(System.Single)">
            <summary>
            Sets the value that represents the right indent for paragraph.
            </summary>
            <param name="rightIndent">The right indent.</param>
        </member>
        <member name="M:Spire.Doc.Formatting.ParagraphFormat.SetFirstLineIndent(System.Single)">
            <summary>
            Sets the value that represents the first line indent for paragraph.
            </summary>
            <param name="firstLineIndent">The first line indent.</param>
        </member>
        <member name="M:Spire.Doc.Formatting.ParagraphFormat.SetFirstLineIndentChars(System.Single)">
            <summary>
            Sets the value that represents the first line indent chars for paragraph.
            </summary>
            <param name="firstLineIndentChars">The first line indent chars.</param>
        </member>
        <member name="M:Spire.Doc.Formatting.ParagraphFormat.ClearBackground">
            <summary>
            Clears paragraph background.
            </summary>
        </member>
        <member name="M:Spire.Doc.Formatting.ParagraphFormat.IsEqualsOfLeftIndent(Spire.Doc.Formatting.ParagraphFormat)">
            <summary>
            Is equals of the left indent.
            </summary>
            <param name="destFormat"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Formatting.ParagraphFormat.IsEqualsOfRightIndent(Spire.Doc.Formatting.ParagraphFormat)">
            <summary>
            Is equals of the right indent.
            </summary>
            <param name="destFormat"></param>
            <returns></returns>
        </member>
        <member name="P:Spire.Doc.Formatting.RowFormat.BackColor">
            <summary>
            Gets or sets background color.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.RowFormat.TextureStyle">
            <summary>
            Gets or sets the texture style.
            </summary>
            <value>The texture style.</value>
        </member>
        <member name="P:Spire.Doc.Formatting.RowFormat.Borders">
            <summary>
            Gets borders.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.RowFormat.Paddings">
            <summary>
            Gets paddings.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.RowFormat.CellSpacingEx">
            <summary>
            Returns or sets spacing between cells.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.RowFormat.CellSpacing">
            <summary>
            Returns or sets spacing between cells.
            The setting value must be between 0 pt and 264.5 pt. 
            The value will not be applied to this property if it is set out of range.
            This property will be cleared if the set value is less than 0. 
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.RowFormat.LeftIndent">
            <summary>
            Returns or sets table indent.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.RowFormat.IsAutoResized">
            <summary>
            Returns or sets the boolean value indicating if table is auto resized
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.RowFormat.IsBreakAcrossPages">
            <summary>
            Returns or sets the boolean value indicating if there is a break across pages
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.RowFormat.Bidi">
            <summary>
            Returns or sets whether table is right to left. 
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.RowFormat.HorizontalAlignment">
            <summary>
            Gets or sets horizontal alignment for the table. 
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.RowFormat.WrapTextAround">
            <summary>
            Gets or sets a value indicating whether to use "Around" text wrapping.
            </summary>
            <value><c>true</c> if wrap text around; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Doc.Formatting.RowFormat.Positioning">
            <summary>
            the positioning.
            </summary>
            <value>The positioning.</value>
        </member>
        <member name="P:Spire.Doc.Formatting.RowFormat.LayoutType">
            <summary>
            Gets or set the value of the layoutType.
            This element specifies the algorithm which shall be used  to layout the comtents of the table within the document.
            </summary>
            <value>The type of the layout.</value>
        </member>
        <member name="P:Spire.Doc.Formatting.RowFormat.Hidden">
            <summary>
            Returns or sets whether the glyph representing the end character of current table row
            shall be displayed in the current document.
            </summary>
        </member>
        <member name="M:Spire.Doc.Formatting.RowFormat.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Formatting.RowFormat"/> class.
            </summary>
        </member>
        <member name="M:Spire.Doc.Formatting.RowFormat.UpdateRowFormatToCells(System.Int32,System.Object)">
            <summary>
            when the property of the row has changed,if the owner is row,update the changed value to all cells in that row
            </summary>
            <param name="propertyKey">the key of the changed property</param>
            <param name="value">the changed value</param>
        </member>
        <member name="T:Spire.Doc.Formatting.RowFormat.TablePositioning">
            <summary>
            Table Positioning
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.RowFormat.TablePositioning.HorizPositionAbs">
            <summary>
            Gets or sets the absolute horizontal position for table.
            </summary>
            <value>The horiz position abs.</value>
        </member>
        <member name="P:Spire.Doc.Formatting.RowFormat.TablePositioning.VertPositionAbs">
            <summary>
            Gets or sets the absolute vertical position for table.
            </summary>
            <value>The horiz position abs.</value>
        </member>
        <member name="P:Spire.Doc.Formatting.RowFormat.TablePositioning.HorizPosition">
            <summary>
            Gets or sets the horizontal position for table.
            </summary>
            <value>The vertical position.</value>
        </member>
        <member name="P:Spire.Doc.Formatting.RowFormat.TablePositioning.VertPosition">
            <summary>
            Gets or sets the vertical position for table.
            </summary>
            <value>The vertical position.</value>
        </member>
        <member name="P:Spire.Doc.Formatting.RowFormat.TablePositioning.HorizRelationTo">
            <summary>
            Gets or sets the horizontal relation of the table.
            </summary>
            <value>The horiz relation to.</value>
        </member>
        <member name="P:Spire.Doc.Formatting.RowFormat.TablePositioning.VertRelationTo">
            <summary>
            Gets or sets the horizontal relation of the table.
            </summary>
            <value>The horiz relation to.</value>
        </member>
        <member name="P:Spire.Doc.Formatting.RowFormat.TablePositioning.DistanceFromTop">
            <summary>
            Gets or sets the distance from top.
            </summary>
            <value>The distance from top.</value>
        </member>
        <member name="P:Spire.Doc.Formatting.RowFormat.TablePositioning.DistanceFromBottom">
            <summary>
            Gets or sets the distance from bottom.
            </summary>
            <value>The distance from bottom.</value>
        </member>
        <member name="P:Spire.Doc.Formatting.RowFormat.TablePositioning.DistanceFromLeft">
            <summary>
            Gets or sets the distance from left.
            </summary>
            <value>The distance from left.</value>
        </member>
        <member name="P:Spire.Doc.Formatting.RowFormat.TablePositioning.DistanceFromRight">
            <summary>
            Gets or sets the distance from right.
            </summary>
            <value>The distance from right.</value>
        </member>
        <member name="P:Spire.Doc.Formatting.RowFormat.TablePositioning.TableOverlap">
            <summary>
            Get or set floating table allows other tables to overlap.
            </summary>
        </member>
        <member name="M:Spire.Doc.Formatting.RowFormat.TablePositioning.ClearFormatting">
            <summary>
            Clears the table positioning.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.TextBoxFormat.HorizontalOrigin">
            <summary>
            Get/set horizontal origin
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.TextBoxFormat.VerticalOrigin">
            <summary>
            Get/set vertical origin 
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.TextBoxFormat.FillColor">
            <summary>
            Gets or sets the fill color of the textbox.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.TextBoxFormat.Opacity">
            <summary>
            gets or sets the color opacity.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.TextBoxFormat.FillEfects">
            <summary>
            Gets the fill effects.
            </summary>
            <value>The fill effects.</value>
        </member>
        <member name="P:Spire.Doc.Formatting.TextBoxFormat.LineStyle">
            <summary>
            Get/set text box linestyle
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.TextBoxFormat.Width">
            <summary>
            Get/set textbox width
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.TextBoxFormat.Height">
            <summary>
            Get/set textbox height
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.TextBoxFormat.LineColor">
            <summary>
            Get/set line color.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.TextBoxFormat.NoLine">
            <summary>
            Get/set value which defines if
            there is a line around textbox shape
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.TextBoxFormat.HorizontalPosition">
            <summary>
            Get/set textbox horizontal position
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.TextBoxFormat.IsFitShapeToText">
            <summary>
            Gets or Sets a value. Specifies whether the spape stretches to fit the text in the textbox.
            Default is false.
            </summary>        
        </member>
        <member name="P:Spire.Doc.Formatting.TextBoxFormat.VerticalPosition">
            <summary>
            Get/set textbox vertical position
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.TextBoxFormat.TextWrappingStyle">
            <summary>
            Get/set text Wrapping style
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.TextBoxFormat.TextWrappingType">
            <summary>
            Get/set wrapping type for textbox
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.TextBoxFormat.LineWidth">
            <summary>
            Get/set textbox line width
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.TextBoxFormat.LineDashing">
            <summary>
            Get/set line dashing for textbox
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.TextBoxFormat.HorizontalAlignment">
            <summary>
            Get/set textbox horizontal alignment
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.TextBoxFormat.VerticalAlignment">
            <summary>
            Get/set textbox vertical alignment
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.TextBoxFormat.LayoutFlowAlt">
            <summary>
            Gets or sets the text direction of the textbox.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.TextBoxFormat.TextAnchor">
            <summary>
            Gets or sets the vertical anchoring of text. Default is top.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.TextBoxFormat.Rotation">
            <summary>
            Gets/Sets the rotation of textbox.Specifies the rotation of the graphic frame.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.TextBoxFormat.InternalMargin">
            <summary>
            Gets the internal margin.
            </summary>
            <value>The internal margin.</value>
        </member>
        <member name="P:Spire.Doc.Formatting.TextBoxFormat.WrapPolygonEx">
            <summary>
            Get the wrapping polygon.
            </summary>
        </member>
        <member name="M:Spire.Doc.Formatting.TextBoxFormat.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:WTextBoxFormat"/> class.
            </summary>
        </member>
        <member name="M:Spire.Doc.Formatting.TextBoxFormat.#ctor(Spire.Doc.Fields.TextBox)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Formatting.TextBoxFormat"/> class.
            </summary>
            <param name="txtBox">the parent textbox.</param>
        </member>
        <member name="M:Spire.Doc.Formatting.TextBoxFormat.Clone">
            <summary>
            Clone textbox format.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Spire.Doc.Formatting.InternalMargin.All">
            <summary>
            Sets all internal margin.
            </summary>
        </member>
        <member name="P:Spire.Doc.Formatting.InternalMargin.Left">
            <summary>
            Gets or sets the internal left margin (in points).
            </summary>
            <value>The internal left margin.</value>
        </member>
        <member name="P:Spire.Doc.Formatting.InternalMargin.Right">
            <summary>
            Gets or sets the internal right margin (in points).
            </summary>
            <value>The internal right margin.</value>
        </member>
        <member name="P:Spire.Doc.Formatting.InternalMargin.Top">
            <summary>
            Gets or sets the internal top margin (in points).
            </summary>
            <value>The internal top margin.</value>
        </member>
        <member name="P:Spire.Doc.Formatting.InternalMargin.Bottom">
            <summary>
            Gets or sets the internal bottom margin (in points).
            </summary>
            <value>The internal bottom margin.</value>
        </member>
        <member name="M:Spire.Doc.Formatting.InternalMargin.#ctor(Spire.Doc.Fields.TextBox)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Formatting.InternalMargin"/> class.
            </summary>
        </member>
        <member name="M:Spire.Doc.Interface.IParagraphBase.ApplyStyle(System.String)">
            <summary>
            Applys the character style.
            </summary>
            <param name="styleName">the style name.</param>
        </member>
        <member name="P:Spire.Doc.Interface.IParagraphBase.StyleName">
            <summary>
            Gets the style name.
            </summary>
        </member>
        <member name="T:Spire.Doc.License.LicenseProvider">
            <summary>
            Class Spire.Doc.LicenseProvider.
            </summary>  
        </member>
        <member name="M:Spire.Doc.License.LicenseProvider.SetLicense(System.String)">
            <summary>
            Provides a license by a license file path, which will be used for loading license.
            </summary>
            <param name="licenseFileFullPath">License file full path.</param>
        </member>
        <member name="M:Spire.Doc.License.LicenseProvider.SetLicense(System.IO.Stream)">
            <summary>
            Provides a license by a license stream, which will be used for loading license.
            </summary>
            <param name="licenseFileStream">License data stream.</param>
        </member>
        <member name="M:Spire.Doc.License.LicenseProvider.SetLicenseKey(System.String)">
            <summary>
            Provides a license by a license key, which will be used for loading license.
            </summary>
            <param name="key">The value of the Key attribute of the element License of you license xml file.</param>
        </member>
        <member name="M:Spire.Doc.License.LicenseProvider.SetLicenseFileName(System.String)">
            <summary>
             Sets the license file name, which will be used for loading license.
            </summary>
            <param name="licenseFileName">License file name.</param>
        </member>
        <member name="M:Spire.Doc.License.LicenseProvider.ClearLicense">
            <summary>
            Clear all cached license.
            </summary>
        </member>
        <member name="M:Spire.Doc.License.LicenseProvider.LoadLicense">
            <summary>
            Load the license provided by current setting to the license cache.
            </summary>
        </member>
        <member name="T:Spire.Doc.Fields.Shapes.Charts.AxisCategoryType">
            <summary>
            Specifies type of a category axis.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.AxisCategoryType.Automatic">
            <summary>
            Specifies that type of a category axis is determined automatically based on data.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.AxisCategoryType.Category">
            <summary>
            Specifies an axis of an arbitrary set of categories.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.AxisCategoryType.Time">
            <summary>
            Specifies a time category axis.
            </summary>
        </member>
        <member name="T:Spire.Doc.Fields.Shapes.Charts.AxisScaleType">
            <summary>
            Specifies the possible scale types for an axis.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.AxisScaleType.Linear">
            <summary>
            Linear scaling.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.AxisScaleType.Logarithmic">
            <summary>
            Logarithmic scaling.
            </summary>
        </member>
        <member name="T:Spire.Doc.Fields.Shapes.Charts.AxisBuiltInUnit">
            <summary>
             Specifies the display units for an axis.
            </summary>   
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.AxisBuiltInUnit.None">
            <summary>
            Specifies the values on the chart shall displayed as is.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.AxisBuiltInUnit.Custom">
            <summary>
            Specifies the values on the chart shall be divided by a user-defined divisor. This value is not supported
            by the new chart types of MS Office 2016.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.AxisBuiltInUnit.Billions">
            <summary>
                  Specifies the values on the chart shall be divided by 1,000,000,000.
                  </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.AxisBuiltInUnit.HundredMillions">
            <summary>
            Specifies the values on the chart shall be divided by 100,000,000.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.AxisBuiltInUnit.Hundreds">
            <summary>
            Specifies the values on the chart shall be divided by 100.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.AxisBuiltInUnit.HundredThousands">
            <summary>
                  Specifies the values on the chart shall be divided by 100,000.
                  </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.AxisBuiltInUnit.Millions">
            <summary>
            Specifies the values on the chart shall be divided by 1,000,000.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.AxisBuiltInUnit.TenMillions">
            <summary>
                  Specifies the values on the chart shall be divided by 10,000,000.
                  </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.AxisBuiltInUnit.TenThousands">
            <summary>
            Specifies the values on the chart shall be divided by 10,000.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.AxisBuiltInUnit.Thousands">
            <summary>
            Specifies the values on the chart shall be divided by 1,000.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.AxisBuiltInUnit.Trillions">
            <summary>
            Specifies the values on the chart shall be divided by 1,000,000,000,0000.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.AxisBuiltInUnit.Percentage">
            <summary>
            Specifies the values on the chart shall be divided by 0.01. This value is supported only by the new chart
            types of MS Office 2016.
            </summary>
        </member>
        <member name="T:Spire.Doc.Fields.Shapes.Charts.Chart">
            <summary>
            Provides access to the chart shape properties.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.Shapes.Charts.Chart.Series">
            <summary>
            Provides access to series collection.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.Shapes.Charts.Chart.Title">
            <summary>
             Provides access to the chart title properties.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.Shapes.Charts.Chart.Legend">
            <summary>
            Provides access to the chart legend properties.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.Shapes.Charts.Chart.AxisX">
            <summary>
            Provides access to properties of the X axis of the chart.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.Shapes.Charts.Chart.AxisY">
            <summary>
            Provides access to properties of the Y axis of the chart.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.Shapes.Charts.Chart.AxisZ">
            <summary>
            Provides access to properties of the Z axis of the chart.
            </summary>
        </member>
        <member name="T:Spire.Doc.Fields.Shapes.Charts.ChartMarker">
            <summary>
            Represents a chart data marker.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.Shapes.Charts.ChartMarker.Symbol">
            <summary>
            Gets or sets chart marker symbol.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.Shapes.Charts.ChartMarker.Size">
            <summary>
            Gets or sets chart marker size.
            Default value is 7.
            </summary>
        </member>
        <member name="M:Spire.Doc.Fields.Shapes.Charts.ChartSeriesCollection.Add(System.String,System.String[],System.Double[])">
            <summary>
            Adds new ChartSeries to this collection.
            Use this method to add series to any type of Bar, Column, Line and Surface charts.
            </summary>
        </member>
        <member name="M:Spire.Doc.Fields.Shapes.Charts.ChartSeriesCollection.Add(System.String,System.Double[],System.Double[])">
            <summary>
            Adds new ChartSeries to this collection.
            Use this method to add series to any type of Scatter charts.
            </summary>
        </member>
        <member name="M:Spire.Doc.Fields.Shapes.Charts.ChartSeriesCollection.Add(System.String,System.DateTime[],System.Double[])">
            <summary>
            Adds new ChartSeries to this collection.
            Use this method to add series to any type of Area, Radar and Stock charts.
            </summary>
        </member>
        <member name="M:Spire.Doc.Fields.Shapes.Charts.ChartSeriesCollection.Add(System.String,System.Double[],System.Double[],System.Double[])">
            <summary>
            Adds new ChartSeries to this collection.
            Use this method to add series to any type of Bubble charts.
            </summary>
        </member>
        <member name="T:Spire.Doc.Fields.Shapes.Charts.ChartType">
            <summary>
            Specifies type of a chart.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.ChartType.Area">
            <summary>
             Area chart. 
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.ChartType.AreaStacked">
            <summary>
             Stacked Area chart.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.ChartType.AreaPercentStacked">
            <summary>
             100% Stacked Area chart.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.ChartType.Area3D">
            <summary>
            3D Area chart.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.ChartType.Area3DStacked">
            <summary>
             3D Stacked Area chart.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.ChartType.Area3DPercentStacked">
            <summary>
             3D 100% Stacked Area chart.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.ChartType.Bar">
            <summary>
            Bar chart.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.ChartType.BarStacked">
            <summary>
             Stacked Bar chart.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.ChartType.BarPercentStacked">
            <summary>
             100% Stacked Bar chart.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.ChartType.Bar3D">
            <summary>
            3D Bar chart.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.ChartType.Bar3DStacked">
            <summary>
             3D Stacked Bar chart.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.ChartType.Bar3DPercentStacked">
            <summary>
             3D 100% Stacked Bar chart.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.ChartType.Bubble">
            <summary>
             Bubble chart.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.ChartType.Bubble3D">
            <summary>
             3D Bubble chart.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.ChartType.Column">
            <summary>
            Column chart.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.ChartType.ColumnStacked">
            <summary>
            Stacked Column chart.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.ChartType.ColumnPercentStacked">
            <summary>
            100% Stacked Column chart.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.ChartType.Column3D">
            <summary>
            3D Column chart.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.ChartType.Column3DStacked">
            <summary>
            3D Stacked Column chart.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.ChartType.Column3DPercentStacked">
            <summary>
            3D 100% Stacked Column chart.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.ChartType.Column3DClustered">
            <summary>
            3D Clustered Column chart.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.ChartType.Doughnut">
            <summary>
            Doughnut chart.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.ChartType.Line">
            <summary>
            Line chart.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.ChartType.LineStacked">
            <summary>
            Stacked Line chart.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.ChartType.LinePercentStacked">
            <summary>
            100% Stacked Line chart.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.ChartType.Line3D">
            <summary>
            3D Line chart.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.ChartType.Pie">
            <summary>
            Pie chart.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.ChartType.Pie3D">
            <summary>
            3D Pie chart.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.ChartType.PieOfBar">
            <summary>
            Pie of Bar chart.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.ChartType.PieOfPie">
            <summary>
            Pie of Pie chart.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.ChartType.Radar">
             <summary>
              Radar chart.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.ChartType.Scatter">
            <summary>
            Scatter chart.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.ChartType.Stock">
            <summary>
            Stock chart.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.ChartType.Surface">
            <summary>
            Surface chart.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.ChartType.Surface3D">
            <summary>
            3D Surface chart.
            </summary>
        </member>
        <member name="T:Spire.Doc.Fields.Shapes.Charts.AxisCrosses">
            <summary>
            Specifies the possible crossing points for an axis.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.AxisCrosses.AutoZero">
            <summary>
            The category axis crosses at the zero point of the value axis (if possible), or at the minimum value
            if the minimum is greater than zero, or at the maximum if the maximum is less than zero.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.AxisCrosses.Max">
            <summary>
            A perpendicular axis crosses at the maximum value of the axis.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.AxisCrosses.Min">
            <summary>
            A perpendicular axis crosses at the minimum value of the axis.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.AxisCrosses.Custom">
            <summary>
            A perpendicular axis crosses at the specified value of the axis.
            </summary>
        </member>
        <member name="T:Spire.Doc.Fields.Shapes.Charts.IChartDataPoint">
            <summary>
            Contains properties of a single data point on the chart.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.Shapes.Charts.IChartDataPoint.Explosion">
            <summary>
            Specifies the amount the data point shall be moved from the center of the pie.
            Can be negative, negative means that property is not set and no explosion should be applied.
            Applies only to Pie charts.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.Shapes.Charts.IChartDataPoint.InvertIfNegative">
            <summary>
            Specifies whether the parent element shall inverts its colors if the value is negative.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.Shapes.Charts.IChartDataPoint.Marker">
            <summary>
            Specifies a data marker. Marker is automatically created when requested.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.Shapes.Charts.IChartDataPoint.Bubble3D">
            <summary>
            Specifies whether the bubbles in Bubble chart should have a 3-D effect applied to them.
            </summary>
        </member>
        <member name="T:Spire.Doc.Fields.Shapes.Charts.LegendPosition">
            <summary>
            Specifies the possible positions for a chart legend.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.LegendPosition.None">
            <summary>
            No legend will be shown for the chart.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.LegendPosition.Bottom">
            <summary>
            Specifies that the legend shall be drawn at the bottom of the chart.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.LegendPosition.Left">
            <summary>
            Specifies that the legend shall be drawn at the left of the chart.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.LegendPosition.Right">
            <summary>
            Specifies that the legend shall be drawn at the right of the chart.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.LegendPosition.Top">
            <summary>
            Specifies that the legend shall be drawn at the top of the chart.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.LegendPosition.TopRight">
            <summary>
            Specifies that the legend shall be drawn at the top right of the chart.
            </summary>
        </member>
        <member name="T:Spire.Doc.Fields.Shapes.Charts.MarkerSymbol">
            <summary>
            Specifies marker symbol style.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.MarkerSymbol.Default">
            <summary>
            Specifies a default marker symbol shall be drawn at each data point.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.MarkerSymbol.Circle">
            <summary>
            Specifies a circle shall be drawn at each data point.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.MarkerSymbol.Dash">
            <summary>
            Specifies a dash shall be drawn at each data point.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.MarkerSymbol.Diamond">
            <summary>
            Specifies a diamond shall be drawn at each data point.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.MarkerSymbol.Dot">
            <summary>
            Specifies a dot shall be drawn at each data point.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.MarkerSymbol.None">
            <summary>
            Specifies nothing shall be drawn at each data point.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.MarkerSymbol.Picture">
            <summary>
            Specifies a picture shall be drawn at each data point.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.MarkerSymbol.Plus">
            <summary>
            Specifies a plus shall be drawn at each data point.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.MarkerSymbol.Square">
            <summary>
            Specifies a square shall be drawn at each data point.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.MarkerSymbol.Star">
            <summary>
            Specifies a star shall be drawn at each data point.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.MarkerSymbol.Triangle">
            <summary>
            Specifies a triangle shall be drawn at each data point.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.MarkerSymbol.X">
            <summary>
            Specifies an X shall be drawn at each data point.
            </summary>
        </member>
        <member name="T:Spire.Doc.Fields.Shapes.Charts.AxisTickLabelPosition">
            <summary>
            Specifies the possible positions for tick labels.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.AxisTickLabelPosition.High">
            <summary>
            Specifies the axis labels shall be at the high end of the perpendicular axis.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.AxisTickLabelPosition.Low">
            <summary>
            Specifies the axis labels shall be at the low end of the perpendicular axis.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.AxisTickLabelPosition.NextTo">
            <summary>
            Specifies the axis labels shall be next to the axis.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.AxisTickLabelPosition.None">
            <summary>
            Specifies the axis labels are not drawn.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.AxisTickLabelPosition.Default">
            <summary>
            Specifies default value of tick labels position.
            </summary>
        </member>
        <member name="T:Spire.Doc.Fields.Shapes.Charts.AxisTickMark">
            <summary>
            Specifies the possible positions for tick marks.
            </summary>    
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.AxisTickMark.Cross">
            <summary>
            Specifies that the tick marks shall cross the axis.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.AxisTickMark.Inside">
            <summary>
            Specifies that the tick marks shall be inside the plot area.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.AxisTickMark.Outside">
            <summary>
            Specifies that the tick marks shall be outside the plot area.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.AxisTickMark.None">
            <summary>
            Specifies that there shall be no tick marks.
            </summary>
        </member>
        <member name="T:Spire.Doc.Fields.Shapes.Charts.AxisTimeUnit">
            <summary>
            pecifies the unit of time for axes.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.AxisTimeUnit.Auto">
            <summary>
            Specifies that unit was not set explicitly and default value should be used.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.AxisTimeUnit.Days">
            <summary>
             Specifies that the chart data shall be shown in days.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.AxisTimeUnit.Months">
            <summary>
            Specifies that the chart data shall be shown in months.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Shapes.Charts.AxisTimeUnit.Years">
            <summary>
            Specifies that the chart data shall be shown in years.
            </summary>
        </member>
        <member name="M:Spire.Doc.Fields.Shapes.Core.Dml.DmlPicture.BuildDmlNode(Spire.Doc.Fields.DocPicture,System.Byte[])">
            <summary>
            Build dmlNode to store svg data
            </summary>
            <param name="shape">the shapeobject</param>
            <param name="imgBytes">the image original bytes array</param>
        </member>
        <member name="P:Spire.Doc.Fields.Shapes.Shape.HasChart">
            <summary>
             Returns true if this shape has a  chart.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.Shapes.ShapeBase.ChildObjects">
            <summary>
            Gets the child objects of the entity.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.Shapes.ShapeBase.AlternativeText">
            <summary>
            Gets or sets the alternative text. 
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.Shapes.ShapeBase.AspectRatioLocked">
            <summary>
            Gets or sets the boolean valut.Specifies that the generating application should not allow aspect ratio changes 
            for the corresponding graphic frame.
            </summary>
        </member>
        <member name="T:Spire.Doc.Fields.IDocOleObject">
            <summary>
            Interface publishes base the OLE objects
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.IDocOleObject.CharacterFormat">
            <summary>
            gets the current CharacterFormat
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.IDocOleObject.Container">
            <summary>
            Gets the OLE container.
            </summary>
            <value>The container.</value>
        </member>
        <member name="P:Spire.Doc.Fields.IDocOleObject.DisplayAsIcon">
            <summary>
            Gets or sets whether the OLEObject is displayed as an Icon or Content. 
            If True, the OLEObject is displayed as an icon
            </summary>
            <value>bool</value>
        </member>
        <member name="P:Spire.Doc.Fields.IDocOleObject.LinkPath">
            <summary>
            Gets or sets the link path.
            </summary>
            <value>The link address.</value>
        </member>
        <member name="P:Spire.Doc.Fields.IDocOleObject.LinkType">
            <summary>
            Gets the type of the OLE object.
            </summary>
            <value>The type of the OLE obj.</value>
        </member>
        <member name="P:Spire.Doc.Fields.IDocOleObject.NativeData">
            <summary>
            Gets the native data of embedded OLE object.
            </summary>
            <value>The native data.</value>
        </member>
        <member name="P:Spire.Doc.Fields.IDocOleObject.ObjectType">
            <summary>
            Gets or sets the type of the OLE object.
            </summary>
            <value>The type of the object.</value>
        </member>
        <member name="P:Spire.Doc.Fields.IDocOleObject.OlePicture">
            <summary>
            Gets the OLE picture.
            </summary>
            <value>The OLE picture.</value>
        </member>
        <member name="P:Spire.Doc.Fields.IDocOleObject.OleStorageName">
            <summary>
            Gets the name of the OLE Object storage.
            </summary>
            <value>The name of the OLE storage.</value>
        </member>
        <member name="P:Spire.Doc.Fields.IDocOleObject.PackageFileName">
            <summary>
            Gets the name of file embedded in the package (only if OleType is "Package").
            </summary>
        </member>
        <member name="M:Spire.Doc.Fields.IDocOleObject.SetNativeData(System.Byte[])">
            <summary>
            Sets the native data.
            </summary>
            <param name="nativeData">The native data.</param>
        </member>
        <member name="M:Spire.Doc.Fields.IDocOleObject.SetOlePicture(Spire.Doc.Fields.DocPicture)">
            <summary>
            Sets the OLE picture.
            </summary>
            <param name="picture">The picture.</param>
        </member>
        <member name="M:Spire.Doc.Fields.OMath.OfficeMath.#ctor(Spire.Doc.Document)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Fields.OMath.OfficeMath"/> class.
            </summary>
            <param name="doc">The document.</param>
        </member>
        <member name="M:Spire.Doc.Fields.OMath.OfficeMath.#ctor(Spire.Doc.Document,Spire.Doc.Fields.OMath.MathObject)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Fields.OMath.OfficeMath"/> class.
            </summary>
            <param name="doc">The document.</param>
            <param name="officeMathElement">The office math element.</param>
        </member>
        <member name="M:Spire.Doc.Fields.OMath.OfficeMath.#ctor(Spire.Doc.Document,Spire.Doc.Fields.OMath.MathObject,Spire.Doc.Formatting.CharacterFormat)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Fields.OMath.OfficeMath"/> class.
            </summary>
            <param name="doc">The document.</param>
            <param name="officeMathElement">The office math element.</param>
            <param name="characterFormat">The character format.</param>
        </member>
        <member name="P:Spire.Doc.Fields.OMath.OfficeMath.DocumentObjectType">
            <summary>
            Gets the type of the document object.
            </summary>
            <value>The type of the document object.</value>
        </member>
        <member name="P:Spire.Doc.Fields.OMath.OfficeMath.ParentParagraph">
            <summary>
            Gets the parent paragraph.
            </summary>
            <value>The parent paragraph.</value>
        </member>
        <member name="M:Spire.Doc.Fields.OMath.OfficeMath.XslTransform(System.String,System.String)">
            <summary>
            XSLs the transform.
            </summary>
            <param name="inputXmlConent">The input XML conent.</param>
            <param name="inuptXslContent">Content of the inupt XSL.</param>
            <returns>String.</returns>
        </member>
        <member name="M:Spire.Doc.Fields.OMath.OfficeMath.CheckAndAddMMLNamespace(System.String)">
            <summary>
            Checks the and add MML namespace.
            </summary>
            <param name="inputXmlConent">The input XML conent.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Spire.Doc.Fields.OMath.OfficeMath.XslTransform(System.String,System.IO.Stream)">
            <summary>
            XSLs the transform.
            </summary>
            <param name="inputXmlConent">The input XML conent.</param>
            <param name="inuptXslContent">Content of the inupt XSL.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Spire.Doc.Fields.OMath.OfficeMath.MML2OMML(System.String)">
            <summary>
            Mml to omml.
            </summary>
            <param name="mmlCode">The MML code.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Spire.Doc.Fields.OMath.OfficeMath.OMML2MML(System.String)">
            <summary>
            Omml to mml.
            </summary>
            <param name="ommlCode">The OMML code.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Spire.Doc.Fields.OMath.OfficeMath.LatexToMathML(System.String)">
            <summary>
            Latexes to mathML.
            </summary>
            <param name="latexText">The latex text.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Spire.Doc.Fields.OMath.OfficeMath.FromMathMLCode(System.String)">
            <summary>
            Froms the mathML code.
            </summary>
            <param name="mathMLCode">The Math ML code.</param>
        </member>
        <member name="M:Spire.Doc.Fields.OMath.OfficeMath.FromMathOMMLCode(System.String,Spire.Doc.DocumentObject)">
            <summary>
            Froms the mathOMML code.
            </summary>
            <param name="mathMLCode">The Math ML code.</param>
            <param name="documentObject">The Math parent</param>
        </member>
        <member name="M:Spire.Doc.Fields.OMath.OfficeMath.FromLatexMathCode(System.String)">
            <summary>
            Froms the latex math code.
            </summary>
            <param name="latexMathCode">The latex math code.</param>
        </member>
        <member name="M:Spire.Doc.Fields.OMath.OfficeMath.FromEqField(Spire.Doc.Fields.Field)">
            <summary>
            Froms the EqField.
            </summary>
            <param name="eqField">The EqField object.</param>
        </member>
        <member name="M:Spire.Doc.Fields.OMath.OfficeMath.SaveAsImage(Spire.Doc.Documents.ImageType)">
            <summary>
            Save the OfficeMath object as Image
            </summary>
        </member>
        <member name="M:Spire.Doc.Fields.OMath.OfficeMath.CreateDOMOutputOptions">
            <summary>
            Creates the DOM output options.
            </summary>
            <returns>DOMOutputOptions.</returns>
        </member>
        <member name="M:Spire.Doc.Fields.OMath.OfficeMath.ToMathMLCode">
            <summary>
            To the mathML code.
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="M:Spire.Doc.Fields.OMath.OfficeMath.ToMathOMMLCode">
            <summary>
            To the mathOMML code.
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="F:Spire.Doc.Fields.Barcode.CheckSumMode.Auto">
            <summary>
            Enable or disable checksum according barcode type.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Barcode.CheckSumMode.ForceEnable">
            <summary>
            Force enable checksum.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Barcode.CheckSumMode.ForceDisable">
            <summary>
            Force disable checksum.
            </summary>
        </member>
        <member name="T:Spire.Doc.Fields.Barcode.Implementation.Dimension">
            <summary>
            Simply encapsulates a width and height.
            </summary>
        </member>
        <member name="M:Spire.Doc.Fields.Barcode.Implementation.Dimension.#ctor(System.Int32,System.Int32)">
            <summary>
            initializing constructor
            </summary>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="P:Spire.Doc.Fields.Barcode.Implementation.Dimension.Width">
            <summary>
            the width
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.Barcode.Implementation.Dimension.Height">
            <summary>
            the height
            </summary>
        </member>
        <member name="M:Spire.Doc.Fields.Barcode.Implementation.Dimension.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Fields.Barcode.Implementation.Dimension.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Fields.Barcode.Implementation.Dimension.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="F:Spire.Doc.Fields.Barcode.Implementation.Generator.Encoder.Codes.NewRowToSeparator">
            For RSS.When 2D part finished and need to change to draw the separator part
        </member>
        <member name="M:Spire.Doc.Fields.Barcode.Implementation.Generator.Encoder.DataMatrix.Encoder.C40Encoder.handleEOD(Spire.Doc.Fields.Barcode.Implementation.Generator.Encoder.DataMatrix.Encoder.EncoderContext,System.Text.StringBuilder)">
            <summary>
            Handle "end of data" situations
            </summary>
            <param name="context">the encoder context</param>
            <param name="buffer">the buffer with the remaining encoded characters</param>
        </member>
        <member name="M:Spire.Doc.Fields.Barcode.Implementation.Generator.Encoder.DataMatrix.Encoder.EdifactEncoder.handleEOD(Spire.Doc.Fields.Barcode.Implementation.Generator.Encoder.DataMatrix.Encoder.EncoderContext,System.Text.StringBuilder)">
            <summary>
            Handle "end of data" situations
            </summary>
            <param name="context">the encoder context</param>
            <param name="buffer">the buffer with the remaining encoded characters</param>
        </member>
        <member name="M:Spire.Doc.Fields.Barcode.Implementation.Generator.Encoder.DataMatrix.Encoder.SymbolInfo.overrideSymbolSet(Spire.Doc.Fields.Barcode.Implementation.Generator.Encoder.DataMatrix.Encoder.SymbolInfo[])">
             Overrides the symbol info set used by this class. Used for testing purposes.
            
             @param override the symbol info set to use
        </member>
        <member name="M:Spire.Doc.Fields.Barcode.Implementation.Generator.Encoder.GF256.#ctor(System.Int32)">
             Create a representation of GF(256) using the given primitive polynomial.
            
             @param primitive irreducible polynomial whose coefficients are represented by
              the bits of an int, where the least-significant bit represents the constant
              coefficient
        </member>
        <member name="M:Spire.Doc.Fields.Barcode.Implementation.Generator.Encoder.GF256.BuildMonomial(System.Int32,System.Int32)">
            @return the monomial representing coefficient * x^degree
        </member>
        <member name="M:Spire.Doc.Fields.Barcode.Implementation.Generator.Encoder.GF256.AddOrSubtract(System.Int32,System.Int32)">
             Implements both addition and subtraction -- they are the same in GF(256).
            
             @return sum/difference of a and b
        </member>
        <member name="M:Spire.Doc.Fields.Barcode.Implementation.Generator.Encoder.GF256.Exp(System.Int32)">
            @return 2 to the power of a in GF(256)
        </member>
        <member name="M:Spire.Doc.Fields.Barcode.Implementation.Generator.Encoder.GF256.Log(System.Int32)">
            @return base 2 log of a in GF(256)
        </member>
        <member name="M:Spire.Doc.Fields.Barcode.Implementation.Generator.Encoder.GF256.Inverse(System.Int32)">
            @return multiplicative inverse of a
        </member>
        <member name="M:Spire.Doc.Fields.Barcode.Implementation.Generator.Encoder.GF256.Multiply(System.Int32,System.Int32)">
            @param a
            @param b
            @return product of a and b in GF(256)
        </member>
        <member name="M:Spire.Doc.Fields.Barcode.Implementation.Generator.Encoder.GF256Poly.#ctor(System.Int32[])">
            @param field the {@link GF256} instance representing the field to use
            to perform computations
            @param coefficients coefficients as ints representing elements of GF(256), arranged
            from most significant (highest-power term) coefficient to least significant
            @throws IllegalArgumentException if argument is null or empty,
            or if leading coefficient is 0 and this is not a
            constant polynomial (that is, it is not the monomial "0")
        </member>
        <member name="M:Spire.Doc.Fields.Barcode.Implementation.Generator.Encoder.GF256Poly.evaluateAt(System.Int32)">
            @return evaluation of this polynomial at a given point
        </member>
        <member name="P:Spire.Doc.Fields.Barcode.Implementation.Generator.Encoder.GF256Poly.Degree">
            @return degree of this polynomial
        </member>
        <member name="M:Spire.Doc.Fields.Barcode.Implementation.Generator.Encoder.GF256Poly.IsZero">
            @return true iff this polynomial is the monomial "0"
        </member>
        <member name="M:Spire.Doc.Fields.Barcode.Implementation.Generator.Encoder.GF256Poly.GetCoefficient(System.Int32)">
            @return coefficient of x^degree term in this polynomial
        </member>
        <member name="P:Spire.Doc.Fields.Barcode.Implementation.Generator.Generation.BarcodeCreator.DataMatrixSymbolShape">
            <summary>
            Symbol shape hint for DataMatrix barcode. It can be used to force square or rectangular
            symbols. default to auto.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.Barcode.Implementation.Generator.Generation.BarcodeCreator.AztecLayers">
            <summary>
            Layers of Aztect type of barcode. value should between -4 to 32.
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Barcode.ITF14BorderType.None">
            <summary>
            No border enclosing the Barcode
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Barcode.ITF14BorderType.Frame">
            <summary>
            Frame enclosing the Barcode
            </summary>
        </member>
        <member name="F:Spire.Doc.Fields.Barcode.ITF14BorderType.Bar">
            <summary>
            Tow horizontal bars enclosing the Barcode
            </summary>
        </member>
        <member name="T:Spire.Doc.Fields.Barcode.StringHelper">
            <summary>
            Utility class for common string operations.
            </summary>
        </member>
        <member name="M:Spire.Doc.Fields.Barcode.StringHelper.IsNullOrEmpty(System.String)">
            <summary>
            Determines if a string is null of empty. It's emptiness is
            determined by first trimming it.
            </summary>
            <param name="stringToCheck">String to check for nullness or emptiness.</param>
            <returns><c>True</c> if the string is null or empty, <c>false</c> otherwise.</returns>
        </member>
        <member name="P:Spire.Doc.Fields.DocOleObject.DisplayAsIcon">
            <summary>
            Gets or sets whether the OLEObject is displayed as an Icon or Content. If True, the OLEObject is displayed as an icon
            </summary>
            <value>bool</value>
        </member>
        <member name="P:Spire.Doc.Fields.DocOleObject.OlePicture">
            <summary>
            Gets the OLE picture.
            </summary>
            <value>The OLE picture.</value>
        </member>
        <member name="P:Spire.Doc.Fields.DocOleObject.DocumentObjectType">
            <summary>
            Gets the type of the document object.
            </summary>
            <value>The type of the document object.</value>
        </member>
        <member name="P:Spire.Doc.Fields.DocOleObject.Container">
            <summary>
            Gets the OLE container.
            </summary>
            <value>The container.</value>
        </member>
        <member name="P:Spire.Doc.Fields.DocOleObject.OleStorageName">
            <summary>
            Gets the name of the OLE Object storage.
            </summary>
            <value>The name of the OLE storage.</value>
        </member>
        <member name="P:Spire.Doc.Fields.DocOleObject.LinkPath">
            <summary>
            Gets or sets the link path.
            </summary>
            <value>The link address.</value>
        </member>
        <member name="P:Spire.Doc.Fields.DocOleObject.LinkType">
            <summary>
            Gets the type of the OLE object.
            </summary>
            <value>The type of the OLE obj.</value>
        </member>
        <member name="P:Spire.Doc.Fields.DocOleObject.ProgId">
            <summary>
            Gets the programmatic identifier of the OLE object of an undefined type.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.DocOleObject.ObjectType">
            <summary>
            Gets or sets the type of the OLE object.
            </summary>
            <value>The type of the object.</value>
        </member>
        <member name="P:Spire.Doc.Fields.DocOleObject.NativeData">
            <summary>
            Gets the native data of embedded OLE object.
            </summary>
            <value>The native data.</value>
        </member>
        <member name="P:Spire.Doc.Fields.DocOleObject.PackageFileName">
            <summary>
            Gets the name of file embedded in the package (only if OleType is "Package").
            </summary>
        </member>
        <member name="M:Spire.Doc.Fields.DocOleObject.#ctor(Spire.Doc.Document)">
            <summary>
            Initializes a new instance of the OleObject class.
            </summary>
            <param name="doc">The doc.</param>
        </member>
        <member name="M:Spire.Doc.Fields.DocOleObject.SetNativeData(System.Byte[])">
            <summary>
            Sets the native data.
            </summary>
            <param name="nativeData">The native data.</param>
        </member>
        <member name="M:Spire.Doc.Fields.DocOleObject.SetOlePicture(Spire.Doc.Fields.DocPicture)">
            <summary>
            Sets the OLE picture.
            </summary>
            <param name="picture">The picture.</param>
        </member>
        <member name="P:Spire.Doc.Fields.ParagraphBase.ChildObjects">
            <summary>
            Gets the child objects of the entity.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.ParagraphBase.OwnerParagraph">
            <summary>
            Gets owner paragraph.
            </summary>
            <value></value>
        </member>
        <member name="P:Spire.Doc.Fields.ParagraphBase.IsInsertRevision">
            <summary>
            Gets a value indicating whether this item was inserted to the document,
            when "Track Changes" is or was set to "true".
            </summary>
            <value>
            	if this instance was inserted, set to <c>true</c>.
            </value>
        </member>
        <member name="P:Spire.Doc.Fields.ParagraphBase.IsDeleteRevision">
            <summary>
            Gets or set a value indicating whether this item was deleted from the document,
            when "Track Changes" is or was set to "true".
            </summary>
            <value>
            	if this instance is delete revision, set to <c>true</c>.
            </value>
        </member>
        <member name="P:Spire.Doc.Fields.ParagraphBase.DeleteRevision">
            <summary>
            Gets the delete revision for this objects.
            Note this can be null. If null does not have delete revision.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.ParagraphBase.InsertRevision">
            <summary>
            Gets the insert revision for this objects.
            Note this can be null. If null does not have insert revision.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.ParagraphBase.StyleName">
            <summary>
            Gets the style name.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.ParagraphBase.IsAddForIfField">
            <summary>
            a flag checked whether the item is added for IF field layout;
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.ParagraphBase.CharacterFormat">
            <summary>
            Gets the character format.
            </summary>
            <value>The paragraph item character format.</value>
        </member>
        <member name="M:Spire.Doc.Fields.ParagraphBase.ApplyCharacterFormat(Spire.Doc.Formatting.CharacterFormat)">
            <summary>
            Sets the character format.
            </summary>
            <param name="charFormat">The character format.</param>
        </member>
        <member name="M:Spire.Doc.Fields.ParagraphBase.GetOwnerParagraph">
             <summary>
             gets the owner paragraph of the text range which is not for empty paragraph.
            the owner paragraph of the text range of empty paragraph is the ownerEmptyParagraph.
             </summary>
             <returns></returns>
        </member>
        <member name="P:Spire.Doc.Fields.ShapeObject.HasMatch">
            <summary>
            Indicates that vml shape has been matched with dml shape
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.ShapeObject.Chart">
            <summary>
            Returns a chart object.
            If there is a chart associated with this shape,
            it allows for the manipulation of chart.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.ShapeObject.DocumentObjectType">
            <summary>
            Gets the type of the document object.
            </summary>
            <value>The type of the document object.</value>
        </member>
        <member name="P:Spire.Doc.Fields.ShapeObject.CharacterFormat">
            <summary>
            Gets shape object's character format.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.ShapeObject.LineDashing">
            <summary>
            Defines the line dashing of the stroke.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.ShapeObject.ChildObjects">
            <summary>
            Gets the child objects of the entity.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.TableOfContent.UseHeadingStyles">
            <summary>
            Gets or sets a value indicating whether to use default heading styles.
            </summary>
            <value>if it uses heading styles, set to <c>true</c>.</value>
        </member>
        <member name="P:Spire.Doc.Fields.TableOfContent.UpperHeadingLevel">
            <summary>
            Gets or sets the ending heading level of the table of content. Default value is 3.
            </summary>
            <value>The upper heading level.</value>
        </member>
        <member name="P:Spire.Doc.Fields.TableOfContent.LowerHeadingLevel">
            <summary>
            Gets or sets the starting heading level of the table of content. Default value is 1
            </summary>
            <value>The starting heading level.</value>
        </member>
        <member name="P:Spire.Doc.Fields.TableOfContent.UseTableEntryFields">
            <summary>
            Gets or sets a value indicating whether to use table entry fields.Default value is false.
            </summary>
            <value>
            if it uses table entry fields, set to <c>true</c>.
            </value>
        </member>
        <member name="P:Spire.Doc.Fields.TableOfContent.TableID">
            <summary>
            Gets or sets the table ID.
            </summary>
            <value>The table ID.</value>
        </member>
        <member name="P:Spire.Doc.Fields.TableOfContent.RightAlignPageNumbers">
            <summary>
            Gets or sets a value indicating whether to show page numbers from right side. Default value is true.
            </summary>
            <value>
            	if right align of page numbers, set to <c>true</c>.
            </value>
        </member>
        <member name="P:Spire.Doc.Fields.TableOfContent.IncludePageNumbers">
            <summary>
            Gets or sets a value indicating whether to show page numbers. Default value is true.
            </summary>
            <value>if it includes page numbers, set to <c>true</c>.</value>
        </member>
        <member name="P:Spire.Doc.Fields.TableOfContent.UseHyperlinks">
            <summary>
            Gets or sets a value indicating whether to use hyperlinks.Default value is true.
            </summary>
            <value>if it uses hyperlinks, set to <c>true</c>.</value>
        </member>
        <member name="P:Spire.Doc.Fields.TableOfContent.UseOutlineLevels">
            <summary>
            Gets or sets a value indicating whether use outline levels.Default value is false.
            </summary>
            <value>if it uses outline levels, set to <c>true</c>.</value>
        </member>
        <member name="P:Spire.Doc.Fields.TableOfContent.DocumentObjectType">
            <summary>
            Gets the type of the document object.
            </summary>
            <value>The type of the document object.</value>
        </member>
        <member name="M:Spire.Doc.Fields.TableOfContent.#ctor(Spire.Doc.Interface.IDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Fields.TableOfContent"/> class.
            </summary>
            <param name="doc">The doc.</param>
        </member>
        <member name="M:Spire.Doc.Fields.TableOfContent.#ctor(Spire.Doc.Interface.IDocument,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Fields.TableOfContent"/> class.
            </summary>
            <param name="doc">The doc.</param>
            <param name="switches">The switches.</param>
        </member>
        <member name="M:Spire.Doc.Fields.TableOfContent.SetTOCLevelStyle(System.Int32,System.String)">
            <summary>
            Sets the style for TOC level.
            </summary>
            <param name="levelNumber">The level number.</param>
            <param name="styleName">Name of the style.</param>
        </member>
        <member name="M:Spire.Doc.Fields.TableOfContent.GetTOCLevelStyle(System.Int32)">
            <summary>
            Gets the style name for TOC level.
            </summary>
            <param name="levelNumber">The level number.</param>
            <returns></returns>
        </member>
        <member name="P:Spire.Doc.Fields.CheckBoxFormField.DocumentObjectType">
            <summary>
            Gets the type of the document object.
            </summary>
            <value>The type of the document object.</value>
        </member>
        <member name="P:Spire.Doc.Fields.CheckBoxFormField.CheckBoxSize">
            <summary>
            Gets or sets size of checkbox.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.CheckBoxFormField.DefaultCheckBoxValue">
            <summary>
            Gets or sets default checkbox value.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.CheckBoxFormField.Checked">
            <summary>
            Gets or sets Checked property.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.CheckBoxFormField.SizeType">
            <summary>
            Gets or sets check box size type.
            </summary>
        </member>
        <member name="M:Spire.Doc.Fields.CheckBoxFormField.#ctor(Spire.Doc.Interface.IDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Fields.CheckBoxFormField"/> class.
            </summary>
            <param name="doc"></param>
        </member>
        <member name="T:Spire.Doc.Fields.Comment">
            <summary>
            Represents a container for text of a comment.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.Comment.ChildObjects">
            <summary>
            Gets the child document objects.
            </summary>
            <value>The child entities.</value>
        </member>
        <member name="P:Spire.Doc.Fields.Comment.DocumentObjectType">
            <summary>
            Gets the type of the document object.
            </summary>
            <value>The type of the document object.</value>
        </member>
        <member name="P:Spire.Doc.Fields.Comment.Body">
            <summary>
            Gets comment body.
            </summary>
            <value>The text body.</value>
        </member>
        <member name="P:Spire.Doc.Fields.Comment.Format">
            <summary>
            Gets the format.
            </summary>
            <value>The format.</value>
        </member>
        <member name="P:Spire.Doc.Fields.Comment.Items">
            <summary>
            Gets the range of commented items.
            </summary>
            <value>The range comment contains.</value>
        </member>
        <member name="P:Spire.Doc.Fields.Comment.ReplyCommentItems">
            <summary>
            Gets the range of commented items.
            </summary>
            <value>The reply commented range.</value>
        </member>
        <member name="P:Spire.Doc.Fields.Comment.ByRepliedComment">
            <summary>
            Gets the comment of current comment replied.
            </summary>
            <value>Comment of by reply.</value>
        </member>
        <member name="P:Spire.Doc.Fields.Comment.MarkDone">
            <summary>
            Gets a value indicating whether done.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.Comment.CommentMarkStart">
            <summary>
            Gets the begining mark of the comment.
            </summary>
            <value>The commentMark of start.</value>
        </member>
        <member name="P:Spire.Doc.Fields.Comment.CommentMarkEnd">
            <summary>
            Gets the ending mark of the comment.
            </summary>
            <value>The commentMark of end.</value>
        </member>
        <member name="M:Spire.Doc.Fields.Comment.#ctor(Spire.Doc.Interface.IDocument)">
            <summary>
            Initializes a new instance of the <see cref="!:WComment"/> class.
            </summary>
            <param name="doc">The doc.</param>
        </member>
        <member name="M:Spire.Doc.Fields.Comment.Clear">
            <summary>
            Clears the commented items.
            </summary>
        </member>
        <member name="M:Spire.Doc.Fields.Comment.Replace(System.String)">
            <summary>
            Replace commented items with matchString text.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:Spire.Doc.Fields.Comment.Replace(Spire.Doc.Documents.TextBodyPart)">
            <summary>
            Replaces the commented items with specified TextBodyPart.
            </summary>
            <param name="textBodyPart">The text body part.</param>
        </member>
        <member name="M:Spire.Doc.Fields.Comment.AddItem(Spire.Doc.Interface.IParagraphBase)">
            <summary>
            Adds the paragraph item to the commented items.
            </summary>
            <param name="paraItem">The paragraph item.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Fields.Comment.ReplyToComment(Spire.Doc.Fields.Comment)">
            <summary>
            Replies to comment.
            </summary>
            <param name="replyComment">the reply comment.</param>
        </member>
        <member name="M:Spire.Doc.Fields.Comment.MarkCommentDone(System.Boolean)">
            <summary>
            Marks the comment done.
            </summary>
            <param name="done">the done.</param>
        </member>
        <member name="M:Spire.Doc.Fields.DropDownFormField.#ctor(Spire.Doc.Interface.IDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Fields.DropDownFormField"/> class.
            </summary>
            <param name="doc"></param>
        </member>
        <member name="P:Spire.Doc.Fields.DropDownFormField.DocumentObjectType">
            <summary>
            Gets the type of the document object.
            </summary>
            <value>The type of the document object.</value>
        </member>
        <member name="P:Spire.Doc.Fields.DropDownFormField.DropDownSelectedIndex">
            <summary>
            Gets or sets selected drop down index.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.DropDownFormField.DropDownItems">
            <summary>
            Gets drop down items.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.ControlField.DocumentObjectType">
            <summary>
            Gets the type of the document object.
            </summary>
            <value>The type of the document object.</value>
        </member>
        <member name="P:Spire.Doc.Fields.EmbedField.DocumentObjectType">
            <summary>
            Gets the type of the document object.
            </summary>
            <value>The type of the document object.</value>
        </member>
        <member name="P:Spire.Doc.Fields.Field.IsLocked">
            <summary>
            Gets or sets the lock property of the filed.if the field is locked,the field can't be updated.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.Field.TextFormat">
            <summary>
            Gets or sets regular text format.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.Field.DocumentObjectType">
            <summary>
            Gets the type of the document object.
            </summary>
            <value>The type of the document object.</value>
        </member>
        <member name="P:Spire.Doc.Fields.Field.Pattern">
            <summary>
            Returns or sets field pattern.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.Field.Value">
            <summary>
            Gets the field value.
            </summary>
            <value>The field value.</value>
        </member>
        <member name="P:Spire.Doc.Fields.Field.Type">
            <summary>
            Returns or sets field type
            </summary>
            <value></value>
        </member>
        <member name="P:Spire.Doc.Fields.Field.Code">
            <summary>
            Gets or sets the field code.
            </summary>
            <value>The field code.</value>
        </member>
        <member name="P:Spire.Doc.Fields.Field.Separator">
            <summary>
            Gets or sets the field separator.
            </summary>
            <value>The field separator.</value>
        </member>
        <member name="P:Spire.Doc.Fields.Field.End">
            <summary>
            Gets or sets the field end.
            </summary>
            <value>The field mark,Type of FieldEnd. </value>
        </member>
        <member name="P:Spire.Doc.Fields.Field.FieldText">
            <summary>
            Gets or Sets Filed Displays text information.
            </summary>
        </member>
        <member name="M:Spire.Doc.Fields.Field.#ctor(Spire.Doc.Interface.IDocument)">
            <summary>
            Creates Field object for specified document
            </summary>
        </member>
        <member name="M:Spire.Doc.Fields.Field.Update">
            <summary>
            Update the result of the field.
            Can only be simpler field.
            Direct calls cannot update the NumPages field and Page field, ect.
            </summary>
        </member>
        <member name="M:Spire.Doc.Fields.Field.UpdateNextIfField">
            <summary>
            Updates the next if field.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Fields.Field.UpdateUnknownField(System.Boolean)">
            <summary>
            Update the unknown field.
            </summary>
        </member>
        <member name="M:Spire.Doc.Fields.Field.UpdateFileNameField">
            <summary>
            update the file name field.
            </summary>
        </member>
        <member name="M:Spire.Doc.Fields.Field.UpdateSetField">
            <summary>
            update the set field.set the bookmark with the specified value.
            </summary>
        </member>
        <member name="M:Spire.Doc.Fields.Field.UpdatePageNumWithFormat(System.Int32,Spire.Doc.Documents.FieldNumFormat)">
            <summary>
            update the page num string with the format
            </summary>
            <param name="pageNum"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Fields.Field.GetPageNumType(System.String)">
            <summary>
            get the format by given format string
            </summary>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Fields.Field.UpdateIfField">
            <summary>
            Updates if field.
            </summary>
        </member>
        <member name="M:Spire.Doc.Fields.Field.UpdateIfField(System.Boolean)">
            <summary>
            Updates if field.
            </summary>
            <param name="setSkipObject"></param>
        </member>
        <member name="M:Spire.Doc.Fields.Field.ParseNextIfField(Spire.Doc.Fields.FieldMark,Spire.Doc.Body,Spire.Doc.Fields.IfFieldResult)">
            <summary>
            parse the IF fields result that the IF field is the next item of current IF field end mark;
            </summary>
            <param name="endMark">the current IF field end mark </param>
            <param name="ownerBody"></param>
            <param name="firstIfResultStruct">a IF field result struct</param>
        </member>
        <member name="M:Spire.Doc.Fields.Field.InsertResultsToPara(System.Collections.Generic.List{Spire.Doc.Fields.IfFieldResult},Spire.Doc.Body,Spire.Doc.Fields.FieldCodeIndex,System.Boolean)">
            <summary>
            Insert the result into the last paragraph.
            if result has paragraphs,insert the paragraphs before the last paragraph;
            </summary>
            <param name="nextIfFieldResult"></param>
            <param name="ownerBody"></param>
            <param name="endIndex"></param>
            <param name="isAddForIfField">a flag checked whether the item is added for IF field layout</param>
        </member>
        <member name="M:Spire.Doc.Fields.Field.InsertIfFieldToPara(Spire.Doc.Fields.IfFieldResult,Spire.Doc.Documents.Paragraph,System.Int32@,System.Boolean,Spire.Doc.Body)">
            <summary>
            Field result list has IF field,convert the IF field to text range ,
            and insert the text range into the given paragraph.
            </summary>
            <param name="ifFieldResultStruct"></param>
            <param name="insertedPara"></param>
            <param name="insertEndIndex"></param>
            <param name="isAddForIfField"></param>
        </member>
        <member name="M:Spire.Doc.Fields.Field.UpdateResultsList(System.Collections.Generic.List{Spire.Doc.Fields.IfFieldResult})">
            <summary>
            move the result items to the next paragraph that are not paragraph .
            </summary>
            <param name="nextIfFieldResult"></param>
        </member>
        <member name="M:Spire.Doc.Fields.Field.GetNextIfFieldResults(System.Int32,Spire.Doc.Documents.Paragraph,Spire.Doc.Fields.FieldCodeIndex@)">
            <summary>
            the the results list of the iffield which is  the next item of the previous end mark.
            </summary>
            <param name="endIndex"></param>
            <param name="ownerPara"></param>
            <param name="lastEndIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Fields.Field.HasParaInResult(System.Collections.Generic.List{Spire.Doc.DocumentObject})">
            <summary>
            return whether the result list has paragraph.
            </summary>
            <param name="resultList"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Fields.Field.GetTextRangeOfIfFieldResult(System.Collections.Generic.List{Spire.Doc.DocumentObject})">
            <summary>
            gets a list of document object which is not paragraph.
            </summary>
            <param name="resultList"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Fields.Field.SplitParaWithSameMarkIndex(Spire.Doc.Documents.Paragraph,Spire.Doc.Body,Spire.Doc.Fields.FieldCodeIndex)">
            <summary>
            split the end mark to the next paragraph when the sperator mark and end mark 
            are in the same paragrah, and the field result has paragraph.  
            </summary>
            <param name="insertPara"></param>
            <param name="ownerBody"></param>
            <param name="endCodeIndex"></param>
        </member>
        <member name="M:Spire.Doc.Fields.Field.SplitIfArguments(System.String)">
            <summary>
            Splits if arguments.
            </summary>
            <param name="text">The text.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Fields.Field.SplitFieldCode(System.Int32,System.String@,System.String@)">
            <summary>
            Splits the field code.
            </summary>
            <param name="tableStart">The table start.</param>
            <param name="text">The text.</param>
            <param name="condition">The condition.</param>
        </member>
        <member name="M:Spire.Doc.Fields.Field.SplitFieldCode(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Int32},System.Boolean,System.String@,System.String@)">
            <summary>
            Splits the field code.
            </summary>
            <param name="operators">The operators.</param>
            <param name="arguments">The arguments.</param>
            <param name="operatorIndex">Index of the operator.</param>
            <param name="isOperator">if set to <c>true</c> [is operator].</param>
            <param name="text">The text.</param>
            <param name="condition">The condition.</param>
        </member>
        <member name="M:Spire.Doc.Fields.Field.IsOperator(System.Collections.Generic.List{System.String},System.String@,System.String@)">
            <summary>
            Determines whether the specified operators is operator.
            </summary>
            <param name="operators">The operators.</param>
            <param name="text">The text.</param>
            <param name="condition">The condition.</param>
            <returns>
            	<c>true</c> if the specified operators is operator; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Spire.Doc.Fields.Field.GetOperatorIndex(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Gets the index of the operator.
            </summary>
            <param name="operators">The operators.</param>
            <param name="text">The text.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Fields.Field.GetTextInTable(System.String@)">
            <summary>
            Gets the text in table.
            </summary>
            <param name="text">The text.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Fields.Field.UpdateCondition(System.String)">
            <summary>
            Updates the condition.
            </summary>
            <param name="text">The text.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Fields.Field.UpdateCompareField">
            <summary>
            Updates the compare field.
            </summary>
        </member>
        <member name="M:Spire.Doc.Fields.Field.CompareExpression(System.Double,System.Double,System.String)">
            <summary>
            Compares the expression.
            </summary>
            <param name="operand1">The operand1.</param>
            <param name="operand2">The operand2.</param>
            <param name="operation">The operation.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Fields.Field.UpdateFormulaField">
            <summary>
            Updates the formula field.
            </summary>
        </member>
        <member name="M:Spire.Doc.Fields.Field.GetFieldCodeRange(Spire.Doc.Documents.Paragraph)">
            <summary>
            get the textrange items which are between field and fieldMark
            </summary>
            <param name="para"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Fields.Field.GetFieldCode(Spire.Doc.Documents.Paragraph)">
            <summary>
            merge the code textrange items for a field code
            </summary>
            <param name="para"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Fields.Field.SetSkip(Spire.Doc.Body,System.Collections.Generic.List{Spire.Doc.Fields.IfFieldResult})">
            <summary>
            skip the items which is between the startIndex and EndIndex;
            </summary>
            <param name="ownerBody"></param>
            <param name="fieldCodeIndexList"></param>
        </member>
        <member name="P:Spire.Doc.Fields.NestedFieldCodeOfObjects.EndPosInParagraph">
            <summary>
            Gets/sets the end pos in the paragraph.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.NestedFieldCodeOfObjects.HasFieldSeparator">
            <summary>
            Gets/sets the has field separator.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.NestedFieldCodeOfObjects.NestedFieldCode">
            <summary>
            Gets nested field code.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.NestedFieldCodeOfObjects.Length">
            <summary>
            Gets the length of the nested field code.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.NestedFieldCodeOfObjects.StartPosInParagraph">
            <summary>
            Gets/sets the start pos in the paragraph.
            </summary>
        </member>
        <member name="M:Spire.Doc.Fields.NestedFieldCodeOfObjects.GetResultPosition(Spire.Doc.Fields.FieldsResult)">
            <summary>
            Get result position.
            </summary>
            <param name="ifFieldResult">The ifFieldResult.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Fields.NestedFieldCodeOfObjects.GetResultPosition(Spire.Doc.Fields.FieldsResult,Spire.Doc.Fields.NestedFieldCodeOfObjects)">
            <summary>
            get the result position based on the nested filed code objects.
            </summary>
            <param name="ifFieldResult"></param>
            <param name="codeObjects"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Fields.NestedFieldCodePart.#ctor">
            <summary>
            initialize nested field code part.
            </summary>
        </member>
        <member name="M:Spire.Doc.Fields.NestedFieldCodePart.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            initialize nested field code part.
            </summary>
            <param name="fieldcode">the field code string.</param>
            <param name="startpos">the start pos.</param>
            <param name="endpos">the end pos.</param>
            <param name="index">the index of the paragraph.</param>
        </member>
        <member name="M:Spire.Doc.Fields.NestedFieldCodePart.Add(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
             add items.
            </summary>       
            <param name="fieldcode">the field code string.</param>
            <param name="startpos">the start pos.</param>
            <param name="endpos">the end pos.</param>
            <param name="index">the index of the paragraph.</param>
        </member>
        <member name="T:Spire.Doc.Fields.FieldsResult">
            <summary>
            Fields result struct.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.FieldsResult.IsEmpty">
            <summary>
            Gets is empty of the object.
            </summary>
        </member>
        <member name="M:Spire.Doc.Fields.FieldsResult.GetStringBetweenTwoDoubleQuotes">
            <summary>
            take a string between two double quotes.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Spire.Doc.Fields.IfFieldResultPosition">
            <summary>
            IfField result position struct.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.IfFieldResultPosition.EndPos">
            <summary>
            Gets/sets the end position.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.IfFieldResultPosition.StartPos">
            <summary>
            Gets/sets the start position.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.IfFieldResultPosition.HasValue">
            <summary>
            Get the has value.
            </summary>
        </member>
        <member name="T:Spire.Doc.Fields.FieldCodeIndex">
            <summary>
            Field code index.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.FieldCodeIndex.ParaInBodyIndex">
            <summary>
            Gets/sets the paragraph index in the body.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.FieldCodeIndex.ParaItemInParaIndex">
            <summary>
            Gets/sets the paragraph items index in the paragraph.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.FieldCodeIndex.HasValue">
            <summary>
            Get the has value.
            </summary>
        </member>
        <member name="T:Spire.Doc.Fields.IfFieldResult">
            <summary>
            a struct for IF field result,includes a flag check whether the result is true result,
            a result list ,a start code index and a end code index;
            </summary>
        </member>
        <member name="T:Spire.Doc.Fields.UpdateFieldsHandler">
            <summary>
            Represents the method that will handle an event that with event data.
            </summary>
            <param name="sender">The source of the event</param>
            <param name="args">The <see cref="T:Spire.Doc.Fields.IFieldsEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Spire.Doc.Fields.IFieldsEventArgs">
            <summary>
            Interface IFieldsEventArgs
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.IFieldsEventArgs.Field">
            <summary>
            Gets the field.
            </summary>
        </member>
        <member name="T:Spire.Doc.Fields.AskFieldEventArgs">
            <summary>
            Class AskFieldEventArgs;
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.AskFieldEventArgs.Field">
            <summary>
            Gets 
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.AskFieldEventArgs.PromptText">
            <summary>
            Gets the prompt text;
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.AskFieldEventArgs.DefaultResponse">
            <summary>
            Gets the default response.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.AskFieldEventArgs.ResponseText">
            <summary>
            Gets or sets the response text.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.AskFieldEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether cancel to answer the question.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.AskFieldEventArgs.ResponseTextEx">
            <summary>
            Gets the response text.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.AskFieldEventArgs.BookmarkName">
            <summary>
            Gets the name of bookmark.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.FieldMark.DocumentObjectType">
            <summary>
            Gets the type of the document object.
            </summary>
            <value>The type of the document object.</value>
        </member>
        <member name="P:Spire.Doc.Fields.FieldMark.Type">
            <summary>
            Gets or sets type of field mark. 
            </summary>
        </member>
        <member name="M:Spire.Doc.Fields.FieldMark.#ctor(Spire.Doc.Interface.IDocument,Spire.Doc.Documents.FieldMarkType)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Fields.FieldMark"/> class.
            </summary>
            <param name="doc">The doc.</param>
            <param name="type">The type.</param>
        </member>
        <member name="P:Spire.Doc.Fields.Footnote.Id">
            <summary>
            add for online
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.Footnote.DocumentObjectType">
            <summary>
            Gets the type of the document object.
            </summary>
            <value>The type of the document object.</value>
        </member>
        <member name="P:Spire.Doc.Fields.Footnote.FootnoteType">
            <summary>
            Gets or sets footnote type: footnote or endnote
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.Footnote.IsAutoNumbered">
            <summary>
            Gets or sets the value indicating if the footnote is auto numbered
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.Footnote.TextBody">
            <summary>
            Gets the text body of the footnote.
            </summary>
            <value>The text body.</value>
        </member>
        <member name="P:Spire.Doc.Fields.Footnote.MarkerCharacterFormat">
            <summary>
            Gets the marker character format
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.Footnote.SymbolCode">
            <summary>
            Gets or sets the marker symbol code.
            </summary>
            <value>The symbol code.</value>
        </member>
        <member name="P:Spire.Doc.Fields.Footnote.CustomMarker">
            <summary>
            Gets or sets the custom footnote marker.
            </summary>
            <value>The custom marker.</value>
        </member>
        <member name="M:Spire.Doc.Fields.Footnote.#ctor(Spire.Doc.Interface.IDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Fields.Footnote"/> class.
            </summary>
            <param name="doc">The doc.</param>
        </member>
        <member name="P:Spire.Doc.Fields.FormField.FormFieldType">
            <summary>
            Gets type of this form field.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.FormField.Name">
            <summary>
            Gets or sets form field title name (bookmark name).
            The name is unique in the document.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.FormField.Help">
            <summary>
            Gets or sets form field help.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.FormField.StatusBarHelp">
            <summary>
            Gets or sets the status bar help.
            </summary>
            <value>The status bar help.</value>
        </member>
        <member name="P:Spire.Doc.Fields.FormField.MacroOnStart">
            <summary>
            Returns or setsthe name of macros on start
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.FormField.MacroOnEnd">
            <summary>
            Returns or setsthe name of macros on end
            </summary>
        </member>
        <member name="M:Spire.Doc.Fields.FormField.ApplyFormFieldFormat(Spire.Doc.Formatting.FormFieldPr)">
            <summary>
            Sets the FormField format.
            </summary>
            <param name="charFormat">The character format.</param>
        </member>
        <member name="P:Spire.Doc.Fields.FormField.Enabled">
            <summary>
            Get/sets Enabled property (true if form field enabled).
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.FormField.CalculateOnExit">
            <summary>
            Gets or sets calculate on exit property.
            </summary>
        </member>
        <member name="M:Spire.Doc.Fields.FormField.#ctor(Spire.Doc.Interface.IDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Fields.FormField"/> class.
            </summary>
            <param name="doc"></param>
        </member>
        <member name="M:Spire.Doc.Fields.IfField.#ctor(Spire.Doc.Interface.IDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Fields.IfField"/> class.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.MergeField.DocumentObjectType">
            <summary>
            Gets the type of the document object.
            </summary>
            <value>The type of the document object.</value>
        </member>
        <member name="P:Spire.Doc.Fields.MergeField.FieldName">
            <summary>
            Returns or sets field name
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.MergeField.TextBefore">
            <summary>
            Returns or sets the text before merge field
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.MergeField.TextAfter">
            <summary>
            Returns or sets the text after merge field
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.MergeField.Prefix">
            <summary>
            Gets the prefix of merge field.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.MergeField.NumberFormat">
            <summary>
            Gets the number format.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.MergeField.DateFormat">
            <summary>
            Gets the date format.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.MergeField.TextItems">
            <summary>
            Gets the text items.
            </summary>
            <value>The text items.</value>
        </member>
        <member name="M:Spire.Doc.Fields.MergeField.#ctor(Spire.Doc.Interface.IDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Fields.MergeField"/> class.
            </summary>
            <param name="doc">The document</param>
        </member>
        <member name="M:Spire.Doc.Fields.MergeField.HasGroupTag(System.String)">
            <summary>
            Has GroupStart, GroupEnd, TableStart, TableEnd, Image tag.
            </summary>
            <param name="fieldName">The field names.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Fields.MergeField.UpdateFieldValueWithFormat(System.String)">
            <summary>
            update the result of the merge field with format.
            </summary>
            <param name="mText"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Fields.MergeField.UpdateFieldValueWithFormat">
            <summary>
            update the result of the merge field with format.
            </summary>
        </member>
        <member name="M:Spire.Doc.Fields.MergeField.UpdateMergeFieldNum(System.String)">
            <summary>
            update the result (number) of the merge field 
            </summary>
        </member>
        <member name="M:Spire.Doc.Fields.MergeField.UpdateMergeFieldDate(System.String)">
            <summary>
            update the result( date) of the merge field 
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.WRuby.DocumentObjectType">
            <summary>
            Gets the type of the document object.
            </summary>
            <value>The type of the document object.</value>
        </member>
        <member name="P:Spire.Doc.Fields.WRuby.RubyText">
            <summary>
            Specifies the presence of the guide text within a phonetic guide at the current location in the
            document.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.WRuby.RubyTextFontSize">
            <summary>
            Specifies the font size which shall be applied to the phonetic guide text in the contents of this run
            when displayed.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.WRuby.RaiseSapcing">
            <summary>
            Specifies the distance which shall be left between the phonetic guide base text and the phonetic
            guide text when this phonetic guide text is displayed.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.WRuby.RubyAlign">
            <summary>
            Specifies the alignment setting which shall be used to determine the placement of phonetic guide
            text with respect to the base text when this phonetic guide is displayed.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.WRuby.RubyBaseTextFontSize">
            <summary>
            Specifies the font size which shall be applied to the base text of this phonetic guide text when
            displayed. 
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.DocPicture.AllowOverlap">
            <summary>
            Gets or sets a value specifies whether a shape can overlap anothe shape.
            Defalt is true.If false,the shape shifts left or right so as not
            to overlap another shape.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.DocPicture.AlphaMod">
            <summary>
            Gets or sets a value. this element represents an alpha modulate effect.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.DocPicture.AlphaModFix">
            <summary>
            Gets or sets a value specifies the percentage amount to scale the alpha.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.DocPicture.HasBorder">
            <summary>
            Gets a value indicating whether this instance has borders.
            </summary>
            <value>
            	<c>true</c> if this instance has borders; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Spire.Doc.Fields.DocPicture.HasImage">
            <summary>
            Gets a value indicating whether this instance has image.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.DocPicture.Borders">
            <summary>
            Gets/Sets object borders.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.DocPicture.Rotation">
            <summary>
            Gets/Sets the rotation of DocPicture.Specifies the rotation of the graphic frame.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.DocPicture.WrapPolygonEx">
            <summary>
            Get the wrapping polygon.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.DocPicture.DocumentObjectType">
            <summary>
            Gets the type of the document object.
            </summary>
            <value>The type of the document object.</value>
        </member>
        <member name="P:Spire.Doc.Fields.DocPicture.Height">
            <summary>
            Returns or sets picture height.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.DocPicture.Width">
            <summary>
            Returns or sets picture width.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.DocPicture.OriginalPicHeight">
            <summary>
            Returns the original height from the byte data of the image
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.DocPicture.OriginalPicWidth">
            <summary>
            Returns the original width from the byte data of the image
            </summary>
        </member>
        <member name="M:Spire.Doc.Fields.DocPicture.SetScale(System.Single)">
            <summary>
            Scale the image by scale factor.
            </summary>
            <param name="factor">The scale factor. The default unit is percentage.</param>
        </member>
        <member name="M:Spire.Doc.Fields.DocPicture.SetScale(System.Single,System.Single)">
            <summary>
            Scale the image by scale factor.
            </summary>
            <param name="heightFactor">The height scale factor. The default unit is percentage.</param>
            <param name="widthFactor">The width scale factor. The default unit is percentage.</param>
        </member>
        <member name="P:Spire.Doc.Fields.DocPicture.Image">
            <summary>
            Gets internal System.Drawing.Image object.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.DocPicture.ImageBytes">
            <summary>
            Gets image byte array.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.DocPicture.Color">
            <summary>
            Gets or sets picture color.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.DocPicture.TransparentColor">
            <summary>
            Gets or sets transparent color
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.DocPicture.CropRectangle">
            <summary>
            Gets the cropped rectangle of picture object.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.DocPicture.IsCrop">
            <summary>
            Gets whether the picture object is cropped.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.DocPicture.HorizontalOrigin">
            <summary>
            Gets or sets horizontal origin of the picture.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.DocPicture.VerticalOrigin">
            <summary>
            Gets or sets absolute horizontal position of the picture.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.DocPicture.HorizontalPosition">
            <summary>
            Gets or sets absolute horizontal position of the picture.
            </summary>
            <remarks>
            The value is measured in points and the position is relative to HorizontalOrigin.
            </remarks>
        </member>
        <member name="P:Spire.Doc.Fields.DocPicture.VerticalPosition">
            <summary>
            Gets or sets absolute vertical position of the picture.
            </summary>
            <remarks>
            The value is measured in points and the position is relative to VerticalOrigin.
            </remarks>
        </member>
        <member name="P:Spire.Doc.Fields.DocPicture.TextWrappingStyle">
            <summary>
            Gets or sets text wrapping style of the picture.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.DocPicture.TextWrappingType">
            <summary>
            Gets or sets text wrapping type of the picture.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.DocPicture.HorizontalAlignment">
            <summary>
            Returns or setspicture horizontal alignment.
            </summary>
            <remarks>
            If it is set as None, then the picture is explicitly positioned using position properties.
            Otherwise it is positioned according to the alignment specified. The position of the object is relative to HorizontalOrigin.
            </remarks>
        </member>
        <member name="P:Spire.Doc.Fields.DocPicture.VerticalAlignment">
            <summary>
            Returns or setspicture vertical alignment.
            </summary>
            <remarks>
            If it is set as None, then the picture is explicitly positioned using position properties. 
            Otherwise it is positioned according to the alignment specified. The position of the object is relative to VerticalOrigin.
            </remarks>
        </member>
        <member name="P:Spire.Doc.Fields.DocPicture.IsUnderText">
            <summary>
            Gets or sets whether picture is below image.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.DocPicture.CharacterFormat">
            <summary>
            Gets shape object's character format.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.DocPicture.Title">
            <summary>
            Gets the picture title.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:Spire.Doc.Fields.DocPicture.LayoutInCell">
            <summary>
            Gets or sets the boolean value that represents whether a picture in a table is displayed inside or outside the table.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.DocPicture.InTableCellBounds">
            <summary>
            Gets or sets the picture bounds in the table cell.
            </summary>
        </member>
        <member name="M:Spire.Doc.Fields.DocPicture.#ctor(Spire.Doc.Interface.IDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Fields.DocPicture"/> class.
            </summary>
            <param name="doc">The doc.</param>
        </member>
        <member name="M:Spire.Doc.Fields.DocPicture.SetHeightScale(System.Single)">
            <summary>
            Sets the height scale.
            </summary>
            <param name="heightScale">The height scale.</param>
        </member>
        <member name="M:Spire.Doc.Fields.DocPicture.SetWidthScale(System.Single)">
            <summary>
            Sets the width scale.
            </summary>
            <param name="widthScale">The width scale.</param>
        </member>
        <member name="M:Spire.Doc.Fields.DocPicture.LoadImage(System.Drawing.Image)">
            <summary>
            Loads image.
            </summary>
        </member>
        <member name="M:Spire.Doc.Fields.DocPicture.LoadImage(System.String)">
            <summary>
            Loads the image.
            </summary>
            <param name="imgFile">The img file.</param>
        </member>
        <member name="M:Spire.Doc.Fields.DocPicture.LoadImage(System.IO.Stream)">
            <summary>
            Loads the image.
            </summary>
            <param name="imgStream">The img stream.</param>
        </member>
        <member name="M:Spire.Doc.Fields.DocPicture.LoadImage(System.Byte[])">
            <summary>
            Loads image as bytes array.
            </summary>
            <param name="imageBytes"></param>
        </member>
        <member name="M:Spire.Doc.Fields.DocPicture.ReplaceImage(System.Byte[])">
            <summary>
            Replaces the image.
            </summary>
            <param name="imageBytes">The image bytes.</param>
        </member>
        <member name="M:Spire.Doc.Fields.DocPicture.ReplaceImage(System.Byte[],System.Boolean)">
            <summary>
            Replaces the image.
            </summary>
            <param name="imageBytes">The image bytes.</param>
            <param name="bIsKeepRation"></param>
        </member>
        <member name="M:Spire.Doc.Fields.DocPicture.AddCaption(System.String,Spire.Doc.CaptionNumberingFormat,Spire.Doc.CaptionPosition)">
            <summary>
            Add Caption for current Picture
            </summary>
            <param name="captionPosition"></param>
            <param name="name"></param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="P:Spire.Doc.Fields.SequenceField.DocumentObjectType">
            <summary>
            Gets the type of the document object.
            </summary>
            <value>The type of the document object.</value>
        </member>
        <member name="P:Spire.Doc.Fields.SequenceField.FormattingString">
            <summary>
            Gets the formatting string
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.SequenceField.NumberFormat">
            <summary>
            Returns or setsthe type of caption numbering
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.SequenceField.CaptionName">
            <summary>
            Returns or sets caption name
            </summary>
        </member>
        <member name="M:Spire.Doc.Fields.SequenceField.#ctor(Spire.Doc.Interface.IDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Fields.SequenceField"/> class.
            </summary>
            <param name="doc"></param>
        </member>
        <member name="P:Spire.Doc.Fields.Symbol.DocumentObjectType">
            <summary>
            Gets the type of the document object.
            </summary>
            <value>The type of the document object.</value>
        </member>
        <member name="P:Spire.Doc.Fields.Symbol.CharacterFormat">
            <summary>
            Gets character format for the symbol.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.Symbol.FontName">
            <summary>
            Returns or setssymbol font name.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.Symbol.CharacterCode">
            <summary>
            Returns or sets symbol's character code.
            </summary>
        </member>
        <member name="M:Spire.Doc.Fields.Symbol.#ctor(Spire.Doc.Interface.IDocument)">
            <summary>
            Initializing constructor.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.TextBox.ChildObjects">
            <summary>
            Gets the child entities.
            </summary>
            <value>The child entities.</value>
        </member>
        <member name="P:Spire.Doc.Fields.TextBox.DocumentObjectType">
            <summary>
            Gets the type of the document object.
            </summary>
            <value>The type of the document object.</value>
        </member>
        <member name="P:Spire.Doc.Fields.TextBox.Format">
            <summary>
            Gets the format value.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.TextBox.Body">
            <summary>
            Get/set TextBody value
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.TextBox.CharacterFormat">
            <summary>
            Gets the character format.
            </summary>
            <value>The character format.</value>
        </member>
        <member name="M:Spire.Doc.Fields.TextBox.#ctor(Spire.Doc.Interface.IDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Fields.TextBox"/> class.
            </summary>
            <param name="doc">The document.</param>
        </member>
        <member name="P:Spire.Doc.Fields.TextFormField.DocumentObjectType">
            <summary>
            Gets the type of the document object.
            </summary>
            <value>The type of the document object.</value>
        </member>
        <member name="P:Spire.Doc.Fields.TextFormField.TextFieldType">
            <summary>
            Get/sets text form field type.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.TextFormField.StringFormat">
            <summary>
            Gets or sets string text format (text, date/time, number) directly.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.TextFormField.DefaultText">
            <summary>
            Gets or sets default text for text form field.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.TextFormField.MaximumLength">
            <summary>
            Gets or sets maximum text length.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.TextFormField.TextRange">
            <summary>
            Gets or sets form field text range;
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.TextFormField.Text">
            <summary>
            Returns or setsthe text of text form field.
            </summary>
            <value></value>
        </member>
        <member name="M:Spire.Doc.Fields.TextFormField.#ctor(Spire.Doc.Interface.IDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Fields.TextFormField"/> class.
            </summary>
            <param name="doc"></param>
        </member>
        <member name="P:Spire.Doc.Fields.TextRange.DocumentObjectType">
            <summary>
            Gets the type of the document object.
            </summary>
            <value>The type of the document object.</value>
        </member>
        <member name="P:Spire.Doc.Fields.TextRange.Spire#Doc#OldLayout#IDocumentBase#LayoutInfo">
            <summary>
            in case one textRange is split into several trs
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.TextRange.Text">
            <summary>
            Returns or sets text.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.TextRange.IsAddForEmptyPara">
            <summary>
            if the text range is added for an empty paragraph ,return true; otherwise,false.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.TextRange.IsAddForBreak">
            <summary>
            if the text range is added for Break ,return true; otherwise,false.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.TextRange.IsFieldToTextRange">
            <summary>
            a flag specified that whehter the textrange is converted from a field.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.TextRange.FieldOwner">
            <summary>
            get the owner of the field
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.TextRange.CharacterFormat">
            <summary>
            Gets the character format.
            </summary>
        </member>
        <member name="P:Spire.Doc.Fields.TextRange.Spire#Doc#OldLayout#IStringWidget#DrawFieldText">
            <summary>
            Indicates whether current TextRange can be split
            </summary>
        </member>
        <member name="M:Spire.Doc.Fields.TextRange.#ctor(Spire.Doc.Interface.IDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Fields.TextRange"/> class.
            </summary>
            <param name="doc">The doc.</param>
        </member>
        <member name="M:Spire.Doc.Fields.TextRange.GetPunctuationMaxWidth(System.Boolean)">
            <summary>
            get the total width of punctuations in the textrange.
            </summary>
            <returns></returns>      
        </member>
        <member name="M:Spire.Doc.Fields.TextRange.UpdatePunctuationWidth(Spire.Doc.Documents.Rendering.DrawingContext,System.Boolean)">
            <summary>
            update the width of the punctuation
            </summary>
            <param name="dc"></param>
            <param name="hasLayoutInfo"></param>
        </member>
        <member name="T:Spire.Doc.PdfConformanceLevel">
            <summary>
            Specifies the Pdf document's Conformance.
            </summary>
        </member>
        <member name="F:Spire.Doc.PdfConformanceLevel.None">
            <summary>
            Specifies Default / No Conformance.
            </summary>
        </member>
        <member name="F:Spire.Doc.PdfConformanceLevel.Pdf_A1B">
            <summary>
            This PDF/A ISO standard [ISO 19005-1:2005] is based on Adobe PDF version 1.4
            and This Level B conformance indicates minimal compliance to ensure that the 
            rendered visual appearance of a conforming file is preservable over the long term.
            </summary>
        </member>
        <member name="F:Spire.Doc.PdfConformanceLevel.Pdf_X1A2001">
            <summary>
            This PDF/X-1a:2001 ISO standard [ISO 15930-1] is based on Adobe PDF version 1.3
            which uses only CMYK + Spot Color and this compliance to ensure that the 
            contents will be reliably reproduced in the repress environment.
            </summary>
        </member>
        <member name="F:Spire.Doc.PdfConformanceLevel.Pdf_A1A">
            <summary>
            PDF/A-1a ensures the preservation of a document's logical structure and con-tent text stream in natural reading order. 
            </summary>
        </member>
        <member name="F:Spire.Doc.PdfConformanceLevel.Pdf_A2A">
            <summary>
            PDF/A-2a standard,Only check the standard from the pdfaid:part and pdfaid:conformance node,And only check.
            </summary>
        </member>
        <member name="F:Spire.Doc.PdfConformanceLevel.Pdf_A2B">
            <summary>
            PDF/A-2b standard,Only check the standard from the pdfaid:part and pdfaid:conformance node,And only check.
            </summary>
        </member>
        <member name="F:Spire.Doc.PdfConformanceLevel.Pdf_A3A">
            <summary>
            PDF/A-3a standard,Only check the standard from the pdfaid:part and pdfaid:conformance node,And only check
            </summary>
        </member>
        <member name="F:Spire.Doc.PdfConformanceLevel.Pdf_A3B">
            <summary>
            PDF/A-3b standard,Only check the standard from the pdfaid:part and pdfaid:conformance node,And only check
            </summary>
        </member>
        <member name="T:Spire.Doc.PdfEncryptionKeySize">
            <summary>
            Specifies length of the encryption key for encryption.
            </summary>
        </member>
        <member name="F:Spire.Doc.PdfEncryptionKeySize.Key40Bit">
            <summary>
            The key is 40 bit long.
            </summary>
        </member>
        <member name="F:Spire.Doc.PdfEncryptionKeySize.Key128Bit">
            <summary>
            The key is 128 bit long.
            </summary>
        </member>
        <member name="F:Spire.Doc.PdfEncryptionKeySize.Key256Bit">
            <summary>
            The key is 256 bit long.
            </summary>
        </member>
        <member name="T:Spire.Doc.PdfPermissionsFlags">
            <summary>
            Specifies the available permissions set for the signature.
            </summary>
        </member>
        <member name="F:Spire.Doc.PdfPermissionsFlags.None">
            <summary>
            Not all permissions
            </summary>
        </member>
        <member name="F:Spire.Doc.PdfPermissionsFlags.Default">
            <summary>
            Default value is 2876. A common document contains all privileges
            </summary>
        </member>
        <member name="F:Spire.Doc.PdfPermissionsFlags.Print">
            <summary>
            Print the document.
            </summary>
        </member>
        <member name="F:Spire.Doc.PdfPermissionsFlags.EditContent">
            <summary>
            Edit content.
            </summary>
        </member>
        <member name="F:Spire.Doc.PdfPermissionsFlags.CopyContent">
            <summary>
            Copy content.
            </summary>
        </member>
        <member name="F:Spire.Doc.PdfPermissionsFlags.EditAnnotations">
            <summary>
            Add or modify text annotations, fill in interactive form fields.
            </summary>
        </member>
        <member name="F:Spire.Doc.PdfPermissionsFlags.FillFields">
            <summary>
            Fill form fields. (Only for 128 bits key).
            </summary>
        </member>
        <member name="F:Spire.Doc.PdfPermissionsFlags.AccessibilityCopyContent">
            <summary>
            Copy accessibility content.
            </summary>
        </member>
        <member name="F:Spire.Doc.PdfPermissionsFlags.AssembleDocument">
            <summary>
            Assemble document permission. (Only for 128 bits key).
            </summary>
        </member>
        <member name="F:Spire.Doc.PdfPermissionsFlags.FullQualityPrint">
            <summary>
            Full quality print.
            </summary>
        </member>
        <member name="T:Spire.Doc.PdfSecurity">
            <summary>
            Represents the security settings of the PDF document.
            </summary>
        </member>
        <member name="P:Spire.Doc.PdfSecurity.OwnerPassword">
            <summary>
            Gets the owner password.
            </summary>
        </member>
        <member name="P:Spire.Doc.PdfSecurity.UserPassword">
            <summary>
            Gets the user password.
            </summary>
        </member>
        <member name="M:Spire.Doc.PdfSecurity.Encrypt(System.String)">
            <summary>
            To Encrypt the PDF document with open password.
            Note:If set empty string value to open password, it indicates that the PDF document can be operated without providing corresponding password. 
            Note: the document owner password should not be exist.
            </summary>
            <param name="openPassword">The open password</param>
        </member>
        <member name="M:Spire.Doc.PdfSecurity.Encrypt(System.String,Spire.Doc.PdfPermissionsFlags)">
            <summary>
            To Encrypt the PDF document with permission password and permissions.
            Note:The Permission password can't be empty string.
            </summary>
            <param name="permissionPassword">The permission password</param>
            <param name="permissions">A set of flags specifying which operations are permitted when the document is opened with user access</param>
        </member>
        <member name="M:Spire.Doc.PdfSecurity.Encrypt(System.String,System.String,Spire.Doc.PdfPermissionsFlags,Spire.Doc.PdfEncryptionKeySize)">
            <summary>
            To Encrypt the PDF document and set the encryption key size and permissions.
            Note:If set empty string value to open password or permission password, it indicates that the PDF document can be operated without providing corresponding password. 
            </summary>
            <param name="openPassword">The open password</param>
            <param name="permissionPassword">The permission password</param>
            <param name="permissions">A set of flags specifying which operations are permitted when the document is opened with user access</param>
            <param name="keySize">The bit length of the encryption key</param>
            <returns></returns>       
        </member>
        <member name="P:Spire.Doc.PdfSecurity.Permissions">
            <summary>
            Gets the document's permission flags
            </summary>
        </member>
        <member name="P:Spire.Doc.PdfSecurity.KeySize">
            <summary>
            Gets the size of the key.
            </summary>
        </member>
        <member name="M:Spire.Doc.PdfSecurity.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="T:Spire.Doc.ToPdfParameterList">
            <summary>
            To Pdf ParameterList 
            </summary>
        </member>
        <member name="P:Spire.Doc.ToPdfParameterList.MimicWPSLayout">
            <summary>
            Gets or sets a value indicating whether to mimic the layout of WPS Application.
            The default value is false.
            </summary>
        </member>
        <member name="P:Spire.Doc.ToPdfParameterList.UpdateFields">
            <summary>
            Gets or sets a value indicating whether to change the fields before 
            saving the document when using the new engine.
            The default value is true.
            </summary>
        </member>
        <member name="P:Spire.Doc.ToPdfParameterList.UsePSCoversion">
            <summary>
            Gets or sets a value indicating whether use the PS conversion.
            </summary>
            <value><c>true</c> if use the PS conversion;otherwise,<c>false</c>.</value>
        </member>
        <member name="P:Spire.Doc.ToPdfParameterList.IsHidden">
            <summary>
            Gets or sets hidden text is converted.
            </summary>
        </member>
        <member name="P:Spire.Doc.ToPdfParameterList.EmbeddedFontNameList">
            <summary>
            Gets or sets Embedded into the PDF document font name.
            </summary>
        </member>
        <member name="P:Spire.Doc.ToPdfParameterList.IsEmbeddedAllFonts">
            <summary>
            Gets or sets all fonts are embedded in the PDF document.
            </summary>
        </member>
        <member name="P:Spire.Doc.ToPdfParameterList.DisableLink">
            <summary>
            gets or sets whether remove the link on the hyperlink and keep the character format
            during converting to pdf. 
            </summary>
        </member>
        <member name="P:Spire.Doc.ToPdfParameterList.IsAtLast">
            <summary>
            Gets or sets To Pdf TextBox HeightType.The default is "Exactly".
            </summary>
        </member>
        <member name="P:Spire.Doc.ToPdfParameterList.PdfConformanceLevel">
            <summary>
            Gets or sets the Pdf document's Conformance-level.
            </summary>
        </member>
        <member name="P:Spire.Doc.ToPdfParameterList.PdfSecurity">
            <summary>
            Represents the security settings of the PDF document.
            </summary>
        </member>
        <member name="P:Spire.Doc.ToPdfParameterList.PrivateFontPaths">
            <summary>
            Gets or sets the private font paths.
            </summary>
        </member>
        <member name="P:Spire.Doc.ToPdfParameterList.CreateWordBookmarksUsingHeadings">
            <summary>
            Gets or set the a value that determines whether create the bookmarks using Headings.
            </summary>
        </member>
        <member name="P:Spire.Doc.ToPdfParameterList.CreateWordBookmarks">
            <summary>
            Gets or set the a value, Whether to use word bookmars when create the bookmarks.
            </summary>
        </member>
        <member name="P:Spire.Doc.ToPdfParameterList.WordBookmarksTitle">
            <summary>
            Gets or sets the word bookmarks title. The default value for this title is null.
            </summary>
            <value>The word bookmarks title.</value>
        </member>
        <member name="P:Spire.Doc.ToPdfParameterList.WordBookmarksColor">
            <summary>
            Gets or sets the text color of the word bookmarks.
            the default value is the "SaddleBrown" color(#FF8B4513).
            </summary>
            <value>The text color of the word boomarks. </value>
        </member>
        <member name="P:Spire.Doc.ToPdfParameterList.WordBookmarksTextStyle">
            <summary>
            Gets or sets the text style of the word bookmarks.
            The default value is the Bold.
            </summary>
            <value>The word bookmarks text style.</value>
        </member>
        <member name="M:Spire.Doc.Layout.Core.LineBreakpointFinder.SpanBeIncludedIntoFitTextRegion">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Layout.Core.LineBreakpointFinder.GetBreakpointFinderInfo(System.Boolean,Spire.Doc.Layout.Core.KinsokuHandler)">
            <summary>
            SpanTabOrBreakableSpaceOrKinsokuText
            </summary>
            <param name="isBreakableSpace"></param>
            <param name="kinsokuHandler"></param>
            <returns></returns>
        </member>
        <member name="T:Spire.Doc.Layout.CommentDisplayMode">
            <summary>
            Specifies the rendering mode for document comments.
            </summary>
        </member>
        <member name="F:Spire.Doc.Layout.CommentDisplayMode.Hide">
            <summary>
            No document comments are rendered.
            </summary>
        </member>
        <member name="F:Spire.Doc.Layout.CommentDisplayMode.ShowInBalloons">
            <summary>
            Renders document comments in balloons in the margin. This is the default value.
            </summary>
        </member>
        <member name="F:Spire.Doc.Layout.CommentDisplayMode.ShowInAnnotations">
            <summary>
             Renders document comments in annotations. This is only available for Pdf format.
            </summary>
        </member>
        <member name="T:Spire.Doc.Layout.ContinuousSectionRestart">
            <summary>
            Represents different behaviors when computing page numbers in a continuous section that restarts page numbering.
            </summary>
        </member>
        <member name="F:Spire.Doc.Layout.ContinuousSectionRestart.Always">
            <summary>
            Page numbering always restarts regardless of content flow.
            </summary>
            <remarks>
            This behavior is demonstrated by all MS Word versions, except Word 2016.
            </remarks>
        </member>
        <member name="F:Spire.Doc.Layout.ContinuousSectionRestart.FromNewPageOnly">
            <summary>
            Page numbering restarts only if there is no other content before the section on the page where the section starts.
            </summary>
            <remarks>
            The behavior is demonstrated by MS Word 2016.
            </remarks>
        </member>
        <member name="T:Spire.Doc.Layout.IPageLayoutCallback">
            <summary>
            Implement this interface if you want to have your own custom method called during build and rendering of page layout model.
            </summary>
        </member>
        <member name="M:Spire.Doc.Layout.IPageLayoutCallback.Notify(Spire.Doc.Layout.PageLayoutCallbackArgs)">
            <summary>
             This is called to notify of layout build and rendering progress.
            </summary>
        </member>
        <member name="P:Spire.Doc.Layout.PageLayoutCallbackArgs.Event">
            <summary>
            Gets event.
            </summary>
        </member>
        <member name="P:Spire.Doc.Layout.PageLayoutCallbackArgs.Document">
            <summary>
            Gets document.
            </summary>      
        </member>
        <member name="P:Spire.Doc.Layout.PageLayoutCallbackArgs.PageIndex">
            <summary>
            Gets 0-based index of the page in the document this event relates to.
            Returns negative value if there is no associated page, or if page was removed during reflow.
            </summary>
        </member>
        <member name="T:Spire.Doc.Layout.PageLayoutEvent">
            <summary>
            A code of event raised during page layout model build and rendering
            </summary>
        </member>
        <member name="F:Spire.Doc.Layout.PageLayoutEvent.None">
            <summary>
            Default value
            </summary>
        </member>
        <member name="F:Spire.Doc.Layout.PageLayoutEvent.WatchDog">
            <summary>
            Corresponds to a checkpoint in code which is often visited and which is suitable to abort process.
            </summary>
        </member>
        <member name="F:Spire.Doc.Layout.PageLayoutEvent.BuildStarted">
            <summary>
            Build of the page layout has started. Fired once.
            </summary>
        </member>
        <member name="F:Spire.Doc.Layout.PageLayoutEvent.BuildFinished">
            <summary>
            Build of the page layout has finished. Fired once.
            </summary>
        </member>
        <member name="F:Spire.Doc.Layout.PageLayoutEvent.ConversionStarted">
            <summary>
            Conversion of document model to page layout has started. Fired once.
            This occurs when layout model starts pulling document content.
            </summary>
        </member>
        <member name="F:Spire.Doc.Layout.PageLayoutEvent.ConversionFinished">
            <summary>
            Conversion of document model to page layout has finished. Fired once.
            This occurs when layout model stops pulling document content.
            </summary>
        </member>
        <member name="F:Spire.Doc.Layout.PageLayoutEvent.ReflowStarted">
            <summary>
            Reflow of the page layout has started. Fired once.
            This occurs when layout model starts reflowing document content.
            </summary>
        </member>
        <member name="F:Spire.Doc.Layout.PageLayoutEvent.ReflowFinished">
            <summary>
            Reflow of the page layout has finished. Fired once.
            This occurs when layout model stops reflowing document content.
            </summary>
        </member>
        <member name="F:Spire.Doc.Layout.PageLayoutEvent.PartReflowStarted">
            <summary>
            Reflow of the page has started.
            Note that page may reflow multiple times and that reflow may restart before it is finished.
            </summary>
        </member>
        <member name="F:Spire.Doc.Layout.PageLayoutEvent.PartReflowFinished">
            <summary>
            Reflow of the page has finished.
            Note that page may reflow multiple times and that reflow may restart before it is finished.
            </summary>
        </member>
        <member name="F:Spire.Doc.Layout.PageLayoutEvent.PartRenderingStarted">
            <summary>
            Rendering of page has started. This is fired once per page.
            </summary>
        </member>
        <member name="F:Spire.Doc.Layout.PageLayoutEvent.PartRenderingFinished">
            <summary>
            Rendering of page has finished. This is fired once per page.
            </summary>
        </member>
        <member name="T:Spire.Doc.Layout.ShowInBalloons">
            <summary>
            Specifies which revisions are rendered in balloons.
            </summary>
        </member>
        <member name="F:Spire.Doc.Layout.ShowInBalloons.None">
            <summary>
            Renders insert, delete and format revisions inline.
            </summary>
        </member>
        <member name="F:Spire.Doc.Layout.ShowInBalloons.Format">
            <summary>
            Renders insert and delete revisions inline, format revisions in balloons.
            </summary>
        </member>
        <member name="F:Spire.Doc.Layout.ShowInBalloons.FormatAndDelete">
            <summary>
            Renders insert revisions inline, delete and format revisions in balloons.
            </summary>
        </member>
        <member name="P:Spire.Doc.Background.Type">
            <summary>
            Gets or Sets the type of background for document.
            </summary>
        </member>
        <member name="P:Spire.Doc.Background.Picture">
            <summary>
            Gets or sets background picture.
            </summary>
        </member>
        <member name="P:Spire.Doc.Background.Color">
            <summary>
            Gets or sets background color.
            </summary>
        </member>
        <member name="P:Spire.Doc.Background.Gradient">
            <summary>
            Gets or sets background gradient.
            </summary>
        </member>
        <member name="P:Spire.Doc.Background.Recolor">
            <summary>
            Gets or sets the a value specifies that the fill uses an image. 
            Default is false.
            </summary>
        </member>
        <member name="P:Spire.Doc.Background.Rotate">
            <summary>
            Gets or sets the a valeu specifies whether the fill is rotated
            </summary>
        </member>
        <member name="M:Spire.Doc.Background.SetPicture(System.String)">
            <summary>
            Sets the picture.
            </summary>
            <param name="imgFile">The image file.</param>
        </member>
        <member name="M:Spire.Doc.Background.SetPicture(System.IO.Stream)">
            <summary>
            Sets the picture.
            </summary>
            <param name="imgStream">The image stream.</param>
        </member>
        <member name="P:Spire.Doc.BackgroundGradient.Color1">
            <summary>
            Gets or sets first color for gradient.
            </summary>
        </member>
        <member name="P:Spire.Doc.BackgroundGradient.Color2">
            <summary>
            Gets or sets second color for gradient
            (used when TwoColors set to true).
            </summary>
        </member>
        <member name="P:Spire.Doc.BackgroundGradient.ShadingStyle">
            <summary>
            Gets or sets shading style for gradient.
            </summary>
        </member>
        <member name="P:Spire.Doc.BackgroundGradient.ShadingVariant">
            <summary>
            Gets or sets shading variants.
            </summary>
        </member>
        <member name="P:Spire.Doc.Bookmark.Name">
            <summary>
            Gets bookmark name.
            </summary>
        </member>
        <member name="P:Spire.Doc.Bookmark.BookmarkStart">
            <summary>
            Gets the bookmark start.
            </summary>
        </member>
        <member name="P:Spire.Doc.Bookmark.BookmarkEnd">
            <summary>
            Gets the bookmark end.
            </summary>
        </member>
        <member name="M:Spire.Doc.Bookmark.#ctor(Spire.Doc.BookmarkStart)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Bookmark"/> class.
            </summary>
            <param name="start">The start.</param>
        </member>
        <member name="M:Spire.Doc.Bookmark.#ctor(Spire.Doc.BookmarkStart,Spire.Doc.BookmarkEnd)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Bookmark"/> class.
            </summary>
            <param name="start">The bookmark start.</param>
            <param name="end">The bookmark end.</param>
        </member>
        <member name="P:Spire.Doc.BuiltinDocumentProperties.Category">
            <summary>
            Gets or sets the category of the document.
            </summary>
        </member>
        <member name="P:Spire.Doc.BuiltinDocumentProperties.BytesCount">
            <summary>
            Gets the number of bytes in the document.
            </summary>
        </member>
        <member name="P:Spire.Doc.BuiltinDocumentProperties.LinesCount">
            <summary>
            Gets the number of lines in the document.
            </summary>
        </member>
        <member name="P:Spire.Doc.BuiltinDocumentProperties.ParagraphCount">
            <summary>
            Gets the number of paragraphs in the document.
            </summary>
        </member>
        <member name="P:Spire.Doc.BuiltinDocumentProperties.CharCountWithSpace">
            <summary>
            Gets document characters count(including spaces)
            </summary>
        </member>
        <member name="P:Spire.Doc.BuiltinDocumentProperties.SlideCount">
            <summary>
            Gets slide count.
            </summary>
        </member>
        <member name="P:Spire.Doc.BuiltinDocumentProperties.NoteCount">
            <summary>
            Gets Note count.
            </summary>
        </member>
        <member name="P:Spire.Doc.BuiltinDocumentProperties.HiddenCount">
            <summary>
            Gets hidden count
            </summary>
        </member>
        <member name="P:Spire.Doc.BuiltinDocumentProperties.Company">
            <summary>
            Returns or setsCompany property.
            </summary>
        </member>
        <member name="P:Spire.Doc.BuiltinDocumentProperties.HyperLinkBase">
            <summary>
            Returns or sets HyperLinkBase property.
            </summary>
        </member>
        <member name="P:Spire.Doc.BuiltinDocumentProperties.Manager">
            <summary>
            Gets or sets Manager property.
            </summary>
        </member>
        <member name="P:Spire.Doc.BuiltinDocumentProperties.ContentStatus">
            <summary>
            Gets or sets the document status.
            </summary>
        </member>
        <member name="P:Spire.Doc.Column.Width">
            <summary>
            Returns or sets column width.
            </summary>
        </member>
        <member name="P:Spire.Doc.Column.Space">
            <summary>
            Gets or setss pacing between current and next column.
            </summary>
        </member>
        <member name="M:Spire.Doc.Column.#ctor(Spire.Doc.Interface.IDocument)">
            <summary>
            Initialize constructor.
            </summary>
            <param name="doc">The doc.</param>
        </member>
        <member name="P:Spire.Doc.CustomDocumentProperties.Item(System.String)">
            <summary>
            Gets or sets property by specified name.
            </summary>
        </member>
        <member name="P:Spire.Doc.CustomDocumentProperties.Item(System.Int32)">
            <summary>
            Gets or sets property by specified index.
            </summary>
        </member>
        <member name="P:Spire.Doc.CustomDocumentProperties.Count">
            <summary>
            Gets count of the properties.
            </summary>
        </member>
        <member name="M:Spire.Doc.CustomDocumentProperties.Add(System.String,System.Object)">
            <summary>
            Adds the specified name.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.CustomDocumentProperties.Remove(System.String)">
            <summary>
            Remove property specified by name.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Spire.Doc.CustomDocumentProperties.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.CustomDocumentProperties.HasKeyInCustomHash(System.String)">
            <summary>
             Determines whether the CustomHash contains the specified key.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.CustomDocumentProperties.GetValueByKeyInCustomHash(System.String)">
            <summary>
             Gets the value associated with the specified key.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.CustomDocumentProperties.SetValueByKeyInCostomHash(System.String,Spire.Doc.DocumentProperty)">
            <summary>
            Sets the value associated with the specified key.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:Spire.Doc.DocumentProperty.#ctor(System.String,System.Object)">
            <summary>
            Initializes new instance of the class.
            </summary>
            <param name="strName">Property name.</param>
            <param name="value">Property value.</param>
        </member>
        <member name="M:Spire.Doc.DocumentProperty.#ctor(System.String,System.Object,Spire.Doc.CompoundFile.PropertyType)">
            <summary>
            Initializes new instance of the class.
            </summary>
            <param name="strName">Property name.</param>
            <param name="value">Property value.</param>
            <param name="type">Property type</param>
        </member>
        <member name="P:Spire.Doc.FootEndnoteOptions.OptionsType">
            <summary>
            Gets the type of the options.
            </summary>
        </member>
        <member name="P:Spire.Doc.FootEndnoteOptions.ApplyObjectType">
            <summary>
            Gets the type of the apply object.
            </summary>
        </member>
        <member name="P:Spire.Doc.FootEndnoteOptions.IsFootnote">
            <summary>
            Gets a value indicating whether this instance is footnote.
            </summary>
            <value><c>true</c> if this instance is footnote; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Doc.FootEndnoteOptions.NumberFormat">
            <summary>
            Gets or sets the numbering format.
            </summary>
        </member>
        <member name="P:Spire.Doc.FootEndnoteOptions.Position">
            <summary>
            Gets or sets the position in the document.
            </summary>
        </member>
        <member name="P:Spire.Doc.FootEndnoteOptions.RestartRule">
            <summary>
            Gets or sets the restart rule.
            </summary>
        </member>
        <member name="P:Spire.Doc.FootEndnoteOptions.StartNumber">
            <summary>
            Gets or sets the start number.
            </summary>
        </member>
        <member name="M:Spire.Doc.FootEndnoteOptions.#ctor(Spire.Doc.Interface.IDocument,System.Boolean)">
            <summary>
             Construct FootEndnoteOptions object apply the this document.
            </summary>
            <param name="bIsFootnote">the IsFootnote.</param>
        </member>
        <member name="M:Spire.Doc.FootEndnoteOptions.SetFootEndnoteOptionsType(System.Boolean)">
            <summary>
            Set footendnoteOptions type.
            </summary>
            <param name="bIsFootnote"></param>
        </member>
        <member name="M:Spire.Doc.FootEndnoteOptions.UpdateFootnotePropertyOfApplyDocument(System.Int32,System.Object)">
            <summary>
            update footnote(endnote) info.
            </summary>
            <param name="descriptor"></param>
        </member>
        <member name="M:Spire.Doc.FootEndnoteOptions.GetDefValue(System.Int32)">
            <summary>
            
            </summary>
            <param name="propertyKey"></param>
            <param name="value"></param>
        </member>
        <member name="M:Spire.Doc.FootEndnoteOptions.SetFootnoteNumberFormat(Spire.Doc.FootnoteNumberFormat)">
            <summary>
            Sets the numbering format.
            </summary>
        </member>
        <member name="M:Spire.Doc.FootEndnoteOptions.SetFootnotePosition(Spire.Doc.FootnotePosition)">
            <summary>
            Sets the position in the document.
            </summary>
        </member>
        <member name="M:Spire.Doc.FootEndnoteOptions.SetFootnoteRestartRule(Spire.Doc.FootnoteRestartRule)">
            <summary>
            Sets the restart rule.
            </summary>
        </member>
        <member name="M:Spire.Doc.FootEndnoteOptions.SetFootnoteStartNumber(System.Int32)">
            <summary>
            Sets the start number.
            </summary>
        </member>
        <member name="T:Spire.Doc.FootEndnoteApplyType">
            <summary>
            Footnote(Endnote) properties apply object type.
            </summary>
        </member>
        <member name="F:Spire.Doc.FootEndnoteApplyType.Document">
            <summary>
            Specifies the footnote(endnote) properties for this document.
            </summary>
        </member>
        <member name="F:Spire.Doc.FootEndnoteApplyType.Section">
            <summary>
            Specifies the footnote(endnote) properties for the current section.
            </summary>
        </member>
        <member name="P:Spire.Doc.DocumentObject.ChildObjects">
            <summary>
            Gets the child objects of the entity.
            </summary>
        </member>
        <member name="P:Spire.Doc.DocumentObject.DocumentObjectType">
            <summary>
            Gets the type of the document object.
            </summary>
            <value>The type of the document object.</value>
        </member>
        <member name="P:Spire.Doc.DocumentObject.Owner">
            <summary>
            Gets the owner of this entity.
            </summary>
            <value></value>
        </member>
        <member name="P:Spire.Doc.DocumentObject.ParentObject">
            <summary>
            Get the parent object of the entity.
            </summary>
        </member>
        <member name="P:Spire.Doc.DocumentObject.PreviousSibling">
            <summary>
            Gets the previous sibling.
            </summary>
        </member>
        <member name="P:Spire.Doc.DocumentObject.NextSibling">
            <summary>
            Gets the next sibling.
            </summary>
            <value>The next sibling.</value>
        </member>
        <member name="P:Spire.Doc.DocumentObject.IsComposite">
            <summary>
            Indicating whether this instance is composite.
            </summary>
            <value>
            If this instance is composite, set to <c>true</c>.
            </value>
        </member>
        <member name="M:Spire.Doc.DocumentObject.ToString(System.String)">
            <summary>
            Exports the name and index in container of the object into a string in the specified seperator. 
            </summary>
            <param name="seperator"></param>
            <returns></returns>
        </member>
        <member name="P:Spire.Doc.HtmlExportOptions.CssStyleSheetType">
            <summary>
            Gets or sets the type of the HTML export CSS style sheet.
            </summary>
            <value>The type of the HTML export CSS style sheet.</value>
        </member>
        <member name="P:Spire.Doc.HtmlExportOptions.ImageEmbedded">
            <summary>
            If false,indicates exporting the image as a single file; 
            If true, embedding the image into the html code using Data URI scheme.
            The default value is false.
            Note: Internet Explorer 8 limits data URIs to a maximum length of 32KB.
            </summary>
            <value>The value of the HTML export image style sheet.</value>
        </member>
        <member name="P:Spire.Doc.HtmlExportOptions.IsExportDocumentStyles">
            <summary>
            Gets or Sets a switch that determines whether to export the document styles to head.
            </summary>
        </member>
        <member name="P:Spire.Doc.HtmlExportOptions.CssStyleSheetFileName">
            <summary>
            Gets or sets the name of the HTML export CSS style sheet file.
            </summary>
            <value>The name of the HTML export CSS style sheet file.</value>
        </member>
        <member name="P:Spire.Doc.HtmlExportOptions.HasHeadersFooters">
            <summary>
            Gets or sets a value indicating whether HTML export headers footers.
            </summary>
        </member>
        <member name="P:Spire.Doc.HtmlExportOptions.IsTextInputFormFieldAsText">
            <summary>
            Gets or sets a value indicating whether HTML export text input form field as text.
            </summary>
            <value>
            	If HTML export text input form field as text, set to <c>true</c>.
            </value>
        </member>
        <member name="P:Spire.Doc.HtmlExportOptions.ImagesPath">
            <summary>
            Gets or sets the HTML export images folder.
            </summary>
            <value>The HTML export images folder.</value>
        </member>
        <member name="P:Spire.Doc.HtmlExportOptions.UseSaveFileRelativePath">
            <summary>
             Gets or sets a value whether Image Path is relative to the file save path. 
            </summary>
            <value>
            	If Image Path wants to be relative to the file save path, set to <c>true</c>.
            </value>
        </member>
        <member name="P:Spire.Doc.HtmlExportOptions.UseMsoSpace">
            <summary>
             Gets or sets a switch that determines whether to use mso rules' space.. 
            </summary>
        </member>
        <member name="F:Spire.Doc.CssStyleSheetType.External">
            <summary>
            Specifies External sheet type.
            </summary>
        </member>
        <member name="F:Spire.Doc.CssStyleSheetType.Internal">
            <summary>
             Specifies Internal sheet type.
            </summary>
        </member>
        <member name="P:Spire.Doc.Hyperlink.FilePath">
            <summary>
            Gets or sets file path.
            </summary>
        </member>
        <member name="P:Spire.Doc.Hyperlink.Uri">
            <summary>
            Returns or sets url link. 
            </summary>
        </member>
        <member name="P:Spire.Doc.Hyperlink.BookmarkName">
            <summary>
            Returns or sets bookmark.
            </summary>
        </member>
        <member name="P:Spire.Doc.Hyperlink.Type">
            <summary>
            Returns or sets a HyperlinkType object that indicates the link type. 
            </summary>
        </member>
        <member name="P:Spire.Doc.Hyperlink.TextToDisplay">
            <summary>
            Gets or sets the specified hyperlink's visible text in a document.
            </summary>
            <value>The text to display.</value>
        </member>
        <member name="P:Spire.Doc.Hyperlink.PictureToDisplay">
            <summary>
            Gets or sets the image which will be displayed on the place of hyperlink.
            </summary>
        </member>
        <member name="M:Spire.Doc.Hyperlink.#ctor(Spire.Doc.Fields.Field)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Hyperlink"/> class.
            </summary>
            <param name="hyperlink">The hyperlink.</param>
        </member>
        <member name="P:Spire.Doc.OwnerHolder.Document">
            <summary>
            Gets the document.
            </summary>
            <value>The document.</value>
        </member>
        <member name="M:Spire.Doc.OwnerHolder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.OwnerHolder"/> class.
            </summary>
        </member>
        <member name="M:Spire.Doc.OwnerHolder.#ctor(Spire.Doc.Document,Spire.Doc.OwnerHolder)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.OwnerHolder"/> class.
            </summary>
            <param name="doc">The doc.</param>
            <param name="owner">The owner.</param>
        </member>
        <member name="P:Spire.Doc.Permission.Id">
            <summary>
            Gets permission id.
            </summary>
        </member>
        <member name="P:Spire.Doc.Permission.EditorGroup">
            <summary>
            Gets permission editorgroup.
            </summary>
        </member>
        <member name="P:Spire.Doc.Permission.DisplacedByCustomXml">
            <summary>
            Gets permission displacedByCustomXml.
            </summary>
        </member>
        <member name="P:Spire.Doc.Permission.PermissionStart">
            <summary>
            Gets the Permission start.
            </summary>
        </member>
        <member name="P:Spire.Doc.Permission.PermissionEnd">
            <summary>
            Gets the Permission end.
            </summary>
        </member>
        <member name="M:Spire.Doc.Permission.#ctor(Spire.Doc.PermissionStart)">
            <summary>
            Initializes a new instance of the <see cref="!:Perm"/> class.
            </summary>
            <param name="start">The start.</param>
        </member>
        <member name="M:Spire.Doc.Permission.#ctor(Spire.Doc.PermissionStart,Spire.Doc.PermissionEnd)">
            <summary>
            Initializes a new instance of the <see cref="!:Perm"/> class.
            </summary>
            <param name="start">The Permission start.</param>
            <param name="end">The Permission end.</param>
        </member>
        <member name="P:Spire.Doc.PictureWatermark.Scaling">
            <summary>
            Gets or sets picture scaling in percents.
            </summary>
        </member>
        <member name="P:Spire.Doc.PictureWatermark.ScalingAuto">
            <summary>
            Gets or set picture auto scaling.
            </summary>
        </member>
        <member name="P:Spire.Doc.PictureWatermark.IsWashout">
            <summary>
            Gets or sets washout property for Picture watermark.
            </summary>
        </member>
        <member name="M:Spire.Doc.PictureWatermark.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.PictureWatermark"/> class.
            </summary>
        </member>
        <member name="M:Spire.Doc.PictureWatermark.#ctor(System.Drawing.Image,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.PictureWatermark"/> class.
            </summary>
            <param name="image">Image for picture watermark</param>
            <param name="washout">IsWashout property</param>
        </member>
        <member name="M:Spire.Doc.PictureWatermark.SetPicture(System.String)">
            <summary>
            Sets the picture.
            </summary>
            <param name="ImgFile">The image file.</param>
        </member>
        <member name="M:Spire.Doc.PictureWatermark.SetPicture(System.IO.Stream)">
            <summary>
            Sets the picture.
            </summary>
            <param name="imgStream">The img stream.</param>
        </member>
        <member name="F:Spire.Doc.MailMergeMainDocumentType.NotAMergeDocument">
            <summary>
            This document is not a mail merge document.
            </summary>
        </member>
        <member name="F:Spire.Doc.MailMergeMainDocumentType.FormLetters">
            <summary>
            Specifies that the mail merge source document is of the form letter type.
            </summary>
        </member>
        <member name="F:Spire.Doc.MailMergeMainDocumentType.MailingLabels">
            <summary>
            Specifies that the mail merge source document is of the mailing label type.
            </summary>
        </member>
        <member name="F:Spire.Doc.MailMergeMainDocumentType.Envelopes">
            <summary>
            Specifies that the mail merge source document is of the envelope type.
            </summary>
        </member>
        <member name="F:Spire.Doc.MailMergeMainDocumentType.Catalog">
            <summary>
            Specifies that the mail merge source document is of the catalog type.
            </summary>
        </member>
        <member name="F:Spire.Doc.MailMergeMainDocumentType.Email">
            <summary>
            Specifies that the mail merge source document is of the e-mail message type.
            </summary>
        </member>
        <member name="F:Spire.Doc.MailMergeMainDocumentType.Fax">
            <summary>
            Specifies that the mail merge source document is of the fax type.
            </summary>
        </member>
        <member name="F:Spire.Doc.MailMergeMainDocumentType.Default">
             <summary>
            Equals to <see cref="F:Spire.Doc.MailMergeMainDocumentType.NotAMergeDocument"/>
             </summary>
        </member>
        <member name="T:Spire.Doc.DocumentProperties">
            <summary>
            Class DocumentProperties of the document.
            </summary>
        </member>
        <member name="P:Spire.Doc.DocumentProperties.FormFieldShading">
            <summary>
            Specifies whether to apply shading on form fields.
            </summary>
        </member>
        <member name="P:Spire.Doc.DocumentProperties.Version">
            <summary>
            Gets the document version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="T:Spire.Doc.Settings">
            <summary>
            Class represents settings of the document.
            </summary>
        </member>
        <member name="P:Spire.Doc.Settings.CompatibilityMode">
            <summary>
            Gets or sets a value whether compatibility mode of the document.
            </summary>
        </member>
        <member name="P:Spire.Doc.Settings.ProtectionType">
            <summary>
            Gets or sets the type of protection of the document.
            </summary>
        </member>
        <member name="P:Spire.Doc.Settings.DocEnforceDocProt">
            <summary>
            Gets and sets whether to enforce the document protection .
            </summary>
        </member>
        <member name="M:Spire.Doc.CompatibilitySettings.SetDefaultTrueValue">
            <summary>
            set default true value for CompatibilityOptions;
            </summary>
        </member>
        <member name="P:Spire.Doc.SummaryDocumentProperties.Author">
            <summary>
            Gets or sets author name
            </summary>
        </member>
        <member name="P:Spire.Doc.SummaryDocumentProperties.ApplicationName">
            <summary>
            Gets or sets application name
            </summary>
        </member>
        <member name="P:Spire.Doc.SummaryDocumentProperties.Title">
            <summary>
            Gets or sets the document title
            </summary>
        </member>
        <member name="P:Spire.Doc.SummaryDocumentProperties.Subject">
            <summary>
            Gets or sets the subject of the document
            </summary>
        </member>
        <member name="P:Spire.Doc.SummaryDocumentProperties.Keywords">
            <summary>
            Gets or sets the document keywords
            </summary>
        </member>
        <member name="P:Spire.Doc.SummaryDocumentProperties.Comments">
            <summary>
            Gets or sets the comments that provide additional information about the document
            </summary>
        </member>
        <member name="P:Spire.Doc.SummaryDocumentProperties.Template">
            <summary>
            Gets or sets the template name of the document
            </summary>
        </member>
        <member name="P:Spire.Doc.SummaryDocumentProperties.LastAuthor">
            <summary>
            Gets or sets the last author name
            </summary>
        </member>
        <member name="P:Spire.Doc.SummaryDocumentProperties.RevisionNumber">
            <summary>
            Gets or sets the document revision number
            </summary>
        </member>
        <member name="P:Spire.Doc.SummaryDocumentProperties.TotalEditingTime">
            <summary>
            Gets or sets the document total editing time
            </summary>
        </member>
        <member name="P:Spire.Doc.SummaryDocumentProperties.LastPrinted">
            <summary>
            Returns or sets the last print date
            </summary>
        </member>
        <member name="P:Spire.Doc.SummaryDocumentProperties.CreateDate">
            <summary>
            Gets or sets the document creation date
            </summary>
        </member>
        <member name="P:Spire.Doc.SummaryDocumentProperties.LastSaveDate">
            <summary>
            Returns or sets the last save date
            </summary>
        </member>
        <member name="P:Spire.Doc.SummaryDocumentProperties.PageCount">
            <summary>
            Gets document pages count
            </summary>
        </member>
        <member name="P:Spire.Doc.SummaryDocumentProperties.WordCount">
            <summary>
            Gets document words count
            </summary>
        </member>
        <member name="P:Spire.Doc.SummaryDocumentProperties.CharCount">
            <summary>
            Gets document characters count
            </summary>
        </member>
        <member name="P:Spire.Doc.SummaryDocumentProperties.CharCountWithSpace">
            <summary>
            Gets document characters count(including spaces)
            </summary>
        </member>
        <member name="P:Spire.Doc.SummaryDocumentProperties.Thumbnail">
            <summary>
            Returns or setsthumbnail picture for document preview
            </summary>
        </member>
        <member name="P:Spire.Doc.SummaryDocumentProperties.DocSecurity">
            <summary>
            Gets or sets document security level
            </summary>
        </member>
        <member name="P:Spire.Doc.SummaryDocumentProperties.Count">
            <summary>
            Gets summary count of document properties
            </summary>
        </member>
        <member name="M:Spire.Doc.SummaryDocumentProperties.Add(System.Int32,Spire.Doc.DocumentProperty)">
            <summary>
            Adds the specified name.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:Spire.Doc.Tab.Justification">
            <summary>
            Gets or sets the justification.
            </summary>
            <value>The justification.</value>
        </member>
        <member name="P:Spire.Doc.Tab.TabLeader">
            <summary>
            Gets or sets the tab leader.
            </summary>
            <value>The tab leader.</value>
        </member>
        <member name="P:Spire.Doc.Tab.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>The position.</value>
        </member>
        <member name="P:Spire.Doc.Tab.TabRelativePosition">
            <summary>
            Gets or sets the tab positioning.
            </summary>
        </member>
        <member name="P:Spire.Doc.Tab.IsPTab">
            <summary>
            Gets or set a value is ptab.
            </summary>
        </member>
        <member name="P:Spire.Doc.BodyRegion.OwnerTextBody">
            <summary>
            Gets the owner text body.
            </summary>
            <value>The owner text body.</value>
        </member>
        <member name="P:Spire.Doc.BodyRegion.IsInsertRevision">
            <summary>
            Gets a value indicating whether this item was inserted to the document.
            </summary>
        </member>
        <member name="P:Spire.Doc.BodyRegion.InsertRevision">
            <summary>
            Gets the insert revision for this objects.
            Note this can be null. If null does not have insert revision.
            </summary>
        </member>
        <member name="P:Spire.Doc.BodyRegion.IsDeleteRevision">
            <summary>
            Gets a value indicating whether this item was deleted from the document.
            </summary>
        </member>
        <member name="P:Spire.Doc.BodyRegion.DeleteRevision">
            <summary>
            Gets the delete revision for this objects.
            Note this can be null. If null does not have delete revision.
            </summary>
        </member>
        <member name="P:Spire.Doc.TextWatermark.Text">
            <summary>
            Gets or sets watermark text
            </summary>
        </member>
        <member name="P:Spire.Doc.TextWatermark.FontName">
            <summary>
            Gets or sets watermark text's font name. 
            </summary>
        </member>
        <member name="P:Spire.Doc.TextWatermark.FontSize">
            <summary>
            Gets or sets text watermark size.
            </summary>
        </member>
        <member name="P:Spire.Doc.TextWatermark.Color">
            <summary>
            Gets or sets text watermark color.
            </summary>
        </member>
        <member name="P:Spire.Doc.TextWatermark.Semitransparent">
            <summary>
            Gets or sets semitransparent property for Text watermark.
            </summary>
        </member>
        <member name="P:Spire.Doc.TextWatermark.Layout">
            <summary>
            Gets or sets layout for Text watermark.
            </summary>
        </member>
        <member name="M:Spire.Doc.TextWatermark.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.TextWatermark"/> class.
            </summary>
        </member>
        <member name="M:Spire.Doc.TextWatermark.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.TextWatermark"/> class.
            </summary>
            <param name="text">WatermarkBase text</param>
        </member>
        <member name="M:Spire.Doc.TextWatermark.#ctor(System.String,System.String,System.Int32,Spire.Doc.Documents.WatermarkLayout)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.TextWatermark"/> class.
            </summary>
            <param name="text">WatermarkBase text</param>
            <param name="fontName">Text font name</param>
            <param name="fontSize">Font size</param>
            <param name="layout">WatermarkBase layout</param>
        </member>
        <member name="P:Spire.Doc.VariableCollection.Item(System.String)">
            <summary>
            Gets or sets the variable with the specified name.
            </summary>
        </member>
        <member name="P:Spire.Doc.VariableCollection.Count">
            <summary>
            Gets the count of variables.
            </summary>
        </member>
        <member name="M:Spire.Doc.VariableCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.VariableCollection"/> class.
            </summary>
        </member>
        <member name="M:Spire.Doc.VariableCollection.Add(System.String,System.String)">
            <summary>
            Adds variable to document.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Spire.Doc.VariableCollection.GetNameByIndex(System.Int32)">
            <summary>
            Gets variable's key by the index.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.VariableCollection.GetValueByIndex(System.Int32)">
            <summary>
            Gets variable's value by the index.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.VariableCollection.Remove(System.String)">
            <summary>
            Removes document variable with specified name from the document.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="P:Spire.Doc.WatermarkBase.DocumentObjectType">
            <summary>
            Gets the type of the document object.
            </summary>
        </member>
        <member name="P:Spire.Doc.WatermarkBase.Type">
            <summary>
            Gets the watermark type.
            </summary>
        </member>
        <member name="P:Spire.Doc.HeadersFooters.Header">
            <summary>
            Gets default header.
            </summary>
        </member>
        <member name="P:Spire.Doc.HeadersFooters.Footer">
            <summary>
            Gets default footer.
            </summary>
        </member>
        <member name="P:Spire.Doc.HeadersFooters.EvenHeader">
            <summary>
            Gets even header.
            </summary>
        </member>
        <member name="P:Spire.Doc.HeadersFooters.OddHeader">
            <summary>
            Gets odd header ( This is also the default header ).
            </summary>
        </member>
        <member name="P:Spire.Doc.HeadersFooters.EvenFooter">
            <summary>
            Gets even footer
            </summary>
        </member>
        <member name="P:Spire.Doc.HeadersFooters.OddFooter">
            <summary>
            Gets odd footer ( This is also the default footer ).
            </summary>
        </member>
        <member name="P:Spire.Doc.HeadersFooters.FirstPageHeader">
            <summary>
            Gets first page header.
            </summary>
        </member>
        <member name="P:Spire.Doc.HeadersFooters.FirstPageFooter">
            <summary>
            Gets first page footer.
            </summary>
        </member>
        <member name="P:Spire.Doc.HeadersFooters.IsEmpty">
            <summary>
            Detects whether all headers/footers are empty.
            </summary>
        </member>
        <member name="P:Spire.Doc.HeadersFooters.Item(System.Int32)">
            <summary>
            Gets TextBody at specified index.
            </summary>
        </member>
        <member name="P:Spire.Doc.HeadersFooters.Item(Spire.Doc.Documents.HeaderFooterType)">
            <summary>
            Gets TextBody by specified HeaderFooter type.
            </summary>
        </member>
        <member name="P:Spire.Doc.HeadersFooters.LinkToPrevious">
            <summary>
            If set to True if this header or footer is linked in the previous section.
            </summary>
        </member>
        <member name="P:Spire.Doc.HeaderFooter.DocumentObjectType">
            <summary>
            Gets the type of the document object.
            </summary>
        </member>
        <member name="M:Spire.Doc.DocumentBase.#ctor(Spire.Doc.Document,Spire.Doc.DocumentObject)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.DocumentBase"/> class.
            </summary>
            <param name="doc">The doc.</param>
            <param name="owner">The owner.</param>
        </member>
        <member name="P:Spire.Doc.DocumentContainer.Count">
            <summary>
            Gets count of child object.
            </summary>
            <value></value>
        </member>
        <member name="P:Spire.Doc.Document.UseNewEngine">
            <summary>
            Gets a value indicating whether the new engine layout is enabled.
            The Spire.Doc product conversion feature has enabled the new engine way layout by default.
            If you want to switch to the old engine layout, use the Document constructor
            with the \"useNewEngine\" parameter and set the parameter \"useNewEngine\" to false.
            </summary>
        </member>
        <member name="F:Spire.Doc.Document.m_operationType">
            <summary>
            Indicate which operation is applied in current document 
            </summary>
        </member>
        <member name="E:Spire.Doc.Document.EvalInformation">
            <summary>
            Get Spire.Doc Eval version limit information.
            </summary>
        </member>
        <member name="E:Spire.Doc.Document.BookmarkLayout">
            <summary>
            Occurs when draw a bookmark.
            </summary>
        </member>
        <member name="E:Spire.Doc.Document.PageLayout">
            <summary>
            Occurs when creating a new page.
            </summary>
        </member>
        <member name="E:Spire.Doc.Document.UpdateFields">
            <summary>
            Occurs when update field.
            </summary>
        </member>
        <member name="P:Spire.Doc.Document.TOC">
            <summary>
            Gets or sets the TOC element of the word document.
            </summary>
        </member>
        <member name="P:Spire.Doc.Document.EmbedFontsInFile">
            <summary>
            Gets or sets a value indicating whether save fonts that are used in the document in the file.
            Only support for the DOCX file format.
            </summary>
        </member>
        <member name="P:Spire.Doc.Document.PrivateFontList">
            <summary>
            Gets the private font list.
            </summary>
        </member>
        <member name="P:Spire.Doc.Document.EmbedSystemFonts">
            <summary>
            Gets or sets a value indicating whether save system fonts that are used in the document in the file.
            </summary>
        </member>
        <member name="P:Spire.Doc.Document.HtmlBaseUrl">
            <summary>
            Gets or sets the Base path which is used to convert the relative path to absolute path.
            </summary>
        </member>
        <member name="P:Spire.Doc.Document.HTMLTrackChanges">
            <summary>
            <para>Gets or sets a value specifying whether parsing and writing custom Change_Tracking HTML Tags are supported.</para>
            <para>Supported HTML Tag : insert / delete.</para>
            <para>Supported HTML Tag Attribytes : data-username / data-time.</para>
            </summary>
        </member>
        <member name="P:Spire.Doc.Document.HTMLSentenceIdentifier">
            <summary>
            <para>Gets or sets a value specifying whether to add identifier to a sentence when writing to HTML.</para>
            <para>Writed HTML Attribyte : sentence.</para>
            <para>Writed HTML Value Of Attribyte : start / end / (start,end).</para>
            </summary>
        </member>
        <member name="P:Spire.Doc.Document.HTMLCustomComment">
            <summary>
            <para>Gets or sets a value specifying whether parsing and writing comment of document in HTML.</para>
            <para>Supported HTML Tag : span ,when the value of class attribute is comment</para>
            <para>Supported HTML Tag Attribytes : data-comment / data-user / data-cid / data-date.</para>
            </summary>
        </member>
        <member name="P:Spire.Doc.Document.HTMLIdentifierPunctuations">
            <summary>
            Set the custom punctuation as sentence indentifier.
            Full stop, qusetion mark, exclamatory mark are default values.
            </summary>
        </member>
        <member name="P:Spire.Doc.Document.Footnotes">
            <summary>
            Gets document footnotes.
            </summary>       
        </member>
        <member name="P:Spire.Doc.Document.Endnotes">
            <summary>
            Gets document endnotes.
            </summary>        
        </member>
        <member name="P:Spire.Doc.Document.DocumentObjectType">
            <summary>
            Gets the type of the document object.
            </summary>
        </member>
        <member name="P:Spire.Doc.Document.BuiltinDocumentProperties">
            <summary>
            Gets document built-in properties object.
            </summary>
        </member>
        <member name="P:Spire.Doc.Document.CustomDocumentProperties">
            <summary>
            Gets document custom properties object.
            </summary>
        </member>
        <member name="P:Spire.Doc.Document.Sections">
            <summary>
            Gets document sections.
            </summary>
        </member>
        <member name="P:Spire.Doc.Document.Styles">
            <summary>
            Gets document styles.
            </summary>
        </member>
        <member name="P:Spire.Doc.Document.ListStyles">
            <summary>
            Gets document list styles.
            </summary>
        </member>
        <member name="P:Spire.Doc.Document.Bookmarks">
            <summary>
            Gets document bookmarks.
            </summary>
        </member>
        <member name="P:Spire.Doc.Document.Fields">
            <summary>
            Gets fields of the documnet.
            </summary>
        </member>
        <member name="P:Spire.Doc.Document.Comments">
            <summary>
            Gets comments item of the document.
            </summary>
        </member>
        <member name="P:Spire.Doc.Document.TextBoxes">
            <summary>
            Get/set textbox items of main document
            </summary>
        </member>
        <member name="P:Spire.Doc.Document.LastSection">
            <summary>
            Gets last section of the document.
            </summary>
        </member>
        <member name="P:Spire.Doc.Document.LastParagraph">
            <summary>
            Gets last section object.
            </summary>
        </member>
        <member name="P:Spire.Doc.Document.EndnoteOptions">
            <summary>
            Gets or sets options that control numbering and positioning of endnotes in this document. 
            </summary>
        </member>
        <member name="P:Spire.Doc.Document.FootnoteOptions">
            <summary>
             Gets or sets options that control numbering and positioning of footnotes in this document. 
            </summary>
        </member>
        <member name="P:Spire.Doc.Document.Watermark">
            <summary>
            Gets or sets document's watermark.
            </summary>
        </member>
        <member name="P:Spire.Doc.Document.DocLayoter">
            <summary>
            Get/set document layouter.
            </summary>
        </member>
        <member name="P:Spire.Doc.Document.Background">
            <summary>
            Gets document's background
            </summary>
        </member>
        <member name="P:Spire.Doc.Document.MailMerge">
            <summary>
            Gets mail merge engine.
            </summary>
        </member>
        <member name="P:Spire.Doc.Document.ProtectionType">
            <summary>
            Gets or sets the type of protection of the document.
            </summary>
        </member>
        <member name="P:Spire.Doc.Document.EnforceDocProt">
            <summary>
            Gets and sets whether to enforce the document protection .
            </summary>
        </member>
        <member name="P:Spire.Doc.Document.ViewSetup">
            <summary>
            Gets view setup options in Microsoft word.
            </summary>
        </member>
        <member name="P:Spire.Doc.Document.QuiteMode">
            <summary>
            Get / sets whether is quite mode.
            </summary>
        </member>
        <member name="P:Spire.Doc.Document.ChildObjects">
            <summary>
            Gets the child entities.
            </summary>
            <value>The child entities.</value>
        </member>
        <member name="P:Spire.Doc.Document.XHTMLValidateOption">
            <summary>
            Gets or sets the HTML validate option.the default value is None.
            </summary>
            <value>The HTML validate option.</value>
        </member>
        <member name="P:Spire.Doc.Document.Variables">
            <summary>
            Gets or sets the document variables.
            </summary>
            <value>The variables.</value>
        </member>
        <member name="P:Spire.Doc.Document.Properties">
            <summary>
            Gets the document properties.
            </summary>
            <value>The properties.</value>
        </member>
        <member name="P:Spire.Doc.Document.HasChanges">
            <summary>
            Gets a value indicating whether the document has tracked changes.
            </summary>
            <value>
            	if the document has tracked changes, set to <c>true</c>.
            </value>
        </member>
        <member name="P:Spire.Doc.Document.TrackChanges">
            <summary>
            Gets or sets a value indicating whether tracking changes is turn on.
            </summary>
            <value>if track changes in on, set to <c>true</c>.</value>
        </member>
        <member name="P:Spire.Doc.Document.AutoUpdateStylesByTemplate">
            <summary>
            Gets or sets a value indicating whether updating the styles in this document to match
            the styles in the attached template each time you open .
            </summary>
            <value>if update document styles automatically, set to <c>true</c>.</value>
        </member>
        <member name="P:Spire.Doc.Document.ReplaceFirst">
            <summary>
            Gets or sets a value indicating whether need first replacing.
            </summary>
            <value>True indciates need first replacing.</value>
        </member>
        <member name="P:Spire.Doc.Document.HtmlExportOptions">
            <summary>
            Gets the save options.
            </summary>
            <value>The save options.</value>
        </member>
        <member name="P:Spire.Doc.Document.IsUpdateFields">
            <summary>
            Gets or sets a value indicating whether to update fields in the document.
            </summary>
        </member>
        <member name="P:Spire.Doc.Document.DetectedFormatType">
            <summary>
            Returns the detected format type of the document which was loaded. .
            </summary>
        </member>
        <member name="P:Spire.Doc.Document.JPEGQuality">
            <summary>
            Gets/sets the quality (Q%) of the image of JPEG format, this property
            is only used for doc to pdf. The default value is 80. 
            </summary>
        </member>
        <member name="P:Spire.Doc.Document.PageCount">
            <summary>
            Gets total number of pages for document.
            </summary>
        </member>
        <member name="P:Spire.Doc.Document.PrintDialog">
            <summary>
            Set print parnameters
            </summary>
        </member>
        <member name="P:Spire.Doc.Document.PrintDocument">
            <summary>
            Gets the PrintDocument
            </summary>
        </member>
        <member name="P:Spire.Doc.Document.IsContainMacro">
            <summary>
            Indicates whether the document has macros.
            </summary>
        </member>
        <member name="P:Spire.Doc.Document.KeepSameFormat">
            <summary>
            Gets or sets a value that indicates whether to keep same formatting when this document is merged to other document.
            </summary>
        </member>
        <member name="P:Spire.Doc.Document.ListNames">
            <summary>
            Gets the list names.
            </summary>
            <value>The list names.</value>
        </member>
        <member name="P:Spire.Doc.Document.CompatibilityMode">
            <summary>
            Gets or sets a value whether compatibility mode of the document.
            the default 11.
            </summary>
        </member>
        <member name="M:Spire.Doc.Document.CreateParagraph">
            <summary>
            Creates the paragraph.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Document.CreateMinialDocument">
            <summary>
            Create a minial document,  one empty section to the document and one empty paragraph to created section.
            </summary>
        </member>
        <member name="M:Spire.Doc.Document.AddSection">
            <summary>
            Adds new section to document.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Document.AddParagraphStyle(System.String)">
            <summary>
            Adds new paragraph style to the document.
            </summary>
            <param name="styleName">Paragraph style name</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Document.AddListStyle(Spire.Doc.Documents.ListType,System.String)">
            <summary>
            Adds new list style to document.
            </summary>
            <param name="listType">List type</param>
            <param name="styleName">Paragraph style name</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Document.GetText">
            <summary>
            Gets the document's text.
            </summary>
        </member>
        <member name="M:Spire.Doc.Document.Sign(System.IO.Stream,System.String,System.String)">
            <summary>
             Create digitally signed word document.
             Digital signature of documents support only DOC and DOCX formats.
            </summary>
            <param name="sourceStream">Source file stream</param>
            <param name="certificatePath">Path to the file certificate</param>
            <param name="securePassword">Password of the certificate.</param>
            <returns>Bytes of signed word document </returns>
        </member>
        <member name="M:Spire.Doc.Document.Sign(System.IO.Stream,System.Byte[],System.String)">
            <summary>
            Create digitally signed word document.
            Digital signature of documents support only DOC and DOCX formats.
            </summary>
            <param name="sourceStream">Source file stream.</param>
            <param name="certificateData">the certificate data.</param>
            <param name="securePassword">Password of the certificate.</param>
            <returns>Bytes of signed word document</returns>
        </member>
        <member name="M:Spire.Doc.Document.Clone">
            <summary>
            Clones itself.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Document.CloneDefaultStyleTo(Spire.Doc.Document)">
            <summary>
            Clones the current document default style to the destination document.
            </summary>
            <param name="destDoc">The destination document.</param>
        </member>
        <member name="M:Spire.Doc.Document.CloneThemesTo(Spire.Doc.Document)">
            <summary>
            Clones the current document theme style to the destination document.
            </summary>
            <param name="destDoc">The destination document.</param>
        </member>
        <member name="M:Spire.Doc.Document.CloneCompatibilityTo(Spire.Doc.Document)">
            <summary>
            Clones the current document compatibility to the destination document.
            </summary>
            <param name="destDoc">The destination document.</param>
        </member>
        <member name="M:Spire.Doc.Document.ImportSection(Spire.Doc.Interface.ISection)">
            <summary>
            Imports section into document.
            </summary>
            <param name="section">The section.</param>
        </member>
        <member name="M:Spire.Doc.Document.ImportContent(Spire.Doc.Interface.IDocument)">
            <summary>
            Imports all content into the document.
            </summary>
            <param name="doc">The doc.</param>
        </member>
        <member name="M:Spire.Doc.Document.ImportContent(Spire.Doc.Interface.IDocument,System.Boolean)">
            <summary>
            Imports all content into document.
            </summary>
            <param name="doc">The doc.</param>
            <param name="importStyles">If document styles which have same names will be also imported
            to the destination document,set to <c>true</c>.</param>
        </member>
        <member name="M:Spire.Doc.Document.AddStyle(Spire.Doc.Documents.BuiltinStyle)">
            <summary>
            Adds the style to the document style.
            </summary>
            <param name="builtinStyle">The built-in style.</param>
        </member>
        <member name="M:Spire.Doc.Document.AcceptChanges">
            <summary>
            Accepts changes tracked from the moment of last change acceptance.
            </summary>
        </member>
        <member name="M:Spire.Doc.Document.RejectChanges">
            <summary>
            Rejects changes tracked from the moment of last change acceptance.
            </summary>
        </member>
        <member name="M:Spire.Doc.Document.Protect(Spire.Doc.ProtectionType)">
            <summary>
            Protects the document.
            </summary>
            <param name="type">The type of the protection.</param>
        </member>
        <member name="M:Spire.Doc.Document.Protect(Spire.Doc.ProtectionType,System.String)">
            <summary>
            Protects the document.
            </summary>
            <param name="type">The type of the protection</param>
            <param name="password">The password used for protection.</param>
        </member>
        <member name="M:Spire.Doc.Document.Encrypt(System.String)">
            <summary>
            Encrypts the document.
            </summary>
            <param name="password">Password.</param>
        </member>
        <member name="M:Spire.Doc.Document.RemoveEncryption">
            <summary>
            Removes the encryption.
            </summary>
        </member>
        <member name="M:Spire.Doc.Document.AddStyle(Spire.Doc.Documents.StyleType,System.String)">
            <summary>
            Adds new style to document.
            </summary>
            <param name="styleType">Style type</param>
            <param name="styleName">Style name</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Document.PrintMultipageToOneSheet(Spire.Doc.Printing.PagesPreSheet)">
            <summary>
            Print multipage to one sheet
            </summary>
            <param name="pagesPerSheet">The number of pages per one sheet</param>
        </member>
        <member name="M:Spire.Doc.Document.PrintMultipageToOneSheet(Spire.Doc.Printing.PagesPreSheet,System.Boolean)">
            <summary>
            Print multipage to one sheet
            </summary>
            <param name="pagesPerSheet">The number of pages per one sheet</param>
            <param name="printPageBorders">The flag that indicates whether printed the page borders</param>
        </member>
        <member name="M:Spire.Doc.Document.SaveToTxt(System.String,System.Text.Encoding)">
            <summary>
            Saves to text document with specified encoding.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="encoding">The encoding.</param>
        </member>
        <member name="M:Spire.Doc.Document.LoadHTML(System.IO.TextReader,System.String,Spire.Doc.Documents.XHTMLValidationType)">
            <summary>
            Load document in html format
            </summary>
            <param name="reader">Reader of html code.</param>
            <param name="baseURL">The default base URL for all links of external resource,
                                   it should be a absolute and well formed uri string, for example:
                                   http://www.e-iceblue.com/ or file:///C:/mywebsite/docs/
                                   If it's null, use the href attribute of base tag in html instead;
                                   Otherwise, it will overwrite the href attribute of base tag.</param>
            <param name="validationType">XHTML validation type.</param>
        </member>
        <member name="M:Spire.Doc.Document.GetCodePage(System.IO.Stream)">
            <summary>
            get the codepage from charset which is in "meta" tag.
            </summary>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Document.LoadHTML(System.IO.TextReader,Spire.Doc.Documents.XHTMLValidationType)">
            <summary>
            Load document in html format
            </summary>
            <param name="reader">Reader of html code.</param>
            <param name="validationType">XHTML validation type.</param>
        </member>
        <member name="M:Spire.Doc.Document.LoadText(System.String)">
            <summary>
            Opens the text document from a file with default encoding utf-8.
            </summary>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:Spire.Doc.Document.LoadText(System.IO.Stream)">
            <summary>
            Opens the text document from a stream with default encoding utf-8.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Spire.Doc.Document.LoadText(System.String,System.Text.Encoding)">
            <summary>
            Opens the text document with specified encoding from a file.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="encoding">The encoding</param>
        </member>
        <member name="M:Spire.Doc.Document.LoadText(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Opens the text document with specified encoding from a stream.
            </summary>
            <param name="stream">The text document stream.</param>
            <param name="encoding">The encoding</param>
        </member>
        <member name="M:Spire.Doc.Document.LoadText(System.IO.TextReader)">
            <summary>
            Opens the rtf document with specified encoding from a reader.
            </summary>
            <param name="reader">The rtf document reader</param>
        </member>
        <member name="M:Spire.Doc.Document.OpenBinaryDoc(System.String,System.String,Spire.Doc.FileFormat)">
            <summary>
            Opens doc file.
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:Spire.Doc.Document.LoadFromFile(System.String)">
            <summary>
            Opens doc file.
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:Spire.Doc.Document.LoadFromFile(System.String,Spire.Doc.FileFormat)">
            <summary>
            Opens the document from file in Xml or Microsoft Word format.
            </summary>
            <param name="fileName"></param>
            <param name="formatType"></param>
        </member>
        <member name="M:Spire.Doc.Document.LoadFromFile(System.String,Spire.Doc.FileFormat,Spire.Doc.Documents.XHTMLValidationType)">
            <summary>
            Opens the HTML document from stream .
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="formatType">Type of the format.</param>
            <param name="validationType">Type of the validation.</param>
        </member>
        <member name="M:Spire.Doc.Document.LoadFromFile(System.String,Spire.Doc.FileFormat,System.String)">
            <summary>
            Opens the document from file in Xml or Microsoft Word format.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="formatType">Type of the format.</param>
            <param name="password">The password.</param>
        </member>
        <member name="M:Spire.Doc.Document.LoadFromFileInReadMode(System.String,Spire.Doc.FileFormat)">
            <summary>
            LoadFromStream new document in read-only mode.
            </summary>
            <param name="strFileName">File to open.</param>
            <param name="formatType">Type of the format.</param>   
        </member>
        <member name="M:Spire.Doc.Document.LoadRtf(System.String)">
            <summary>
            Opens the rtf document from a file.
            </summary>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:Spire.Doc.Document.LoadRtf(System.IO.Stream)">
            <summary>
            Opens the rtf document from a stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Spire.Doc.Document.LoadRtf(System.String,System.Text.Encoding)">
            <summary>
            Opens the rtf document with specified encoding from a file.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="encoding">The encoding</param>
        </member>
        <member name="M:Spire.Doc.Document.LoadRtf(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Opens the rtf document with specified encoding from a stream.
            </summary>
            <param name="stream">The rtf document stream.</param>
            <param name="encoding">The encoding</param>
        </member>
        <member name="M:Spire.Doc.Document.LoadRtf(System.IO.TextReader)">
            <summary>
            Opens the rtf document with specified encoding from a reader.
            </summary>
            <param name="reader">The rtf document reader</param>
        </member>
        <member name="M:Spire.Doc.Document.SaveToFile(System.String)">
            <summary>
            Saves to file in Microsoft Word format.
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:Spire.Doc.Document.SaveToFile(System.String,Spire.Doc.ToPdfParameterList)">
            <summary>
            Saves the document to PDF file.
            </summary>
            <param name="fileName">File name</param>
            <param name="paramList">Parameter list</param>        
        </member>
        <member name="M:Spire.Doc.Document.SaveToEpub(System.String,Spire.Doc.Fields.DocPicture)">
            <summary>
            Saves the EPUB document.
            </summary>
            <param name="fileName">The file name.</param>
            <param name="coverImage">The cover image.</param>
        </member>
        <member name="M:Spire.Doc.Document.SaveToEpub(System.IO.Stream,Spire.Doc.Fields.DocPicture)">
            <summary>
            Saves the EPUB document.
            </summary>
            <param name="stream">The stream.</param>
            <param name="coverImage">The cover image.</param>
        </member>
        <member name="M:Spire.Doc.Document.InsertTextFromFile(System.String,Spire.Doc.FileFormat)">
            <summary>
            Insert text from a file.
            </summary>
            <param name="fileName">File name</param>
            <param name="fileFormat">Type of the format</param>
        </member>
        <member name="M:Spire.Doc.Document.InsertTextFromStream(System.IO.Stream,Spire.Doc.FileFormat)">
            <summary>
            Insert text from stream.
            </summary>
            <param name="stream">The stream.</param>
            <param name="fileFormat">Type of the format</param>
        </member>
        <member name="M:Spire.Doc.Document.SaveToFile(System.String,Spire.Doc.FileFormat)">
            <summary>
            Saves the document to file in Xml or Microsoft Word format.
            </summary>
            <param name="fileName">File name</param>
            <param name="formatType">Type of the format</param>
        </member>
        <member name="M:Spire.Doc.Document.SaveToFile(System.String,Spire.Doc.FileFormat,System.Web.HttpResponse,Spire.Doc.HttpContentType)">
            <summary>
            Saves the specified file name.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="formatType">Type of the format.</param>
            <param name="response">The response.</param>
            <param name="contentDisposition">The content disposition.</param>
        </member>
        <member name="M:Spire.Doc.Document.SaveToSVG(System.String)">
            <summary>
            Saves the SVG.
            </summary>
            <param name="fileName">The file name.</param>
        </member>
        <member name="M:Spire.Doc.Document.SaveToSVG">
            <summary>
            Saves the SVG.
            </summary>        
        </member>
        <member name="M:Spire.Doc.Document.SaveToStream(System.IO.Stream,Spire.Doc.ToPdfParameterList)">
            <summary>
            Saves the document into stream.
            </summary>
            <param name="stream">The stream.</param>
            <param name="paramList"></param>
        </member>
        <member name="M:Spire.Doc.Document.LoadFromStream(System.IO.Stream,Spire.Doc.FileFormat,Spire.Doc.Documents.XHTMLValidationType)">
            <summary>
            Opens the HTML document from stream .
            </summary>
            <param name="stream">The stream.</param>
            <param name="formatType">Type of the format.</param>
            <param name="validationType">Type of the validation.</param>
        </member>
        <member name="M:Spire.Doc.Document.LoadFromHtmlFile(System.String,Spire.Doc.FileFormat)">
            <summary>
            Opens the HTML document from file.
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:Spire.Doc.Document.LoadFromStream(System.IO.Stream,Spire.Doc.FileFormat)">
            <summary>
            Opens the document from stream in Xml or Microsoft Word format.
            </summary>
            <param name="stream"></param>
            <param name="formatType"></param>
        </member>
        <member name="M:Spire.Doc.Document.LoadFromStream(System.IO.Stream,Spire.Doc.FileFormat,System.String)">
            <summary>
            Opens the document from stream in Xml or Microsoft Word format.
            </summary>
            <param name="stream">The stream.</param>
            <param name="formatType">Type of the format.</param>
            <param name="password">The password.</param>
        </member>
        <member name="M:Spire.Doc.Document.SaveToStream(System.IO.Stream,Spire.Doc.FileFormat,System.String,System.String)">
            <summary>
            Saves document to stream and digitally sign, Only DOC and DOCX are supported.
            </summary>
            <param name="stream">The stream.</param>
            <param name="fileFormat">The file format.</param>
            <param name="certificatePath">Path to the file certificate</param>
            <param name="securePassword">Password of the certificate.</param>
        </member>
        <member name="M:Spire.Doc.Document.SaveToStream(System.IO.Stream,Spire.Doc.FileFormat,System.Byte[],System.String)">
            <summary>
            Saves document to stream and digitally sign, Only DOC and DOCX are supported.
            </summary>
            <param name="stream">The stream.</param>
            <param name="fileFormat">The file format.</param>
            <param name="certificateData">The certificate data.</param>
            <param name="securePassword">Password of the certificate.</param>
        </member>
        <member name="M:Spire.Doc.Document.SaveToFile(System.String,Spire.Doc.FileFormat,System.String,System.String)">
            <summary>
            Saves document to file and digitally sign, Only DOC and DOCX are supported.
            </summary>
            <param name="stream">The file.</param>
            <param name="fileFormat">The file format.</param>
            <param name="certificatePath">Path to the file certificate</param>
            <param name="securePassword">Password of the certificate.</param>
        </member>
        <member name="M:Spire.Doc.Document.SaveToFile(System.String,Spire.Doc.FileFormat,System.Byte[],System.String)">
            <summary>
            Saves document to file and digitally sign, Only DOC and DOCX are supported.
            </summary>
            <param name="stream">The file.</param>
            <param name="fileFormat">The file format.</param>
            <param name="certificateData">The certificate data.</param>
            <param name="securePassword">Password of the certificate.</param>
        </member>
        <member name="M:Spire.Doc.Document.SaveToStream(System.IO.Stream,Spire.Doc.FileFormat)">
            <summary>
            Saves the document into stream in Xml or Microsoft Word format.
            </summary>
            <param name="stream"></param>
            <param name="formatType"></param>
        </member>
        <member name="M:Spire.Doc.Document.SaveToFile(System.IO.Stream,Spire.Doc.FileFormat)">
            <summary>
            Saves the document into stream in Xml or Microsoft Word format.
            </summary>
            <param name="stream"></param>
            <param name="formatType"></param>
        </member>
        <member name="M:Spire.Doc.Document.Close">
            <summary>
            Closes this instance.
            </summary>
        </member>
        <member name="M:Spire.Doc.Document.Dispose">
            <summary>
            Prerforms application-defined tasks associated with freeing,releasing, or
            resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Spire.Doc.Document.SaveToImages(System.Int32,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Save the specified page into image
            </summary>
            <param name="pageIndex">Page index</param>
            <param name="imageFormat">The ImageFormat</param>
            <returns>Returns the image as stream</returns>
        </member>
        <member name="M:Spire.Doc.Document.SaveToImages(Spire.Doc.Documents.ImageType)">
            <summary>
            Save the whole document into images
            </summary>
            <param name="type">The ImageType</param>
            <returns>Return the images</returns>
        </member>
        <member name="M:Spire.Doc.Document.SaveToImages(System.Int32,System.Int32,Spire.Doc.Documents.ImageType)">
            <summary>
            Save the specified range of pages into images
            </summary>
            <param name="pageIndex">Page index (Zero based)</param>
            <param name="pageCount">Number of pages</param>
            <param name="type">The ImageType</param>
            <returns>Return the images</returns>
        </member>
        <member name="M:Spire.Doc.Document.SaveToImages(System.Int32,Spire.Doc.Documents.ImageType)">
            <summary>
            Save the specified page into image
            </summary>
            <param name="pageIndex">Page index</param>
            <param name="type"> The ImageType</param>
            <returns>Returns the image</returns>
        </member>
        <member name="M:Spire.Doc.Document.SaveToImages(Spire.Doc.Documents.ImageType,Spire.Doc.ToImageOption)">
            <summary>
            Save the specified page into image
            </summary>
            <param name="type">The ImageType</param>
            <param name="toImageOption"></param>        
            <returns>Returns the image array</returns>
        </member>
        <member name="M:Spire.Doc.Document.FindPattern(System.Text.RegularExpressions.Regex)">
            <summary>
            Finds and returns entry of specified regular expression along with formatting.
            </summary>
            <param name="pattern">regex pattern</param>
            <returns>Found text selection</returns>
        </member>
        <member name="M:Spire.Doc.Document.FindPatternInLine(System.Text.RegularExpressions.Regex)">
            <summary>
            Finds the first entry of specified pattern in single-line mode.
            </summary>
            <param name="pattern">The pattern.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Document.FindString(System.String,System.Boolean,System.Boolean)">
            <summary>
            Finds and returns string along with formatting.
            </summary>
            <param name="matchString"></param>
            <param name="caseSensitive"></param>
            <param name="wholeWord"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Document.FindStringInLine(System.String,System.Boolean,System.Boolean)">
            <summary>
            Finds the first entry of matchString text in single-line mode.
            </summary>
            <param name="matchString">The string to find.</param>
            <param name="caseSensitive">if set to <c>true</c> use case sensitive search.</param>
            <param name="wholeWord">if it search the whole word, set to <c>true</c>.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Document.FindAllPattern(System.Text.RegularExpressions.Regex)">
            <summary>
            Returns all entries of matchString regex.
            </summary>
            <param name="pattern"></param>
        </member>
        <member name="M:Spire.Doc.Document.FindAllPattern(System.Text.RegularExpressions.Regex,System.Boolean)">
            <summary>
            Returns all entries of matchString regex.
            </summary>
            <param name="pattern"></param>
            <param name="isAdvancedSearch"></param>
        </member>
        <member name="M:Spire.Doc.Document.FindAllString(System.String,System.Boolean,System.Boolean)">
            <summary>
            Returns all entries of matchString string, taking into consideration caseSensitive
            and wholeWord options.
            </summary>
            <param name="matchString"></param>
            <param name="caseSensitive"></param>
            <param name="wholeWord"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Document.Replace(System.Text.RegularExpressions.Regex,System.String)">
            <summary>
            Replaces all entries of matchString regular expression with newValue string.
            </summary>
            <param name="pattern"></param>
            <param name="newValue"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Document.Replace(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Replaces all entries of matchString string with newValue string, taking into
            consideration caseSensitive and wholeWord options.
            </summary>
            <param name="matchString"></param>
            <param name="newValue"></param>
            <param name="caseSensitive"></param>
            <param name="wholeWord"></param>
        </member>
        <member name="M:Spire.Doc.Document.Replace(System.String,Spire.Doc.Documents.TextSelection,System.Boolean,System.Boolean)">
            <summary>
            Replaces all entries of matchString string with TextSelection, taking into
            consideration caseSensitive and wholeWord options.
            </summary>
            <param name="matchString">The matchString.</param>
            <param name="textSelection">The text selection.</param>
            <param name="caseSensitive">if it is case sensitive, set to <c>true</c>.</param>
            <param name="wholeWord">if it specifies whole word, set to <c>true</c>.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Document.Replace(System.Text.RegularExpressions.Regex,Spire.Doc.Documents.TextSelection)">
            <summary>
            Replaces all entries of matchString regular expression with TextRangesHolder.
            </summary>
            <param name="pattern">The pattern.</param>
            <param name="textSelection">The text selection.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Document.CloneWebSettingsTo(Spire.Doc.Document)">
            <summary>
            clone Websettings to other document
            </summary>
            <param name="otherDoc">The other doc</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Document.Replace(System.String,Spire.Doc.Interface.IDocument,System.Boolean,System.Boolean)">
            <summary>
            Replaces the specified matchString.
            </summary>
            <param name="matchString">The matchString.</param>
            <param name="matchDoc">The newValue doc.</param>
            <param name="caseSensitive">if it is case sensitive, set to <c>true</c>.</param>
            <param name="wholeWord">if specifies whole word,set to <c>true</c>.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Document.UpdateWordCount">
            <summary>
            Update Paragraphs count, Word count and Character count
            </summary>
        </member>
        <member name="M:Spire.Doc.Document.UpdateWordCount(System.Char[])">
            <summary>
            Update Paragraphs count, Word count and Character count.
            </summary>
            <param name="splitchar">The word separator. </param>
        </member>
        <member name="M:Spire.Doc.Document.UpdateWordCount(System.Char[],System.Boolean)">
            <summary>
            Update Paragraphs count, Word count and Character count.
            </summary>
            <param name="splitchar">The word separator.</param>
            <param name="includeTbFnEn">The include text boxes,footnotes and endnotes.</param>
        </member>
        <member name="M:Spire.Doc.Document.CheckProtectionPassWord(System.String)">
            <summary>
            Check that the password entered is the same as the permission protection password
            </summary>
            <param name="password">The enter password</param>
            <returns>whether the password entered is the same as the permission protection password</returns>
        </member>
        <member name="M:Spire.Doc.Document.UpdateSectionWordCount(System.Char[],System.Boolean)">
            <summary>
            Update section word count.
            </summary>
            <param name="splitchar"></param>
            <param name="includeTb"></param>
        </member>
        <member name="M:Spire.Doc.Document.UpdateFootnoteWordCount(System.Char[],System.Boolean)">
            <summary>
            Update footnote word count.
            </summary>
            <param name="splitchar"></param>
        </member>
        <member name="M:Spire.Doc.Document.GetPageCount">
            <summary>
            Gets total number of pages for document.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Document.UpdateTableOfContents">
            <summary>
            Update Table of contents in the document.
            </summary>
        </member>
        <member name="M:Spire.Doc.Document.UpdateTableOfContents(Spire.Doc.Fields.TableOfContent)">
            <summary>
            Update specified Table of content in the document.
            </summary>
        </member>
        <member name="M:Spire.Doc.Document.UpdateTOCPageNumbers">
            <summary>
            Update Table of contents page numbers in the document.
            </summary>
        </member>
        <member name="M:Spire.Doc.Document.UpdateTOCPageNumbers(Spire.Doc.Fields.TableOfContent)">
            <summary>
            Update specified Table of content page numbers in the document.
            </summary>
            <param name="toc">specified Table of content</param>
        </member>
        <member name="M:Spire.Doc.Document.Compare(Spire.Doc.Document,System.String)">
            <summary>
            Compares this document with another document.
            </summary>
            <param name="document">Document to compare</param>
            <param name="author">The author to use for revisions</param>
        </member>
        <member name="M:Spire.Doc.Document.Compare(Spire.Doc.Document,System.String,Spire.Doc.Documents.Comparison.CompareOptions)">
            <summary>
            Compares this document with another document.
            </summary>
            <param name="document">Document to compare</param>
            <param name="author">The author to use for revisions</param>
            <param name="options">The comparison parameter</param>
        </member>
        <member name="M:Spire.Doc.Document.Compare(Spire.Doc.Document,System.String,System.DateTime)">
            <summary>
            Compares this document with another document.
            </summary>
            <param name="document">Document to compare</param>
            <param name="author">The author to use for revisions</param>
            <param name="dateTime">The date and time to use for revisions</param>
        </member>
        <member name="M:Spire.Doc.Document.Compare(Spire.Doc.Document,System.String,System.DateTime,Spire.Doc.Documents.Comparison.CompareOptions)">
            <summary>
            Compares this document with another document.
            </summary>
            <param name="document">Document to compare</param>
            <param name="author">The author to use for revisions</param>
            <param name="dateTime">The date and time to use for revisions</param>
            <param name="options">The comparison parameter</param>
        </member>
        <member name="M:Spire.Doc.Document.ReplaceInLine(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Replaces all entries of matchString text with newValue text in single-line mode.
            </summary>
            <param name="matchString">The matchString.</param>
            <param name="newValue">The newValue.</param>
            <param name="caseSensative">if it specifies case sensative newValue, set to <c>true</c>.</param>
            <param name="wholeWord">if it specifies only whole word will be replaced, set to <c>true</c>.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Document.ReplaceInLine(System.Text.RegularExpressions.Regex,System.String)">
            <summary>
            Replaces all entries with specified pattern with newValue text in single-line mode.
            </summary>
            <param name="pattern">The pattern.</param>
            <param name="newValue">The newValue.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Document.ReplaceInLine(System.String,Spire.Doc.Documents.TextSelection,System.Boolean,System.Boolean)">
            <summary>
            Replaces the matchString text with matchSelection in single-line mode.
            </summary>
            <param name="matchString">The matchString.</param>
            <param name="matchSelection">The matchSelection.</param>
            <param name="caseSensitive">if it is case sensitive newValue, set to <c>true</c>.</param>
            <param name="wholeWord">if it replaces only whole word, set to <c>true</c>.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Document.ReplaceInLine(System.Text.RegularExpressions.Regex,Spire.Doc.Documents.TextSelection)">
            <summary>
            Replaces the matchString pattern with matchSelection in single-line mode.
            </summary>
            <param name="pattern">The pattern.</param>
            <param name="matchSelection">The matchSelection.</param>
            <returns>The number of performed replaces.</returns>
        </member>
        <member name="M:Spire.Doc.Document.FindString(Spire.Doc.BodyRegion,System.String,System.Boolean,System.Boolean)">
            <summary>
            Finds the next entry of matchString string, taking into consideration caseSensitive
            and wholeWord options.
            </summary>
            <param name="start">Search starts.</param>
            <param name="matchString">The string to find.</param>
            <param name="caseSensitive">if it specifies case sensitive search, set to <c>true</c> .</param>
            <param name="wholeWord">if it search for the whole word, set to <c>true</c> .</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Document.FindPattern(Spire.Doc.BodyRegion,System.Text.RegularExpressions.Regex)">
            <summary>
            Finds the next entry of matchString pattern.
            </summary>
            <param name="start">Search starts</param>
            <param name="pattern">The pattern.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Document.FindStringInLine(Spire.Doc.BodyRegion,System.String,System.Boolean,System.Boolean)">
            <summary>
            Finds the next matchString text starting from specified using single-line mode.
            </summary>
            <param name="start">Search start.</param>
            <param name="matchString">The matchString.</param>
            <param name="caseSensitive">if it is case sensitive search, set to <c>true</c>.</param>
            <param name="wholeWord">if it search for whole word, set to <c>true</c> .</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Document.FindPatternInLine(Spire.Doc.BodyRegion,System.Text.RegularExpressions.Regex)">
            <summary>
            Finds the text which fit the specified pattern starting from start.
            using single-line mode.
            </summary>
            <param name="start">Search start.</param>
            <param name="pattern">The pattern.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Document.ResetFindState">
            <summary>
            Resets the FindPattern.
            </summary>
        </member>
        <member name="M:Spire.Doc.Document.CreateParagraphItem(Spire.Doc.Documents.ParagraphItemType)">
            <summary>
            Creates new paragraph item instance.
            </summary>
            <param name="itemType">Paragraph item type</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Document.GetSaveFileVer">
            <summary>
            Get the version of the save file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Document.ClearMacros">
            <summary>
            Removes the macros from the document.
            </summary>
        </member>
        <member name="M:Spire.Doc.Document.SetDateTimeOfUnitTest(System.DateTime)">
            <summary>
            Sets date and time of the unit test.
            For unit testing use only.
            </summary>
            <param name="dateTime">The date and time used in the test document.</param>
        </member>
        <member name="M:Spire.Doc.Document.ResetPageLayoutCache">
            <summary>
            Reset the page layout cache data of the new engine.
            </summary>
        </member>
        <member name="M:Spire.Doc.Document.SetCustomFontsFolders(System.String)">
            <summary>
            Set the path to the folder where the custom font is located.
            </summary>
            <param name="fontPath">the folder path.</param>
        </member>
        <member name="M:Spire.Doc.Document.ClearCustomFontsFolders">
            <summary>
            Clear the path of the folder where the custom font is located.
            </summary>
        </member>
        <member name="M:Spire.Doc.Document.SetGlobalCustomFontsFolders(System.String)">
            <summary>
            Sets the path to the folder where the global custom font is located.
            </summary>
            <param name="fontPath">the folder path.</param>
        </member>
        <member name="M:Spire.Doc.Document.SetGlobalCustomFontsFolders(System.IO.Stream[])">
            <summary>
            Sets the path to the folder where the global custom font is located.
            </summary>
            <param name="fontStreamList">The custom font stream array.</param>
        </member>
        <member name="M:Spire.Doc.Document.ClearGlobalCustomFontsFolders">
            <summary>
            Clear the path of the folder where the global custom font is located.
            </summary>
        </member>
        <member name="M:Spire.Doc.Document.ClearSystemFontCache">
            <summary>
            Clears the memory used by cached system fonts.
            </summary>
        </member>
        <member name="M:Spire.Doc.Document.UpdatePageLayout">
            <summary>
            Updates the page layout of the document.
            </summary>
        </member>
        <member name="M:Spire.Doc.Document.RenderToScale(System.Int32,System.Drawing.Graphics,System.Single,System.Single,System.Single)">
            <summary>
            Draws a document page at the specified scale into the System.Drawing.Graphics object.
            </summary>
            <param name="pageIndex">The 0-based page index.</param>
            <param name="graphics">The object where to draws to.</param>
            <param name="x">The X coordinate (in world units) of the top left corner of the rendered page.</param>
            <param name="y">The Y coordinate (in world units) of the top left corner of the rendered page.</param>
            <param name="scale"> The scale for rendering the page (1.0 is 100%).</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Document.RenderToSize(System.Int32,System.Drawing.Graphics,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a document page at the specified size into the System.Drawing.Graphics object.
            </summary>
            <param name="pageIndex">The 0-based page index.</param>
            <param name="graphics">The object where to render to.</param>
            <param name="x">The X coordinate (in world units) of the top left corner of the rendered page.</param>
            <param name="y">The Y coordinate (in world units) of the top left corner of the rendered page.</param>
            <param name="width">The maximum width (in world units) that can be occupied by the rendered page.</param>
            <param name="height">The maximum height (in world units) that can be occupied by the rendered page.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Document.UpdateTableLayout">
            <summary>
            Update table grid before saving the document when using the new engine.
            </summary>
        </member>
        <member name="T:Spire.Doc.SpireDocEvalInfo">
            <summary>
            Represents the method that will handle an event that with event data.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">The args that contains event data.</param>
        </member>
        <member name="T:Spire.Doc.SpireDocEvalException">
            <summary>
            Class free version exception.
            </summary>
        </member>
        <member name="M:Spire.Doc.SpireDocEvalException.#ctor(System.String)">
            <summary>
            Class using the specified error message and a new instance of the class.
            </summary>
            <param name="message">the message.</param>
        </member>
        <member name="P:Spire.Doc.SpireDocEvalException.Message">
            <summary>
            Gets the message that describes the current exception.
            </summary>
        </member>
        <member name="T:Spire.Doc.Hyphenation">
            <summary>
            Class represents Hyphenation settings of the document.
            </summary>
        </member>
        <member name="T:Spire.Doc.Template">
            <summary>
            Class represents Attached tempalte of the document.
            </summary>
        </member>
        <member name="P:Spire.Doc.Template.Path">
             <summary>
            Gets or sets the path of the attached template.
             </summary>
             <value>The path to attached template document</value>
        </member>
        <member name="M:Spire.Doc.Template.#ctor(Spire.Doc.SttbfAssoc)">
            <summary>
            Initializes a new instance of the <see cref="!:AttachedTemplate"/> class.
            </summary>
            <param name="assocStrings">The SttbfAssoc.</param>
        </member>
        <member name="P:Spire.Doc.SttbfAssoc.AttachedTemplate">
            <summary>
            Gets or sets the attached template.
            </summary>
            <value>The attached template.</value>
        </member>
        <member name="P:Spire.Doc.SttbfAssoc.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:Spire.Doc.SttbfAssoc.Subject">
            <summary>
            Gets or sets the subject.
            </summary>
            <value>The subject.</value>
        </member>
        <member name="P:Spire.Doc.SttbfAssoc.KeyWords">
            <summary>
            Gets or sets the key words.
            </summary>
            <value>The key words.</value>
        </member>
        <member name="P:Spire.Doc.SttbfAssoc.Author">
            <summary>
            Gets or sets the author.
            </summary>
            <value>The author.</value>
        </member>
        <member name="P:Spire.Doc.SttbfAssoc.LastModifiedBy">
            <summary>
            Gets or sets the last modified by.
            </summary>
            <value>The last modified by.</value>
        </member>
        <member name="P:Spire.Doc.SttbfAssoc.MailMergeDataSource">
            <summary>
            Gets or sets the mail merge data source.
            </summary>
            <value>The mail merge data source.</value>
        </member>
        <member name="P:Spire.Doc.SttbfAssoc.MailMergeHeaderDocument">
            <summary>
            Gets or sets the mail merge header document.
            </summary>
            <value>The mail merge header document.</value>
        </member>
        <member name="P:Spire.Doc.SttbfAssoc.WritePassword">
            <summary>
            Gets or sets the write password.
            </summary>
            <value>The write password.</value>
        </member>
        <member name="M:Spire.Doc.SttbfAssoc.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.SttbfAssoc"/> class.
            </summary>
        </member>
        <member name="M:Spire.Doc.SttbfAssoc.Parse(System.Byte[])">
            <summary>
            Parses the specified associated strings.
            </summary>
            <param name="associatedStrings">The associated strings.</param>
        </member>
        <member name="M:Spire.Doc.SttbfAssoc.GetAssociatedStrings">
            <summary>
            Gets the associated strings as byte array.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Spire.Doc.PasswordErrorException">
            <summary>
            Class password error exception.
            </summary>
        </member>
        <member name="M:Spire.Doc.PasswordErrorException.#ctor(System.String)">
            <summary>
            Class using the specified error message and a new instance of the class.
            </summary>
            <param name="message">the message.</param>
        </member>
        <member name="P:Spire.Doc.PasswordErrorException.Message">
            <summary>
            Gets the message that describes the current exception.
            </summary>
        </member>
        <member name="P:Spire.Doc.PrivateFontPath.FontPath">
            <summary>
            Gets or sets the path of the font.
            </summary>
        </member>
        <member name="P:Spire.Doc.PrivateFontPath.FontName">
            <summary>
            Gets or sets the name of the font.
            </summary>
        </member>
        <member name="P:Spire.Doc.PrivateFontPath.FontStyle">
            <summary>
            Gets of sets the style of the font.
            </summary>
        </member>
        <member name="P:Spire.Doc.PrivateFontPath.UseArabicConcatenationRules">
            <summary>
            Gets or sets a value indicating whether use arabic concatenation rules. default is true.
            </summary>
            <value><c>true</c> if true use arabic concatenation rules,<c>false</c>.</value>
        </member>
        <member name="M:Spire.Doc.PrivateFontPath.#ctor(System.String,System.String)">
            <summary>
             Initializes a new instance of the PrivateFontPath struct.
            </summary>
            <param name="fontName">The font name.</param>
            <param name="fontPath">The font path.</param>
        </member>
        <member name="M:Spire.Doc.PrivateFontPath.#ctor(System.String,System.String,System.Boolean)">
            <summary>
             Initializes a new instance of the PrivateFontPath struct.
            </summary>
            <param name="fontName">The font name.</param>
            <param name="fontPath">The font path.</param>
            <param name="useArabicConcatenationRules">Use arabic concatenation rules. default is true.</param>
        </member>
        <member name="M:Spire.Doc.PrivateFontPath.#ctor(System.String,System.Drawing.FontStyle,System.String)">
            <summary>
            Initializes a new instance of the PrivateFontPath struct.
            </summary>
            <param name="fontName">The font name.</param>
            <param name="fontStyle">The font style.</param>
            <param name="fontPath">The font path.</param>
        </member>
        <member name="M:Spire.Doc.PrivateFontPath.#ctor(System.String,System.Drawing.FontStyle,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the PrivateFontPath struct.
            </summary>
            <param name="fontName">The font name.</param>
            <param name="fontStyle">The font style.</param>
            <param name="fontPath">The font path.</param>
            <param name="useArabicConcatenationRules">Use arabic concatenation rules. default is true.</param>
        </member>
        <member name="P:Spire.Doc.PrivateFontStructOfDoc.FontPath">
            <summary>
            Gets or sets the path of the font.
            </summary>
        </member>
        <member name="P:Spire.Doc.PrivateFontStructOfDoc.FontStream">
            <summary>
            Gets or set the font stream.
            </summary>
        </member>
        <member name="P:Spire.Doc.PrivateFontStructOfDoc.PrivateFontCollection">
            <summary>
            Gets or sets the private font collection.
            </summary>
        </member>
        <member name="T:Spire.Doc.DefaultFontName">
            <summary>
            default font name.
            </summary>
        </member>
        <member name="P:Spire.Doc.DefaultFontName.AsciiFontName">
            <summary>
            Gets/Sets the ascii font name.Specifies a font which shall be used to format all charachters 
            in the Unicode range (\u000-u007F) within the parent run.
            </summary>
        </member>
        <member name="P:Spire.Doc.DefaultFontName.EastAsiaFontName">
            <summary>
            Gets/Sets the east asia font name.Specifies a font which shall be used to format all characters
            in an East Asian Unicode range within the parent run. 
            </summary>
        </member>
        <member name="P:Spire.Doc.DefaultFontName.HAnsiFontName">
            <summary>
            Gets/Sets the high ansi font name.Specifies a font which shall be used to format all characters 
            in a Unicode range within the parent run.
            </summary>
        </member>
        <member name="P:Spire.Doc.DefaultFontName.CsFontName">
            <summary>
            Gets/Sets the complex script font name.Specifies a font which shall be used to format all characters 
            in a complex script Unicode range within the parent run.
            </summary>
        </member>
        <member name="T:Spire.Doc.DifferRevisions">
            <summary>
            Class difer revisions.
            </summary>
        </member>
        <member name="M:Spire.Doc.DifferRevisions.#ctor(Spire.Doc.Document)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.DifferRevisions"/> struct.
            </summary>
            <param name="doc">The document.</param>
        </member>
        <member name="P:Spire.Doc.DifferRevisions.DeleteRevisions">
            <summary>
            Gets the delete revisions.
            </summary>
        </member>
        <member name="P:Spire.Doc.DifferRevisions.InsertRevisions">
            <summary>
            Gets the insert revisions.
            </summary>
        </member>
        <member name="P:Spire.Doc.PageSetup.DefaultTabWidth">
            <summary>
            Gets or sets the length of the auto tab.
            </summary>
            <value>The length of the auto tab.</value>
        </member>
        <member name="P:Spire.Doc.PageSetup.PageSize">
            <summary>
            Gets or sets page size in points.
            </summary>
        </member>
        <member name="P:Spire.Doc.PageSetup.Orientation">
            <summary>
            Returns or sets orientation of a page.
            </summary>
        </member>
        <member name="P:Spire.Doc.PageSetup.VerticalAlignment">
            <summary>
            Gets or setsvertical alignment.
            </summary>
        </member>
        <member name="P:Spire.Doc.PageSetup.Margins">
            <summary>
            Gets or sets page margins in points.
            </summary>
        </member>
        <member name="P:Spire.Doc.PageSetup.Gutter">
            <summary>
            Gets or sets extra space added to the margin for document binding in points.
            </summary>
        </member>
        <member name="P:Spire.Doc.PageSetup.HeaderDistance">
            <summary>
            Gets or sets height of header in points.
            </summary>
        </member>
        <member name="P:Spire.Doc.PageSetup.FooterDistance">
            <summary>
            Gets or sets footer height in points.
            </summary>
        </member>
        <member name="P:Spire.Doc.PageSetup.ClientWidth">
            <summary>
            Gets width of client area.
            </summary>
        </member>
        <member name="P:Spire.Doc.PageSetup.ClientHeight">
            <summary>
            Gets width of client area.
            </summary>
        </member>
        <member name="P:Spire.Doc.PageSetup.DifferentFirstPageHeaderFooter">
            <summary>
            Setting to specify that the current section has a different header/footer for first page.
            </summary>
        </member>
        <member name="P:Spire.Doc.PageSetup.DifferentOddAndEvenPagesHeaderFooter">
            <summary>
            True if the document has different headers and footers 
            for odd-numbered and even-numbered pages. 
            </summary>
        </member>
        <member name="P:Spire.Doc.PageSetup.LineNumberingRestartMode">
            <summary>
            Returns or sets line numbering mode
            </summary>
        </member>
        <member name="P:Spire.Doc.PageSetup.LineNumberingStep">
            <summary>
            Gets or sets line numbering step
            </summary>
        </member>
        <member name="P:Spire.Doc.PageSetup.LineNumberingStartValue">
            <summary>
            Gets or setsline numbering start value
            </summary>
        </member>
        <member name="P:Spire.Doc.PageSetup.LineNumberingDistanceFromText">
            <summary>
            Gets or setsdistance from text in lines numbering
            </summary>
        </member>
        <member name="P:Spire.Doc.PageSetup.PageBordersApplyType">
            <summary>
            Gets or sets the value that determine on which pages border is applied
            </summary>
        </member>
        <member name="P:Spire.Doc.PageSetup.PageBorderOffsetFrom">
            <summary>
            Gets or sets the position of page border
            </summary>
        </member>
        <member name="P:Spire.Doc.PageSetup.IsFrontPageBorder">
            <summary>
            Gets or sets a value indicating whether this instance is front page border.
            </summary>
        </member>
        <member name="P:Spire.Doc.PageSetup.PageBorderIncludeHeader">
            <summary>
            Gets or sets a value indicating whether the page border include the header.
            If the page border is not measured from the text extents using a value of text in the PageBorderOffsetFrome, then it can be ignored.
            </summary>
        </member>
        <member name="P:Spire.Doc.PageSetup.PageBorderIncludeFooter">
            <summary>
            Gets or sets a value indicating whether the page border include the footer.
            If the page border is not measured from the text extents using a value of text in the PageBorderOffsetFrome, then it can be ignored.
            </summary>
        </member>
        <member name="P:Spire.Doc.PageSetup.AlignBordersAndEdges">
            <summary>
            Gets or sets a value indicating whether the paragraph and table borders align with page borders.
            If the page border is not measured from the text extents using a value of text in the PageBorderOffsetFrome, then it can be ignored.
            </summary>
        </member>
        <member name="P:Spire.Doc.PageSetup.Borders">
            <summary>
            Gets page borders collection
            </summary>
        </member>
        <member name="P:Spire.Doc.PageSetup.Bidi">
            <summary>
            Gets or sets whether section contains right-to-left text. 
            </summary>
        </member>
        <member name="P:Spire.Doc.PageSetup.EqualColumnWidth">
            <summary>
            Gets or sets a value indicating whether equal column width.
            </summary>
            <value><c>true</c> if equal column width; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Doc.PageSetup.PageNumberStyle">
            <summary>
            Gets or sets the page number style.
            </summary>
            <value>The page number style.</value>
        </member>
        <member name="P:Spire.Doc.PageSetup.PageStartingNumber">
            <summary>
            Gets or sets the page starting number.
            </summary>
            <value>The page starting number.</value>
        </member>
        <member name="P:Spire.Doc.PageSetup.RestartPageNumbering">
            <summary>
            Gets or sets a value indicating whether to restart page numbering.
            </summary>
            <value>
            	if restart page numbering, set to <c>true</c>.
            </value>
        </member>
        <member name="P:Spire.Doc.PageSetup.GridType">
            <summary>
            Gets or Sets the grid type of this section.
            </summary>
        </member>
        <member name="P:Spire.Doc.PageSetup.LinesPerPage">
            <summary>
            Gets or sets the number of lines per page in the document grid.
            </summary>
        </member>
        <member name="P:Spire.Doc.PageSetup.ColumnsLineBetween">
            <summary>
            Gets or sets the value specifies if a vertical line is draw between each 
            of the text columns in the this section.
            </summary>
        </member>
        <member name="P:Spire.Doc.PageSetup.CharacterSpacingControl">
            <summary>
            Character Spacing Control.
            </summary>
        </member>
        <member name="M:Spire.Doc.PageSetup.InsertPageNumbers(System.Boolean,Spire.Doc.Documents.PageNumberAlignment)">
            <summary>
            Inserts the page numbers.
            </summary>
            <param name="fromTopPage">if it specifies the top of page, set to <c>true</c>.</param>
            <param name="horizontalAlignment">The horizontal alignment.</param>
        </member>
        <member name="P:Spire.Doc.Section.Body">
            <summary>
            Gets the section body.
            </summary>
            <value>The body.</value>
        </member>
        <member name="P:Spire.Doc.Section.EndnoteOptions">
            <summary>
            Gets or sets options that control numbering and positioning of endnotes in current section. 
            </summary>
        </member>
        <member name="P:Spire.Doc.Section.FootnoteOptions">
            <summary>
            Gets or sets options that control numbering and positioning of footnote in current section. 
            </summary>
        </member>
        <member name="P:Spire.Doc.Section.HeadersFooters">
            <summary>
            Gets headers/footers of current section.
            </summary>
        </member>
        <member name="P:Spire.Doc.Section.PageSetup">
            <summary>
            Gets page Setup of current section.
            </summary>
        </member>
        <member name="P:Spire.Doc.Section.Columns">
            <summary>
            Get collection of columns which logically divide page on many.
            printing/publishing areas
            </summary>
        </member>
        <member name="P:Spire.Doc.Section.BreakCode">
            <summary>
            Returns or sets break code.
            </summary>
        </member>
        <member name="P:Spire.Doc.Section.DocumentObjectType">
            <summary>
            Gets the type of the document object.
            </summary>
            <value>The type of the document object.</value>
        </member>
        <member name="P:Spire.Doc.Section.ChildObjects">
            <summary>
            Gets the child objects.
            </summary>
            <value>The child objects.</value>
        </member>
        <member name="P:Spire.Doc.Section.Paragraphs">
            <summary>
            Gets the paragraphs.
            </summary>
            <value>The paragraphs.</value>
        </member>
        <member name="P:Spire.Doc.Section.Tables">
            <summary>
            Gets the tables.
            </summary>
            <value>The tables.</value>
        </member>
        <member name="P:Spire.Doc.Section.TextDirection">
            <summary>
            Gets or sets the text direction.
            </summary>
        </member>
        <member name="P:Spire.Doc.Section.ProtectForm">
            <summary>
            Gets or sets a value indicating whether [protect form].
            </summary>
        </member>
        <member name="M:Spire.Doc.Section.AddColumn(System.Single,System.Single)">
            <summary>
            Adds new column to the section.
            </summary>
            <param name="width">The width.</param>
            <param name="spacing">The spacing.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Section.MakeColumnsSameWidth">
            <summary>
            Makes all columns in current section to be of equal width.
            </summary>
        </member>
        <member name="M:Spire.Doc.Section.CloneSectionPropertiesTo(Spire.Doc.Section)">
            <summary>
            Clones the properties of the current to the destination section.
            </summary>
            <param name="destSection">The destination section.</param>
        </member>
        <member name="M:Spire.Doc.Section.AddParagraph">
            <summary>
            Adds the paragraph.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Section.AddTable">
            <summary>
            Adds the table.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Section.AddTable(System.Boolean)">
            <summary>
            Adds the table.
            </summary>
            <param name="showBorder">Display table borders.True to display;False does not display. </param>
            <returns></returns>
        </member>
        <member name="P:Spire.Doc.Table.DefaultRowHeight">
            <summary>
            Gets or sets the default row height, the unit of measure is point, 1point = 0.3528 mm
            </summary>
        </member>
        <member name="P:Spire.Doc.Table.DefaultColumnsNumber">
            <summary>
            Gets or sets the default column count of per row.      
            </summary>
        </member>
        <member name="P:Spire.Doc.Table.DefaultColumnWidth">
            <summary>
            Gets or sets the default width of each column.
            </summary>
        </member>
        <member name="P:Spire.Doc.Table.TableGridList">
            <summary>
            Gets the table grid defined in the document.
            </summary>
        </member>
        <member name="P:Spire.Doc.Table.ColumnWidth">
            <summary>
            Gets or sets the width of each column. 
            </summary>
        </member>
        <member name="P:Spire.Doc.Table.DocumentObjectType">
            <summary>
            Gets the type of the document object.
            </summary>
        </member>
        <member name="P:Spire.Doc.Table.Rows">
            <summary>
            Get the table rows
            </summary>
            <value></value>
        </member>
        <member name="P:Spire.Doc.Table.TableFormat">
            <summary>
            Gets the table formatting after ResetCells call.
            </summary>
            <value>The table format.</value>
        </member>
        <member name="P:Spire.Doc.Table.PreferredWidth">
            <summary>
            This property specifies the preferred horizontal width of a table.
            </summary>
        </member>
        <member name="P:Spire.Doc.Table.TableStyleName">
            <summary>
            Gets table style name.
            </summary>
            <value></value>
        </member>
        <member name="P:Spire.Doc.Table.LastCell">
            <summary>
            Get last cell of the table
            </summary>
            <value></value>
        </member>
        <member name="P:Spire.Doc.Table.LastParagraph">
            <summary>
            gets the last paragraph in the table. 
            If the table has nested table,get the last paragraph of the nested table.
            </summary>
        </member>
        <member name="P:Spire.Doc.Table.FirstRow">
            <summary>
            Get first row of the table.
            </summary>
            <value></value>
        </member>
        <member name="P:Spire.Doc.Table.LastRow">
            <summary>
            Get last row of the table.
            </summary>
            <value></value>
        </member>
        <member name="P:Spire.Doc.Table.Item(System.Int32,System.Int32)">
            <summary>
            Get table cell by row and column indexes.
            </summary>
            <value></value>
        </member>
        <member name="P:Spire.Doc.Table.Width">
            <summary>
            Gets the table width
            </summary>
            <value></value>
        </member>
        <member name="P:Spire.Doc.Table.ChildObjects">
            <summary>
            Gets the child entities.
            </summary>
            <value>The child entities.</value>
        </member>
        <member name="P:Spire.Doc.Table.IndentFromLeft">
            <summary>
            Gets or sets indent from left for the table.
            </summary>
        </member>
        <member name="P:Spire.Doc.Table.Title">
            <summary>
            Gets or sets the table title.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:Spire.Doc.Table.TableDescription">
            <summary>
            Gets or sets the table description.
            </summary>
        </member>
        <member name="P:Spire.Doc.Table.IsInSameFrameWithNextSibling">
            <summary>
            gets whether the table is in same frame with the next sibling.
            </summary>
        </member>
        <member name="M:Spire.Doc.Table.AddCaption(System.String,Spire.Doc.CaptionNumberingFormat,Spire.Doc.CaptionPosition)">
            <summary>
            Add Caption for current Table
            </summary>
            <param name="captionPosition"></param>
            <param name="name"></param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Table.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Table.ResetCells(System.Int32,System.Int32)">
            <summary>
            Resets rows / columns numbers.
            </summary>
            <param name="rowsNum">The rows number.</param>
            <param name="columnsNum">The columns number.</param>
        </member>
        <member name="M:Spire.Doc.Table.ResetCells(System.Int32,System.Int32,Spire.Doc.Formatting.RowFormat,System.Single)">
            <summary>
            Resets rows / columns numbers.
            </summary>
            <param name="rowsNum">The rows num.</param>
            <param name="columnsNum">The columns num.</param>
            <param name="format"></param>
            <param name="cellWidth">Width of the cell.</param>
        </member>
        <member name="M:Spire.Doc.Table.ApplyStyle(Spire.Doc.Documents.DefaultTableStyle)">
            <summary>
            Applies the built-in table style.
            </summary>
            <param name="builtinStyle">The built-in table style.</param>
        </member>
        <member name="M:Spire.Doc.Table.ApplyTableStyle">
            <summary>
            Applies the table style properties to table and cell.
            </summary>
        </member>
        <member name="M:Spire.Doc.Table.AddRow">
            <summary>
            Adds a row to table
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Table.AddRow(System.Int32)">
            <summary>
            Adds a row to table with copy format from the current last row, and then add columnsNum cells to the new row.
            </summary>
            <param name="columnsNum">The number of the count of the new row, it's must be -1 &lt; columnsNum &lt; 64.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Table.AddRow(System.Boolean)">
            <summary>
            Adds new row to table.
            </summary>
            <param name="isCopyFormat"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Table.AddRow(System.Boolean,System.Boolean)">
            <summary>
            Adds a row to table with copy format option
            </summary>
            <param name="isCopyFormat">Indicates whether copy format from previous row or not</param>
            <param name="autoPopulateCells">if specifies to populate cells automatically, set to <c>true</c>.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Table.AddRow(System.Boolean,System.Int32)">
            <summary>
            Adds a row to table with copy format option
            </summary>
            <param name="isCopyFormat">Indicates whether copy format from previous row or not</param>
            <param name="columnsNum">The number of the count of the new row, it's must be -1 &lt; columnsNum &lt; 64.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Table.AddRow(System.Boolean,System.Boolean,System.Nullable{System.Int32})">
            <summary>
            Adds a row to table with copy format option
            </summary>
            <param name="isCopyFormat">Indicates whether copy format from previous row or not</param>
            <param name="autoPopulateCells">if specifies to populate cells automatically,set to <c>true</c>.</param>
            <param name="columnsNum">The number of the count of the new row,
            -1 indicates it equals the number of the count of the current last row.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Table.Replace(System.Text.RegularExpressions.Regex,System.String)">
            <summary>
            Replaces all entries of matchString regular expression with newValue string.
            </summary>
            <param name="pattern">Pattern</param>
            <param name="newValue">Replace text</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Table.Replace(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Replaces by specified matchString string.
            </summary>
            <param name="matchString">The matchString text.</param>
            <param name="newValue">The newValue text.</param>
            <param name="caseSensitive">if it specifies case sensitive, set to <c>true</c>.</param>
            <param name="wholeWord">if it specifies to search a whole word, set to <c>true</c>.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Table.Replace(System.Text.RegularExpressions.Regex,Spire.Doc.Documents.TextSelection)">
            <summary>
            Replaces by specified pattern.
            </summary>
            <param name="pattern">The pattern.</param>
            <param name="textSelection">The text selection.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Table.Replace(System.Text.RegularExpressions.Regex,Spire.Doc.Documents.TextSelection,System.Boolean)">
            <summary>
            Replaces by specified pattern.
            </summary>
            <param name="pattern">The pattern.</param>
            <param name="textSelection">The text selection.</param>
            <param name="saveFormatting">if it specifies save source formatting, set to <c>true</c>.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Table.Find(System.Text.RegularExpressions.Regex)">
            <summary>
            Finds text by specified pattern.
            </summary>
            <param name="pattern">The pattern.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Table.ApplyVerticalMerge(System.Int32,System.Int32,System.Int32)">
            <summary>
            Applies the vertical merge for table cells.
            </summary>
            <param name="columnIndex">Index of the column.</param>
            <param name="startRowIndex">Start index of the row.</param>
            <param name="endRowIndex">End index of the row.</param>
        </member>
        <member name="M:Spire.Doc.Table.ApplyHorizontalMerge(System.Int32,System.Int32,System.Int32)">
            <summary>
            Applies horizontal merging for cells of table row.
            </summary>
            <param name="rowIndex">Index of the row.</param>
            <param name="startCellIndex">Start index of the cell.</param>
            <param name="endCellIndex">End index of the cell.</param>
        </member>
        <member name="M:Spire.Doc.Table.RemoveAbsPosition">
            <summary>
            Removes the absolute position data. If table has absolute position in the document,
            all position data will be erased.  
            </summary>
        </member>
        <member name="M:Spire.Doc.Table.SetColumnWidth(System.Int32,System.Single,Spire.Doc.CellWidthType)">
            <summary>
            Sets the width of all cells in the current column of the table.
            </summary>
            <param name="columnIndex">Index of the column.</param>
            <param name="columnWidth">The column width.</param>
            <param name="columnWidthType">The column width type.</param>
        </member>
        <member name="M:Spire.Doc.Table.AutoFit(Spire.Doc.AutoFitBehaviorType)">
            <summary>
            Determines how Microsoft Word resizes a table when the AutoFit feature is used.
            </summary>
            <param name="behavior">How Word resizes the specified table with the AutoFit feature is used.</param>
        </member>
        <member name="T:Spire.Doc.WidthType">
            <summary>
            The TableWidthType enum specifies how the preferred width for a table,
            table indent, table cell, cell margin, or cell spacing is defined.
            </summary>
        </member>
        <member name="F:Spire.Doc.WidthType.None">
            <summary>
            No Preffered Width
            </summary>
        </member>
        <member name="F:Spire.Doc.WidthType.Auto">
            <summary>
            No preferred width is specified.
            The width is derived from other table measurements where a preferred size is specified, 
            as well as from the size of the table contents, and the constraining size of the
            container of the table.
            </summary>
        </member>
        <member name="F:Spire.Doc.WidthType.Percentage">
            <summary>
            When specifying the preferred width of a portion of a table,
            such as a cell, spacing or indent, the percentage is relative
            to the width of the entire table.
            When specifying the preferred width of an entire table, 
            the percentage is relative to the width of the page, 
            less any margin or gutter space. Alternatively, 
            if the table is nested inside another table, 
            the percentage is relative to the width of the cell 
            in the containing table, less cell margins.
            </summary>
        </member>
        <member name="F:Spire.Doc.WidthType.Twip">
            <summary>
            The preferred width of the table, indent, cell, 
            cell margin, or cell spacing is an absolute width measured in twips.
            </summary>
        </member>
        <member name="T:Spire.Doc.PreferredWidth">
            <summary>
            An PreferredWidth class that specifies the preferred total width of the table
            of which this row is a part.
            </summary>
        </member>
        <member name="M:Spire.Doc.PreferredWidth.#ctor(Spire.Doc.WidthType,System.Int16)">
            <summary>
            Create a new PreferredWidth object
            </summary>
            <param name="type">A enum element from WidthType that specifies the units of measurement for the Value.
                if type is Auto or None, the value must be 0,
                if type is Percentage, the value must be non-negative and less than or equal to 600,
                if type is Twip, the value must be non-negative and and less than or equal to 31,680 (22 inches).
            </param>
            <param name="value">An short value that specifies the preferred width</param>
        </member>
        <member name="P:Spire.Doc.PreferredWidth.Value">
            <summary>
            An double value that specifies the preferred width
            </summary>
        </member>
        <member name="P:Spire.Doc.PreferredWidth.Type">
            <summary>
            A enum element from WidthType that specifies the units of measurement for the Value.
            </summary>
        </member>
        <member name="P:Spire.Doc.PreferredWidth.Auto">
            <summary>
            Get an instance of PreferredWidth, this instance indicates
            thie preferred width is auto.
            </summary>
        </member>
        <member name="P:Spire.Doc.PreferredWidth.None">
            <summary>
            Get an instance of PreferredWidth, this instance indicates
            thie preferred width is not specified.
            </summary>
        </member>
        <member name="M:Spire.Doc.PreferredWidthInfo.#ctor(Spire.Doc.Formatting.FormatBase,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.PreferredWidthInfo"/> class.
            </summary>
            <param name="parent">The parent.</param>
            <param name="parentKey">The parent key.</param>
        </member>
        <member name="P:Spire.Doc.TableCell.OwnerRow">
            <summary>
            Gets owner row of the cell.
            </summary>
        </member>
        <member name="P:Spire.Doc.TableCell.CellFormat">
            <summary>
            Gets cell format.
            </summary>
        </member>
        <member name="P:Spire.Doc.TableCell.Width">
            <summary>
            Gets the width of the cell.
            </summary>
        </member>
        <member name="P:Spire.Doc.TableCell.LayoutWidth">
            <summary>
            Get or set the cell width of layout. 
            </summary>
        </member>
        <member name="P:Spire.Doc.TableCell.CellWidthType">
            <summary>
            Gets the width type of the cell.
            </summary>
        </member>
        <member name="P:Spire.Doc.TableCell.Scaling">
            <summary>
            Gets or sets the cell scaling.
            </summary>
            <value>The scaling.</value>
        </member>
        <member name="M:Spire.Doc.TableCell.SetCellWidth(System.Single,Spire.Doc.CellWidthType)">
            <summary>
            Set the width and type of the cell.
            </summary>
            <param name="width">Width of the cell.</param>
            <param name="widthType">Width type of the cell.</param>
        </member>
        <member name="M:Spire.Doc.TableCell.GetCellWidth">
            <summary>
            Gets the width of the cell.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.TableCell.GetCellWidthType">
            <summary>
            Gets the width type of the cell.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.TableCell.SplitCell(System.Int32,System.Int32)">
            <summary>
            The one cell splits into two or more cells.
            </summary>
            <param name="columnNum">The split column number. Must be greater than or equal to 1 is only valid. </param>
            <param name="rowNum">The split row number. Must be greater than or equal to 1 is only valid. </param>
        </member>
        <member name="M:Spire.Doc.TableCell.CalculatedResult">
            <summary>
            gets the text of the cell which the field items have been updated.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.TableCell.GetLastItem">
            <summary>
            Gets the last item without structure documnet tag.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Spire.Doc.TableRow.ChildObjects">
            <summary>
            Gets the child object.
            </summary>
            <value>The child object.</value>
        </member>
        <member name="P:Spire.Doc.TableRow.DocumentObjectType">
            <summary>
            Gets the type of the document object.
            </summary>
            <value>The type of the document object.</value>
        </member>
        <member name="P:Spire.Doc.TableRow.Cells">
            <summary>
            Returns or sets cell collection.
            </summary>
        </member>
        <member name="P:Spire.Doc.TableRow.HeightType">
            <summary>
            Get / set table row height type
            </summary>
        </member>
        <member name="P:Spire.Doc.TableRow.RowFormat">
            <summary>
            Gets table format
            </summary>
        </member>
        <member name="P:Spire.Doc.TableRow.Height">
            <summary>
            Returns or setsheight of the row.
            </summary>
        </member>
        <member name="P:Spire.Doc.TableRow.IsHeader">
            <summary>
            Returns or sets whether the row is a table header.
            </summary>
        </member>
        <member name="P:Spire.Doc.TableRow.Hidden">
            <summary>
            Returns or sets whether the glyph representing the end character of current table row
            shall be displayed in the current document.
            </summary>
        </member>
        <member name="P:Spire.Doc.TableRow.FirstCell">
            <summary>
            Gets first cell of the row.
            </summary>
        </member>
        <member name="P:Spire.Doc.TableRow.LastCell">
            <summary>
            Gets last cell of the row.
            </summary>
        </member>
        <member name="M:Spire.Doc.TableRow.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.TableRow.AddCell">
            <summary>
            Adds the cell.
            </summary>
        </member>
        <member name="M:Spire.Doc.TableRow.AddCell(System.Boolean)">
            <summary>
            Adds the cell.
            </summary>
            <param name="isCopyFormat">Specifies whether to apply the parent row format.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.TableRow.AddCell(System.Int32,System.Boolean)">
            <summary>
            Adds the cell.
            </summary>
            <param name="index">the index.</param>
            <param name="isCopyFormat">Specifies whether to apply the parent row format.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.TableRow.GetRowIndex">
            <summary>
            Returns index of the row in owner table.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Spire.Doc.Body.DocumentObjectType">
            <summary>
            Gets the type of the document object.
            </summary>
            <value>The type of the document object.</value>
        </member>
        <member name="P:Spire.Doc.Body.Paragraphs">
            <summary>
            Gets inner paragraphs
            </summary>
        </member>
        <member name="P:Spire.Doc.Body.Tables">
            <summary>
            Gets inner tables
            </summary>
        </member>
        <member name="P:Spire.Doc.Body.FormFields">
            <summary>
            Gets the form fields.
            </summary>
            <value>The form fields.</value>
        </member>
        <member name="P:Spire.Doc.Body.LastParagraph">
            <summary>
            Gets the last paragraph.
            </summary>
            <value>The last paragraph.</value>
        </member>
        <member name="P:Spire.Doc.Body.FirstParagraph">
            <summary>
            Gets the First paragraph.
            </summary>
            <value>The last paragraph.</value>
        </member>
        <member name="M:Spire.Doc.Body.AddParagraph">
            <summary>
            Adds paragraph at end of section.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Body.AddTable">
            <summary>
            Adds the table.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Body.AddTable(System.Boolean)">
            <summary>
            Adds the table.
            </summary>
            <param name="showBorder">Is Show Border</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Body.InsertXHTML(System.String)">
            <summary>
            Inserts html at end of text body.
            </summary>
        </member>
        <member name="M:Spire.Doc.Body.InsertXHTML(System.String,System.Int32)">
            <summary>
            Inserts html. Inserting begins from paragraph specified by paragraphIndex
            </summary>
        </member>
        <member name="M:Spire.Doc.Body.InsertXHTML(System.String,System.Int32,System.Int32)">
            <summary>
            Inserts html. Inserting begins from paragraph specified by paragraphIndex, 
            and paragraph item specified by paragraphItemIndex
            </summary>
        </member>
        <member name="M:Spire.Doc.Body.IsValidXHTML(System.String,Spire.Doc.Documents.XHTMLValidationType)">
            <summary>
            Validates the XHTML.
            </summary>
            <param name="html">The HTML.</param>
            <param name="type">The validation type.</param>
            <returns>
            	if it is valid XHTML, set to <c>true</c>.
            </returns>
        </member>
        <member name="M:Spire.Doc.Body.IsValidXHTML(System.String,Spire.Doc.Documents.XHTMLValidationType,System.String@)">
            <summary>
            Validates the XHTML.
            </summary>
            <param name="html">The HTML.</param>
            <param name="type">The validation type.</param>
            <param name="exceptionMessage">The exception message.</param>
            <returns>
            	if it is valid XHTML, set to <c>true</c>.
            </returns>
        </member>
        <member name="M:Spire.Doc.Body.EnsureMinimum">
            <summary>
            If the text body has no paragraphs, creates and appends one Paragraph.
            </summary>
        </member>
        <member name="F:Spire.Doc.Core.Biff_Records.WordSprmOptionType.sprmPDxaLeft">
            sprmPDxaRight2	      = 0x845E,
        </member>
        <member name="F:Spire.Doc.Core.Biff_Records.WordSprmOptionType.sprmPTimeStamp">
            Newly added sprms
        </member>
        <member name="F:Spire.Doc.Core.Biff_Records.WordSprmOptionType.sprmPDxaLeft1Bi">
            Debug sprms
        </member>
        <member name="F:Spire.Doc.Core.Biff_Records.WordSprmOptionType.sprmPJcBi">
            IsBidi support
        </member>
        <member name="F:Spire.Doc.Core.Biff_Records.WordSprmOptions.sprmPDxaLeft">
            sprmPDxaRight2	      = 0x845E,
        </member>
        <member name="M:Spire.Doc.Core.Security.EncryptionVerifier.Parse(System.IO.Stream,System.Boolean)">
            <summary>
            
            </summary>
            <param name="stream"></param>
            <param name="bIs40bit"></param>
        </member>
        <member name="F:Spire.Doc.Core.Security.WordDecryptor.m_tableStream">
            <summary>
            
            </summary>
        </member>
        <member name="M:Spire.Doc.Core.Security.WordDecryptor.TestEncrypt(System.IO.MemoryStream@,System.String,System.Byte[]@,System.Byte[]@,System.Byte[]@)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Core.Security.WordDecryptor"/> class.
            </summary>
            <param name="tableStream">The table stream.</param>
            <param name="mainStream">The main stream.</param>
            <param name="fib">The fib.</param>
        </member>
        <member name="P:Spire.Doc.BookmarkEnd.DocumentObjectType">
            <summary>
            Gets the type of the document object.
            </summary>
            <value>The type of the document object.</value>
        </member>
        <member name="P:Spire.Doc.BookmarkEnd.Name">
            <summary>
            Gets the bookmark name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="M:Spire.Doc.BookmarkEnd.#ctor(Spire.Doc.Interface.IDocument,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.BookmarkEnd"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="name">The name.</param>
        </member>
        <member name="P:Spire.Doc.BookmarkStart.DocumentObjectType">
            <summary>
            Gets the type of the document object.
            </summary>
            <value>The type of the document object.</value>
        </member>
        <member name="P:Spire.Doc.BookmarkStart.Name">
            <summary>
            Gets the bookmark name.
            </summary>
        </member>
        <member name="M:Spire.Doc.BookmarkStart.#ctor(Spire.Doc.Interface.IDocument,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.BookmarkStart"/> class.
            </summary>
            <param name="doc">The doc.</param>
            <param name="name">The name.</param>
        </member>
        <member name="M:Spire.Doc.BookmarkStart.UpdateBookmarkHyperlinks(Spire.Doc.Documents.Rendering.DrawingContext,Spire.Doc.OldLayout.LayoutedWidget,Spire.Doc.Documents.Rendering.BookmarkLevel)">
            <summary>
            Updates bookmark hyperlinks.
            </summary>
            <param name="dc"></param>
            <param name="ltWidget"></param>
            <param name="bookmarkLevel"></param>
        </member>
        <member name="P:Spire.Doc.Break.DocumentObjectType">
            <summary>
            Gets the type of the document object.
            </summary>
            <value>The type of the document object.</value>
        </member>
        <member name="P:Spire.Doc.Break.CharacterFormat">
            <summary>
            Gets the character format.
            </summary>
        </member>
        <member name="P:Spire.Doc.Break.BreakType">
            <summary>
            Gets the type of the break.
            </summary>
            <value>The type of the break.</value>
        </member>
        <member name="M:Spire.Doc.Break.#ctor(Spire.Doc.Interface.IDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Break"/> class.
            </summary>
            <param name="doc">The doc.</param>
        </member>
        <member name="M:Spire.Doc.Break.#ctor(Spire.Doc.Interface.IDocument,Spire.Doc.Documents.BreakType)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Break"/> class.
            </summary>
            <param name="doc">Document</param>
            <param name="breakType">Break type</param>
        </member>
        <member name="P:Spire.Doc.PermissionEnd.DocumentObjectType">
            <summary>
            Gets the type of the document object.
            </summary>
            <value>The type of the document object.</value>
        </member>
        <member name="P:Spire.Doc.PermissionEnd.Id">
            <summary>
            Gets the permission id.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Spire.Doc.PermissionEnd.EditorGroup">
            <summary>
            Gets permission editorgroup.
            </summary>
        </member>
        <member name="P:Spire.Doc.PermissionEnd.DisplacedByCustomXml">
            <summary>
            Gets permission displacedByCustomXml.
            </summary>
        </member>
        <member name="M:Spire.Doc.PermissionEnd.#ctor(Spire.Doc.Interface.IDocument,System.String)">
            <summary>
            Initializes a new instance of the <see cref="!:PermEnd"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="name">The name.</param>
        </member>
        <member name="P:Spire.Doc.PermissionStart.DocumentObjectType">
            <summary>
            Gets the type of the document object.
            </summary>
            <value>The type of the document object.</value>
        </member>
        <member name="P:Spire.Doc.PermissionStart.Id">
            <summary>
            Gets the permissionstart id.
            </summary>
        </member>
        <member name="P:Spire.Doc.PermissionStart.EditorGroup">
            <summary>
            Gets permission editorgroup.
            </summary>
        </member>
        <member name="P:Spire.Doc.PermissionStart.DisplacedByCustomXml">
            <summary>
            Gets permission displacedByCustomXml.
            </summary>
        </member>
        <member name="M:Spire.Doc.PermissionStart.#ctor(Spire.Doc.Interface.IDocument,System.String)">
            <summary>
            Initializes a new instance of the <see cref="!:PermStart"/> class.
            </summary>
            <param name="doc">The doc.</param>
            <param name="name">The name.</param>
        </member>
        <member name="P:Spire.Doc.Reporting.MergeGroupEventArgs.Document">
            <summary>
            Gets the document.
            </summary>
        </member>
        <member name="P:Spire.Doc.Reporting.MergeGroupEventArgs.TableName">
            <summary>
            Gets the Table Name
            </summary>
        </member>
        <member name="P:Spire.Doc.Reporting.MergeGroupEventArgs.GroupName">
            <summary>
            Gets the group name.
            </summary>
        </member>
        <member name="P:Spire.Doc.Reporting.MergeGroupEventArgs.MergeField">
            <summary>
            Gets the merge field.
            </summary>
        </member>
        <member name="P:Spire.Doc.Reporting.MergeGroupEventArgs.RowIndex">
            <summary>
            Gets the index of the row.
            </summary>
        </member>
        <member name="P:Spire.Doc.Reporting.MergeGroupEventArgs.RowCount">
            <summary>
            Gets the count of the row.
            </summary>
        </member>
        <member name="M:Spire.Doc.Reporting.MergeGroupEventArgs.#ctor(Spire.Doc.Interface.IDocument,Spire.Doc.Reporting.IRowsEnumerator,Spire.Doc.Reporting.GroupEventType)">
            <summary>
            Represents data during the MergeGroup event.
            </summary>
            <param name="doc">Document Ojbect</param>
            <param name="tableName">Table Name</param>
            <param name="rowIndex">Row Index</param>
            <param name="eventType">Event Type</param>
        </member>
        <member name="M:Spire.Doc.Reporting.MergeGroupEventArgs.#ctor(Spire.Doc.Interface.IDocument,Spire.Doc.Reporting.IRowsEnumerator,Spire.Doc.Reporting.GroupEventType,Spire.Doc.Interface.IMergeField)">
            <summary>
            Represents data during the MergeGroup event.
            </summary>
            <param name="doc">Document Ojbect</param>
            <param name="tableName">Table Name</param>
            <param name="rowIndex">Row Index</param>
            <param name="eventType">Event Type</param>
            <param name="currMergerField">The merger field</param>
        </member>
        <member name="T:Spire.Doc.Reporting.MergeGroupEventHandler">
            <summary>
            Represents the Method that handles Merage group event.
            </summary>
            <param name="doc">Document object</param>
            <param name="Name">Group or table name</param>
            <param name="rowIndex">Represents the Row Index.</param>
            <param name="IsTable">Indicates is table, otherwise is group</param>
        </member>
        <member name="P:Spire.Doc.Reporting.MailMerge.ClearFields">
            <summary>
            Gets or sets a value indicating whether [clear fields]. by default value is true.
            </summary>
            <value><c>true</c> if it clears the fields, set to <c>true</c>.</value>
        </member>
        <member name="P:Spire.Doc.Reporting.MailMerge.ClearGroupTag">
            <summary>
            Gets or sets a value indicating whether [clear group tag]. by default value is false.
            </summary>
        </member>
        <member name="P:Spire.Doc.Reporting.MailMerge.HideEmptyParagraphs">
            <summary>
            Gets or sets a value indicating whether to remove paragraphs which contain empty merge fields
            </summary>
        </member>
        <member name="P:Spire.Doc.Reporting.MailMerge.HideEmptyGroup">
            <summary>
            Gets or sets a value indicating whether to remove groups which contain empty merge fields
            </summary>
        </member>
        <member name="E:Spire.Doc.Reporting.MailMerge.MergeField">
            <summary>
            Occurs during mail merge when a text merge field processing.
            </summary>
        </member>
        <member name="E:Spire.Doc.Reporting.MailMerge.MergeImageField">
            <summary>
            Occurs during mail merge when an image merge field processing.
            </summary>
        </member>
        <member name="E:Spire.Doc.Reporting.MailMerge.MergeGroup">
            <summary>
            Occurs during mail merge when group/table processing.
            </summary>
        </member>
        <member name="M:Spire.Doc.Reporting.MailMerge.Execute(System.Data.DataRow)">
            <summary>
            Performs mail merge from a DataRow into the document
            </summary>
            <param name="row"></param>
        </member>
        <member name="M:Spire.Doc.Reporting.MailMerge.Execute(System.Collections.IEnumerable)">
            <summary>
            Performs mail merge operation.
            </summary>
            <param name="dataSource">IEnumerable data source</param>
        </member>
        <member name="M:Spire.Doc.Reporting.MailMerge.Execute(System.Data.DataTable)">
            <summary>
            Performs mail merge from a DataTable
            </summary>
            <param name="table"></param>
        </member>
        <member name="M:Spire.Doc.Reporting.MailMerge.Execute(System.Data.DataView)">
            <summary>
             Performs mail merge from a DataView
            </summary>
            <param name="dataView"></param>
        </member>
        <member name="M:Spire.Doc.Reporting.MailMerge.Execute(System.Data.OleDb.OleDbDataReader)">
            <summary>
            Performs mail merge from
            </summary>
            <param name="dataReader"></param>
        </member>
        <member name="M:Spire.Doc.Reporting.MailMerge.Execute(System.Data.IDataReader)">
            <summary>
            Performs mail merge from a DataView
            </summary>
            <param name="dataReader"></param>
        </member>
        <member name="M:Spire.Doc.Reporting.MailMerge.ExecuteWidthRegion(System.Data.DataTable)">
            <summary>
            Performs Mail Merge within a region from a DataTable.
            </summary>
            <param name="table"></param>
        </member>
        <member name="M:Spire.Doc.Reporting.MailMerge.ExecuteWidthRegion(System.Data.DataView)">
            <summary>
            Performs Mail Merge within a region from a DataView.
            </summary>
            <param name="dataView"></param>
        </member>
        <member name="M:Spire.Doc.Reporting.MailMerge.ExecuteWidthRegion(System.Data.IDataReader)">
            <summary>
            Performs Mail Merge within a region from a DataReader.
            </summary>
            <param name="dataReader"></param>
        </member>
        <member name="M:Spire.Doc.Reporting.MailMerge.ExecuteWidthNestedRegion(Spire.Doc.Reporting.MailMergeDataSet,System.Collections.Generic.List{System.Collections.DictionaryEntry})">
            <summary>
            Performs mail merge operation.
            </summary>
            <param name="dataSource">MailMergeDataSet</param>
            <param name="commands">Commands list</param>
        </member>
        <member name="M:Spire.Doc.Reporting.MailMerge.ExecuteWidthNestedRegion(System.Data.Common.DbConnection,System.Collections.Generic.List{System.Collections.DictionaryEntry})">
            <summary>
            Executes nested mailmerge within a region for the specified data.
            </summary>
            <param name="conn">The Connection.</param>
            <param name="commands">The commands.</param>
        </member>
        <member name="M:Spire.Doc.Reporting.MailMerge.ExecuteWidthNestedRegion(System.Data.Common.DbConnection,System.Collections.Generic.List{System.Collections.DictionaryEntry},System.Boolean)">
            <summary>
            Executes the nested region.
            </summary>
            <param name="conn">The connection.</param>
            <param name="commands">The commands.</param>
            <param name="isSqlConnection">Is sql connection</param>
        </member>
        <member name="M:Spire.Doc.Reporting.MailMerge.ExecuteWidthNestedRegion(System.Data.DataSet,System.Collections.Generic.List{System.Collections.DictionaryEntry})">
            <summary>
            Executes the nested region.
            </summary>
            <param name="dataSet">The data set.</param>
            <param name="commands">The commands.</param>
        </member>
        <member name="M:Spire.Doc.Reporting.MailMerge.GetMergeFieldNames">
            <summary>
            Returns a collection of mergefield names found in the document.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Reporting.MailMerge.GetMergeFieldNames(System.String)">
            <summary>
            Gets the merge field names.
            </summary>
            <param name="groupName">Name of the region.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Reporting.MailMerge.GetMergeGroupNames">
            <summary>
            Gets the merge field names.
            </summary>
            <param name="groupName">Name of the region.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.Reporting.MailMerge.InFieldCode(Spire.Doc.Fields.Field,Spire.Doc.Fields.MergeField)">
            <summary>
            
            </summary>
            <param name="ifField"></param>
            <param name="mergeField"></param>
            <returns></returns>
        </member>
        <member name="P:Spire.Doc.Reporting.MailMerge.GroupSelector.BookmarksAndFieldRef">
            <summary>
            Gets the bookmarks and field ref.
            </summary>
        </member>
        <member name="T:Spire.Doc.Reporting.MergeFieldEventHandler">
            <summary>
            Represents the mail merge functionality. 
            </summary>
            <summary>
            Represents the MergeField event
            </summary>
        </member>
        <member name="T:Spire.Doc.Reporting.MergeImageFieldEventHandler">
            <summary>
            Represents the Method that handles MergeImageField event
            </summary>
        </member>
        <member name="T:Spire.Doc.Reporting.MergeFieldEventArgs">
            <summary>
            Represents data during MergeField event.
            </summary>
        </member>
        <member name="P:Spire.Doc.Reporting.MergeFieldEventArgs.IsKeepHtmlTextFormat">
            <summary>
            Gets or sets if keep html text formatting.
            </summary>
        </member>
        <member name="T:Spire.Doc.Reporting.MergeImageFieldEventArgs">
            <summary>
            Represents data during MergeImageField event.
            </summary>
        </member>
        <member name="P:Spire.Doc.Reporting.MergeImageFieldEventArgs.PictureSize">
            <summary>
            Gets or sets the size of the picture.
            </summary>
            <value>The size of the picture.</value>
        </member>
        <member name="M:Spire.Doc.Reporting.MergeImageFieldEventArgs.#ctor(Spire.Doc.Interface.IDocument,System.String,System.Int32,Spire.Doc.Interface.IMergeField,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Reporting.MergeImageFieldEventArgs"/> class.
            </summary>
            <param name="doc">The document.</param>
            <param name="tableName">Name of the table.</param>
            <param name="rowIndex">Index of the row.</param>
            <param name="field">The field.</param>
            <param name="obj">The object.</param>
        </member>
        <member name="M:Spire.Doc.Reporting.MergeImageFieldEventArgs.#ctor(Spire.Doc.Interface.IDocument,System.String,System.Int32,Spire.Doc.Interface.IMergeField,System.Object,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Reporting.MergeImageFieldEventArgs"/> class.
            </summary>
            <param name="doc">The document.</param>
            <param name="tableName">Name of the table.</param>
            <param name="rowIndex">Index of the row.</param>
            <param name="field">The field.</param>
            <param name="obj">The object.</param>
            <param name="imageName">Name of the image.</param>
        </member>
        <member name="M:Spire.Doc.Reporting.MergeImageFieldEventArgs.SetImage(System.String)">
            <summary>
            Sets the image.
            </summary>
            <param name="imgFile">The image file.</param>
        </member>
        <member name="M:Spire.Doc.Reporting.MergeImageFieldEventArgs.SetImage(System.IO.Stream)">
            <summary>
            Sets the image.
            </summary>
            <param name="imgStream">The image stream.</param>
        </member>
        <member name="M:Spire.Doc.UnicodeRunFont.UnicodeRange.CompareTo(System.Object)">
            <summary>
            compare to.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="F:Spire.Doc.Utilities.Text.Separator.None">
            <summary>
            Is not a separator
            </summary>
        </member>
        <member name="F:Spire.Doc.Utilities.Text.Separator.Separator">
            <summary>
            Is a separator, but can not be the first char of a new line
            </summary>
        </member>
        <member name="F:Spire.Doc.Utilities.Text.Separator.LineBreakSeparator">
            <summary>
            Is a separator which can be the first char of a new line
            </summary>
        </member>
        <member name="F:Spire.Doc.Utilities.Text.Separator.InitialQuotePunctuation">
            <summary>
            Indicates that the character is an opening or initial quotation mark.
            </summary>
        </member>
        <member name="F:Spire.Doc.Utilities.Text.Separator.G7FFLetter">
            <summary>
            Letter, whoes code > 0x7ff
            </summary>
        </member>
        <member name="M:Spire.Doc.OldLayout.IStringWidgetText.GetVisualText">
            <summary>
            Gets visual text string.
            </summary>
        </member>
        <member name="M:Spire.Doc.OldLayout.Layouter.IsCurrentWidgetNeedToLayout(Spire.Doc.OldLayout.LayoutContext,System.Int32,System.Boolean@,System.Boolean@,System.Boolean)">
            <param name="isSplittedWidget"></param>
        </member>
        <member name="P:Spire.Doc.OldLayout.ILayoutInfo.IsBidi">
            <summary>
            Gets or set a value indicating whether this instance is bidi(RTL).
            </summary>
        </member>
        <member name="P:Spire.Doc.OldLayout.LayoutInfo.IsBidi">
            <summary>
            Gets or set a value indicating whether this instance is bidi(RTL).
            </summary>
        </member>
        <member name="P:Spire.Doc.OldLayout.ParagraphLayoutInfo.ListTextRange">
            <summary>
            Gets or sets the text range of the list value. 
            </summary>
        </member>
        <member name="P:Spire.Doc.OldLayout.ParagraphLayoutInfo.IsItemsOutOfArea">
            <summary>
            Gets and sets whether the items which are after a tab is out of the area.
            if the right position of the tab is out of area,the items after the tab are also out of erea
            and cannot restart on the next line.
            </summary>
        </member>
        <member name="P:Spire.Doc.OldLayout.ParagraphLayoutInfo.LastTabPosition">
            <summary>
            gets and sets the position of the last tab whose TabJustification is not left of the paragraph.
            </summary>
        </member>
        <member name="P:Spire.Doc.OldLayout.TabsLayoutInfo.LayoutTabs">
            <summary>
            Get layout tabs list.
            </summary>
        </member>
        <member name="P:Spire.Doc.OldLayout.TabsLayoutInfo.Tabs">
            <summary>
            Get tabs list.
            </summary>
        </member>
        <member name="M:Spire.Doc.OldLayout.TabsLayoutInfo.UpdateTabList(Spire.Doc.Documents.Paragraph,System.Single,Spire.Doc.OldLayout.TabsLayoutInfo)">
            <summary>
            update the tabs list based on the pagemargin left
            </summary>
            <param name="paragraph"></param>
            <param name="pageMarginLeft"></param>
            <param name="tabsInfo"></param>
        </member>
        <member name="P:Spire.Doc.OldLayout.TabsLayoutInfo.LayoutTab.IsPTab">
            <summary>
            Gets or sets a value whether is PTab.
            </summary>
        </member>
        <member name="M:Spire.Doc.OldLayout.LCLineContainer.GetParagraph">
            <summary>
            Get paragraph.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Spire.Doc.OldLayout.FrameLayoutState">
            <summary>
            frame layout state.
            </summary>
        </member>
        <member name="M:Spire.Doc.OldLayout.StringParser.GetCharsCount(System.String,System.Char)">
            
        </member>
        <member name="M:Spire.Doc.OldLayout.StringParser.GetCharsCount(System.String,System.Char[])">
            
        </member>
        <member name="M:Spire.Doc.StreamReadException.#ctor(System.Exception)">
            
        </member>
        <member name="M:Spire.Doc.StreamReadException.#ctor(System.String)">
            
        </member>
        <member name="M:Spire.Doc.StreamReadException.#ctor(System.String,System.Exception)">
            
        </member>
        <member name="M:Spire.Doc.StreamReadException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            
        </member>
        <member name="M:Spire.Doc.StreamWriteException.#ctor(System.Exception)">
            
        </member>
        <member name="M:Spire.Doc.StreamWriteException.#ctor(System.String)">
            
        </member>
        <member name="M:Spire.Doc.StreamWriteException.#ctor(System.String,System.Exception)">
            
        </member>
        <member name="M:Spire.Doc.StreamWriteException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            
        </member>
        <member name="T:Spire.Doc.Pages.LayoutCollection`1">
            <summary>
            Represents a generic collection of layout entity types.
            </summary>
        </member>
        <member name="M:Spire.Doc.Pages.LayoutCollection`1.#ctor(System.Collections.Generic.List{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Pages.LayoutCollection`1"/> class.
            </summary>
            <param name="baseList">The base list.</param>
        </member>
        <member name="M:Spire.Doc.Pages.LayoutCollection`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Spire.Doc.Pages.LayoutCollection`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            An enumerator that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:Spire.Doc.Pages.LayoutCollection`1.First">
            <summary>
            Returns the first entity in the collection.
            </summary>        
        </member>
        <member name="P:Spire.Doc.Pages.LayoutCollection`1.Last">
            <summary>
            Returns the last entity in the collection.
            </summary>
        </member>
        <member name="P:Spire.Doc.Pages.LayoutCollection`1.Item(System.Int32)">
            <summary>
            Retrieves the entity at the given index. 
            </summary>
        </member>
        <member name="P:Spire.Doc.Pages.LayoutCollection`1.Count">
            <summary>
            Gets the number of entities in the collection.
            </summary>
        </member>
        <member name="T:Spire.Doc.Pages.LayoutElement">
            <summary>
            The class serves as the foundation for elements in a document that have been rendered.
            </summary>
        </member>
        <member name="P:Spire.Doc.Pages.LayoutElement.PageIndex">
            <summary>
            Gets the index of a page in which rendered object. starting from 1.
            </summary>
        </member>
        <member name="P:Spire.Doc.Pages.LayoutElement.Rectangle">
            <summary>
            Returns bounding rectangle of the entity relative to the page top left corner (in points).
            </summary>
        </member>
        <member name="P:Spire.Doc.Pages.LayoutElement.Type">
            <summary>
            Gets the type of this layout entity.
            </summary>
        </member>
        <member name="P:Spire.Doc.Pages.LayoutElement.Text">
            <summary>
            Outputs the entity's contents as a plain text string.
            </summary>
        </member>
        <member name="P:Spire.Doc.Pages.LayoutElement.Parent">
            <summary>
            Gets the parent of this entity.
            </summary>
        </member>
        <member name="P:Spire.Doc.Pages.LayoutElement.ParentNode">
            <summary>
            Provides the layout node that pertains to this particular entity.
            </summary>
        </member>
        <member name="M:Spire.Doc.Pages.LayoutElement.SetParentNode(Spire.Doc.DocumentObject)">
            <summary>
            Sets the parent node.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="P:Spire.Doc.Pages.LayoutElement.LayoutObject">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Spire.Doc.Pages.LayoutElement.AddChildEntity(Spire.Doc.Layout.LayoutEnumerator)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Spire.Doc.Pages.LayoutElement.GetChildEntities(Spire.Doc.Pages.LayoutElementType,System.Boolean)">
            <summary>
            Obtains a group of child entities that are of a specific type.
            </summary>
            <param name="type">Specifies the type of entities to select.</param>
            <param name="isDeep">True to select from all child entities recursively.
            False to select only among immediate children</param>
        </member>
        <member name="T:Spire.Doc.Pages.FixedLayoutCell">
            <summary>
            Describes the cell within a table.
            </summary>
        </member>
        <member name="P:Spire.Doc.Pages.FixedLayoutCell.Cell">
            <summary>
            Returns the cell that corresponds to the layout entity.  
            </summary>
        </member>
        <member name="P:Spire.Doc.Pages.FixedLayoutCell.ParentNode">
            <summary>
            Provides the layout node that pertains to this particular entity.
            </summary>
        </member>
        <member name="T:Spire.Doc.Pages.FixedLayoutColumn">
            <summary>
            Represents a column of text on a page.
            </summary>
        </member>
        <member name="P:Spire.Doc.Pages.FixedLayoutColumn.Footnotes">
            <summary>
            Provides access to the footnotes of the page.
            </summary>
        </member>
        <member name="P:Spire.Doc.Pages.FixedLayoutColumn.Endnotes">
            <summary>
            Provides access to the endnotes of the page.
            </summary>
        </member>
        <member name="P:Spire.Doc.Pages.FixedLayoutColumn.NoteSeparators">
            <summary>
            Provides access to the note separators of the page.
            </summary>
        </member>
        <member name="P:Spire.Doc.Pages.FixedLayoutColumn.Body">
            <summary>
            Returns the body that corresponds to the layout entity.  
            </summary>
        </member>
        <member name="P:Spire.Doc.Pages.FixedLayoutColumn.ParentNode">
            <summary>
            Provides the layout node that pertains to this particular entity.
            </summary>
        </member>
        <member name="T:Spire.Doc.Pages.FixedLayoutComment">
            <summary>
            Represents placeholder for comment content.
            </summary>
        </member>
        <member name="P:Spire.Doc.Pages.FixedLayoutComment.Comment">
            <summary>
            Returns the comment that corresponds to the layout entity.  
            </summary>
        </member>
        <member name="P:Spire.Doc.Pages.FixedLayoutComment.ParentNode">
            <summary>
            Provides the layout node that pertains to this particular entity. 
            </summary>
        </member>
        <member name="M:Spire.Doc.Pages.FixedLayoutDocument.#ctor(Spire.Doc.Document)">
            <summary>
            Creates a new instance from the supplied Document class.
            </summary>
            <param name="doc">A document whose page layout model to enumerate.</param>
        </member>
        <member name="P:Spire.Doc.Pages.FixedLayoutDocument.Pages">
            <summary>
            Provides access to the pages of a document.
            </summary>
        </member>
        <member name="P:Spire.Doc.Pages.FixedLayoutDocument.ParentNode">
            <summary>
            Provides the layout node that pertains to this particular entity.
            </summary>
        </member>
        <member name="M:Spire.Doc.Pages.FixedLayoutDocument.GetLayoutEntitiesOfNode(Spire.Doc.DocumentObject)">
            <summary>
            Returns all the layout entities of the specified node.
            </summary>
        </member>
        <member name="T:Spire.Doc.Pages.FixedLayoutEndnote">
            <summary>
            Represents placeholder for endnote content.
            </summary>
        </member>
        <member name="P:Spire.Doc.Pages.FixedLayoutEndnote.Endnote">
            <summary>
            Returns the endnote that corresponds to the layout entity.  
            </summary>
        </member>
        <member name="P:Spire.Doc.Pages.FixedLayoutEndnote.ParentNode">
            <summary>
            Provides the layout node that pertains to this particular entity.
            </summary>
        </member>
        <member name="T:Spire.Doc.Pages.FixedLayoutFootnote">
            <summary>
            Represents placeholder for footnote content.
            </summary>
        </member>
        <member name="P:Spire.Doc.Pages.FixedLayoutFootnote.Footnote">
            <summary>
            Returns the footnote that corresponds to the layout entity.  
            </summary>
        </member>
        <member name="P:Spire.Doc.Pages.FixedLayoutFootnote.ParentNode">
            <summary>
            Provides the layout node that pertains to this particular entity.
            </summary>
        </member>
        <member name="T:Spire.Doc.Pages.FixedLayoutHeaderFooter">
            <summary>
            Represents the header/footer content on a page.
            </summary>
        </member>
        <member name="P:Spire.Doc.Pages.FixedLayoutHeaderFooter.Kind">
            <summary>
            Returns the type of the header or footer.
            </summary>
        </member>
        <member name="T:Spire.Doc.Pages.FixedLayoutLine">
            <summary>
            Represents line of characters of text and inline objects.
            </summary>
        </member>
        <member name="P:Spire.Doc.Pages.FixedLayoutLine.Text">
            <summary>
            Exports the contents of the entity into a string in plain text format.
            </summary>
        </member>
        <member name="P:Spire.Doc.Pages.FixedLayoutLine.Paragraph">
            <summary>
            Returns the paragraph that corresponds to the layout entity.  
            </summary>
        </member>
        <member name="P:Spire.Doc.Pages.FixedLayoutLine.Spans">
            <summary>
            Provides access to the spans of the line.
            </summary>
        </member>
        <member name="T:Spire.Doc.Pages.FixedLayoutNoteSeparator">
            <summary>
            Represents footnote/endnote separator.
            </summary>
        </member>
        <member name="P:Spire.Doc.Pages.FixedLayoutNoteSeparator.Footnote">
            <summary>
            Returns the footnote/endnote that corresponds to the layout entity.  
            </summary>
        </member>
        <member name="P:Spire.Doc.Pages.FixedLayoutNoteSeparator.ParentNode">
            <summary>
            Provides the layout node that pertains to this particular entity.
            </summary>
        </member>
        <member name="T:Spire.Doc.Pages.FixedLayoutPage">
            <summary>
            Represents page of a document.
            </summary>
        </member>
        <member name="P:Spire.Doc.Pages.FixedLayoutPage.Columns">
            <summary>
            Provides access to the columns of the page.
            </summary>
        </member>
        <member name="P:Spire.Doc.Pages.FixedLayoutPage.HeaderFooters">
            <summary>
            Provides access to the header and footers of the page.
            </summary>
        </member>
        <member name="P:Spire.Doc.Pages.FixedLayoutPage.Comments">
            <summary>
            Provides access to the comments of the page.
            </summary>
        </member>
        <member name="P:Spire.Doc.Pages.FixedLayoutPage.Section">
            <summary>
            Returns the section that corresponds to the layout entity.  
            </summary>
        </member>
        <member name="P:Spire.Doc.Pages.FixedLayoutPage.ParentNode">
            <summary>
            Provides the layout node that pertains to this particular entity.
            </summary>
        </member>
        <member name="T:Spire.Doc.Pages.FixedLayoutRow">
            <summary>
            Represents a table row.
            </summary>
        </member>
        <member name="P:Spire.Doc.Pages.FixedLayoutRow.Cells">
            <summary>
            Provides access to the cells of the table row.
            </summary>
        </member>
        <member name="P:Spire.Doc.Pages.FixedLayoutRow.Row">
            <summary>
            Returns the row that corresponds to the layout entity.  
            </summary>
        </member>
        <member name="P:Spire.Doc.Pages.FixedLayoutRow.Table">
            <summary>
            Returns the table that corresponds to the layout entity.  
            </summary>
        </member>
        <member name="P:Spire.Doc.Pages.FixedLayoutRow.ParentNode">
            <summary>
            Provides the layout node that pertains to this particular entity.
            </summary>
        </member>
        <member name="T:Spire.Doc.Pages.FixedLayoutSpan">
            <summary>
            Represents one or more characters in a line.
            </summary>
        </member>
        <member name="M:Spire.Doc.Pages.FixedLayoutSpan.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Pages.FixedLayoutSpan"/> class.
            </summary>
        </member>
        <member name="M:Spire.Doc.Pages.FixedLayoutSpan.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Doc.Pages.FixedLayoutSpan"/> class.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="P:Spire.Doc.Pages.FixedLayoutSpan.Kind">
            <summary>
            Gets kind of the span. This cannot be null.
            </summary>
        </member>
        <member name="P:Spire.Doc.Pages.FixedLayoutSpan.Text">
            <summary>
            Exports the contents of the entity into a string in plain text format.
            </summary>
        </member>
        <member name="P:Spire.Doc.Pages.FixedLayoutSpan.ParentNode">
            <summary>
            Provides the layout node that pertains to this particular entity.
            </summary>
        </member>
        <member name="T:Spire.Doc.Pages.FixedLayoutTextBox">
            <summary>
            Represents text area inside of a shape.
            </summary>
        </member>
        <member name="P:Spire.Doc.Pages.FixedLayoutTextBox.ParentNode">
            <summary>
            Provides the layout node that pertains to this particular entity.
            </summary>
        </member>
        <member name="T:Spire.Doc.Pages.BodyLayoutElement">
            <summary>
            Describes an object that includes both lines and rows.
            </summary>
        </member>
        <member name="P:Spire.Doc.Pages.BodyLayoutElement.Lines">
            <summary>
            Gives the ability to retrieve the individual lines comprising a body.
            </summary>
        </member>
        <member name="P:Spire.Doc.Pages.BodyLayoutElement.Rows">
            <summary>
            Gives the capability to access the rows contained within a table.
            </summary>
        </member>
        <member name="F:Spire.Doc.Printing.PagesPreSheet.OnePage">
            <summary>
            Print one page per sheet.
            </summary>
        </member>
        <member name="F:Spire.Doc.Printing.PagesPreSheet.TwoPages">
            <summary>
            Print two pages per sheet.
            </summary>
        </member>
        <member name="F:Spire.Doc.Printing.PagesPreSheet.FourPages">
            <summary>
            Print four pages per sheet.
            </summary>
        </member>
        <member name="F:Spire.Doc.Printing.PagesPreSheet.SixPages">
            <summary>
            Print six pages per sheet.
            </summary>
        </member>
        <member name="F:Spire.Doc.Printing.PagesPreSheet.EightPages">
            <summary>
            Print eight pages per sheet.
            </summary>
        </member>
        <member name="F:Spire.Doc.Printing.PagesPreSheet.NinePages">
            <summary>
            Print nine pages per sheet.
            </summary>
        </member>
        <member name="F:Spire.Doc.Printing.PagesPreSheet.SixteenPages">
            <summary>
            Print sixteen pages per sheet.
            </summary>
        </member>
        <member name="T:Spire.Doc.FontFactory">
            <summary>
            Create font object
            </summary>
        </member>
        <member name="M:Spire.Doc.FontFactory.CreateFont(System.String,System.Single)">
            <summary>
            Initializes a new Font using a specified size and style.
            </summary>
            <param name="familyName">A string representation of the FontFamily for the new Font.</param>
            <param name="emSize">The em-size, in points, of the new font.</param>
            <returns>The new font.</returns>
        </member>
        <member name="M:Spire.Doc.FontFactory.CreateFont(System.String,System.Single,System.Drawing.FontStyle)">
            <summary>
            Initializes a new Font using a specified size and style.
            </summary>
            <param name="familyName">A string representation of the FontFamily for the new Font.</param>
            <param name="emSize">The em-size, in points, of the new font.</param>
            <param name="style">The System.Drawing.FontStyle of the new font.</param>
            <returns>The new font.</returns>
        </member>
        <member name="M:Spire.Doc.FontFactory.CreateFont(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle)">
            <summary>
            Initializes a new Font using a specified size and style.
            </summary>
            <param name="family">The FontFamily of the new Font.</param>
            <param name="emSize">The em-size, in points, of the new font.</param>
            <param name="style">The System.Drawing.FontStyle of the new font.</param>
            <returns>The new font.</returns>
        </member>
        <member name="M:Spire.Doc.FontFactory.CheckUnderlineOrStrikeout(System.Drawing.FontStyle,System.Drawing.FontStyle)">
            <summary>
            Checks the underline or strikeout styles.
            </summary>
            <param name="oldFontStyle">The old font style.</param>
            <param name="newFontStyle">The new font sytel.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.MathMethods.CompareFloat(System.Single,System.Single,System.Single)">
            <summary>
            Compares the floating number.
            </summary>
            <param name="val1">The value1.</param>
            <param name="val2">The value2.</param>
            <param name="accuracy">The accuracy.</param>
            <returns><c>return 0,val1 equal val2;return 1,val1 greater than val2;return -1,val1 less than val2;</c></returns>
        </member>
        <member name="M:Spire.Doc.MathMethods.CompareFloat(System.Single,System.Single)">
            <summary>
            Compares the floating number. the accuracy default is 0.005f.
            </summary>
            <param name="val1">The value1.</param>
            <param name="val2">The value2.</param>
            <returns><c>return 0,val1 equal val2;return 1,val1 greater than val2;return -1,val1 less than val2;</c></returns>
        </member>
        <member name="M:Spire.Doc.MathMethods.CompareDouble(System.Double,System.Double,System.Double)">
            <summary>
            Compares the double number.
            </summary>
            <param name="val1">The value1.</param>
            <param name="val2">The value2.</param>
            <param name="accuracy">The accuracy.</param>
            <returns><c>return 0,val1 equal val2;return 1,val1 greater than val2;return -1,val1 less than val2;</c></returns>
        </member>
        <member name="M:Spire.Doc.MathMethods.CompareDouble(System.Double,System.Double)">
            <summary>
            Compares the double number. the accuracy default is 0.005f.
            </summary>
            <param name="val1">The value1.</param>
            <param name="val2">The value2.</param>       
            <returns><c>return 0,val1 equal val2;return 1,val1 greater than val2;return -1,val1 less than val2;</c></returns>
        </member>
        <member name="M:Spire.Doc.MathMethods.FloatPrecision(System.Single,System.Byte)">
            <summary>
            Floating point precision.
            </summary>
            <param name="val">The value.</param>
            <param name="precision">The number of decimal places, 
            up to 6 decimal places, with a minimum of 0 decimal places.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Doc.MathMethods.KeepTowDecimalPlaces(System.Single)">
            <summary>
            Keeps tow decimal places.
            </summary>
            <param name="val">The value.</param>
            <returns></returns>
        </member>
        <member name="P:Spire.Doc.Utf32EnumeratorExtended.CurrentInt">
            <summary>
            Same as Current, but it returns int rather than object to avoid boxing penalty.
            </summary>
        </member>
        <member name="P:Spire.Doc.Utf32EnumeratorExtended.Offset">
            <summary>
            Gets the index of the current character in the source string.
            </summary>
        </member>
        <member name="T:Spire.Doc.FileFormat">
            <summary>
            Type of file format.
            </summary>
        </member>
        <member name="F:Spire.Doc.FileFormat.Doc">
            <summary>
            Microsoft Word 97 - 2003 Binary Document. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FileFormat.Dot">
            <summary>
            Microsoft Word 97 - 2003 Binary Document or Template.
            </summary>
        </member>
        <member name="F:Spire.Doc.FileFormat.Docx">
            <summary>
            Microsoft Word 2007 Document.
            </summary>
        </member>
        <member name="F:Spire.Doc.FileFormat.Docx2010">
            <summary>
            Microsoft Word 2010 Document
            </summary>
        </member>
        <member name="F:Spire.Doc.FileFormat.Docx2013">
            <summary>
            Microsoft Word 2013 Document
            </summary>
        </member>
        <member name="F:Spire.Doc.FileFormat.Docx2016">
            <summary>
            Microsoft Word 2016 Document
            </summary>
        </member>
        <member name="F:Spire.Doc.FileFormat.Docx2019">
            <summary>
            Microsoft Word 2019 Document
            </summary>
        </member>
        <member name="F:Spire.Doc.FileFormat.Dotx">
            <summary>
            Microsoft Word 2007 Template format.
            </summary>
        </member>
        <member name="F:Spire.Doc.FileFormat.Dotx2010">
            <summary>
            Microsoft Word 2010 Template format.
            </summary>
        </member>
        <member name="F:Spire.Doc.FileFormat.Dotx2013">
            <summary>
            Microsoft Word 2013 Template format.
            </summary>
        </member>
        <member name="F:Spire.Doc.FileFormat.Dotx2016">
            <summary>
            Microsoft Word 2016 Template format.
            </summary>
        </member>
        <member name="F:Spire.Doc.FileFormat.Dotx2019">
            <summary>
            Microsoft Word 2019 Template format.
            </summary>
        </member>
        <member name="F:Spire.Doc.FileFormat.Docm">
            <summary>
            Microsoft Word 2007 macro enabled file format.
            </summary>
        </member>
        <member name="F:Spire.Doc.FileFormat.Docm2010">
            <summary>
            Microsoft Word 2010 macro enabled file format.
            </summary>
        </member>
        <member name="F:Spire.Doc.FileFormat.Docm2013">
            <summary>
             Microsoft Word 2013 macro enabled file format.
            </summary>
        </member>
        <member name="F:Spire.Doc.FileFormat.Docm2016">
            <summary>
             Microsoft Word 2016 macro enabled file format.
            </summary>
        </member>
        <member name="F:Spire.Doc.FileFormat.Docm2019">
            <summary>
             Microsoft Word 2019 macro enabled file format.
            </summary>
        </member>
        <member name="F:Spire.Doc.FileFormat.Dotm">
            <summary>
            Microsoft Word 2007 macro enabled template format.
            </summary>
        </member>
        <member name="F:Spire.Doc.FileFormat.Dotm2010">
            <summary>
            Microsoft Word 2010 macro enabled template format.
            </summary>
        </member>
        <member name="F:Spire.Doc.FileFormat.Dotm2013">
            <summary>
            Microsoft Word 2013 macro enabled template format.
            </summary>
        </member>
        <member name="F:Spire.Doc.FileFormat.Dotm2016">
            <summary>
            Microsoft Word 2016 macro enabled template format.
            </summary>
        </member>
        <member name="F:Spire.Doc.FileFormat.Dotm2019">
            <summary>
            Microsoft Word 2019 macro enabled template format.
            </summary>
        </member>
        <member name="F:Spire.Doc.FileFormat.OOXML">
            <summary>
            Office Open Xml
            </summary>
        </member>
        <member name="F:Spire.Doc.FileFormat.WordML">
            <summary>
            Word xml format for for word 2003
            </summary>
        </member>
        <member name="F:Spire.Doc.FileFormat.WordXml">
            <summary>
            Word xml format for word 2007-2013
            </summary>
        </member>
        <member name="F:Spire.Doc.FileFormat.Odt">
            <summary>
            OpenDocument format.
            </summary>
        </member>
        <member name="F:Spire.Doc.FileFormat.Ott">
             <summary>
            OpenDocument Template format
             </summary>
        </member>
        <member name="F:Spire.Doc.FileFormat.PDF">
            <summary>
            PDF format    
            </summary>
        </member>
        <member name="F:Spire.Doc.FileFormat.Txt">
            <summary>
            Text file format.
            </summary>
        </member>
        <member name="F:Spire.Doc.FileFormat.Rtf">
            <summary>
            Rtf format
            </summary>
        </member>
        <member name="F:Spire.Doc.FileFormat.SVG">
            <summary>
            Scalable vector graphics format
            </summary>
        </member>
        <member name="F:Spire.Doc.FileFormat.Xml">
            <summary>
            Xml file format.
            </summary>
        </member>
        <member name="F:Spire.Doc.FileFormat.Html">
            <summary>
            Html format.
            </summary>
        </member>
        <member name="F:Spire.Doc.FileFormat.XPS">
            <summary>
            XPS format
            </summary>
        </member>
        <member name="F:Spire.Doc.FileFormat.EPub">
            <summary>
            EPub format
            </summary>
        </member>
        <member name="F:Spire.Doc.FileFormat.DocPre97">
            <summary>
            The document is in the Word 6 or Word 95 format. Spire.Doc does not currently support loading such documents. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FileFormat.PostScript">
            <summary>
            PostScript (PS) format.
            </summary>
        </member>
        <member name="F:Spire.Doc.FileFormat.PCL">
            <summary>
            Printer Command Language (PCL) format.
            </summary>
        </member>
        <member name="F:Spire.Doc.FileFormat.OFD">
            <summary>
             Open Fixed-layout Document (OFD) format.
            </summary>
        </member>
        <member name="F:Spire.Doc.FileFormat.OnlineDoc">
            <summary>
             Only for Spire Online editing.
            </summary>
        </member>
        <member name="F:Spire.Doc.FileFormat.Wps">
            <summary>
             Word processing system format.
            </summary>
        </member>
        <member name="F:Spire.Doc.FileFormat.Wpt">
            <summary>
             Word processing technician format.
            </summary>
        </member>
        <member name="F:Spire.Doc.FileFormat.Auto">
            <summary>
            Instructs Spire.Doc to recognize the format automatically. 
            </summary>
        </member>
        <member name="T:Spire.Doc.AutoFitBehaviorType">
            <summary>
            Specifies how Microsoft Word resizes a table when the AutoFit feature is used.
            </summary>
        </member>
        <member name="F:Spire.Doc.AutoFitBehaviorType.AutoFitToContents">
            <summary>
            The table is automatically sized to fit the content contained in the table.
            </summary>
        </member>
        <member name="F:Spire.Doc.AutoFitBehaviorType.AutoFitToWindow">
            <summary>
            The table is automatically sized to the width of the active window.
            </summary>
        </member>
        <member name="F:Spire.Doc.AutoFitBehaviorType.FixedColumnWidths">
            <summary>
            The table is set to a fixed size, regardless of the content, and is not automatically sized.
            </summary>
        </member>
        <member name="T:Spire.Doc.HttpContentType">
            <summary>
            Http content to browser.
            </summary>
        </member>
        <member name="F:Spire.Doc.HttpContentType.InBrowser">
            <summary>
            LoadFromStream directly in browser.
            </summary>
        </member>
        <member name="F:Spire.Doc.HttpContentType.Attachment">
            <summary>
            SaveToFile as attachment to the disk.
            </summary>
        </member>
        <member name="T:Spire.Doc.ProtectionType">
            <summary>
            Type of the protection in the document
            </summary>
        </member>
        <member name="F:Spire.Doc.ProtectionType.AllowOnlyComments">
            <summary>
            Only modify comments in the document. 
            </summary>
        </member>
        <member name="F:Spire.Doc.ProtectionType.AllowOnlyFormFields">
            <summary>
            Only enter data in the form fields in the document. 
            </summary>
        </member>
        <member name="F:Spire.Doc.ProtectionType.AllowOnlyReading">
            <summary>
            Only reading are allowed in the document. 
            </summary>
        </member>
        <member name="F:Spire.Doc.ProtectionType.AllowOnlyRevisions">
            <summary>
            Only add revision marks to the document. 
            </summary>
        </member>
        <member name="F:Spire.Doc.ProtectionType.NoProtection">
            <summary>
            Not protected
            </summary>
        </member>
        <member name="T:Spire.Doc.TextureStyle">
            <summary>
            Style of the Texture
            </summary>
        </member>
        <member name="T:Spire.Doc.FieldType">
            <summary>
            Type of fields
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldNone">
            <summary>
             Field type is not specified or unknown.
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldAddin">
            <summary>
            Specifies that the field contains data created by an add-in. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldAdvance">
            <summary>
              Offset subsequent text within a line to the left, right, up or down. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldAsk">
            <summary>
             Prompt the user for text to assign to a bookmark. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldAuthor">
            <summary>
            The name of the document's author from Summary Info. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldAutoNum">
            <summary>
            Insert an automatic number. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldAutoNumLegal">
            <summary>
               Insert an automatic number in legal format. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldAutoNumOutline">
            <summary>
            Insert an automatic number in outline format.
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldAutoText">
            <summary>
            Insert an AutoText entry. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldAutoTextList">
            <summary>
             Insert text based on style. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldBarcode">
            <summary>
            Insert a delivery point barcode. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldCitation">
            <summary>
            According to the citation style you choose, show an information about a particular source.
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldComments">
            <summary>
            The comments from Summary Info. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldCompare">
            <summary>
            Compares two values. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldCreateDate">
            <summary>
            The date the document was created.
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldData">
            <summary>
            Specifies data. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldDatabase">
            <summary>
            Insert data from an external database. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldDate">
            <summary>
            Specified Today`s Date.
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldDDE">
            <summary>
            Specified Type as DDE. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldDDEAuto">
            <summary>
            Specified Type as DDEAuto. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldDocProperty">
            <summary>
             Insert the value of the property
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldDocVariable">
            <summary>
            Insert the value of the document variable. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldEditTime">
            <summary>
            The total document editing time. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldEmbed">
            <summary>
            Specifies OLE embedded object.
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldEmpty">
            <summary>
            Specified Empty Field.
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldFormula">
            <summary>
            Specifies Field Expression.
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldFileName">
            <summary>
             The document's name.
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldFileSize">
            <summary>
            The size on disk of the active document. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldFillIn">
            <summary>
             Prompt the user for text to insert in the document. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldFootnoteRef">
            <summary>
            Specifies Type as FootnoteRef.
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldFormCheckBox">
            <summary>
            Specifies Check box control.
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldFormDropDown">
            <summary>
            Specifies Drop Down box control.
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldFormTextInput">
            <summary>
            Specifies Text control.
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldEquation">
            <summary>
            The EQ field is used to display a mathematical equation
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldGlossary">
            <summary>
            Specifies FieldGlossary.
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldGoToButton">
            <summary>
            Specifies GoToButton control.
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldHTMLActiveX">
            <summary>
            Specifies HTMLActiveX control.
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldHyperlink">
            <summary>
            Specifies Hyperlink control.
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldIf">
            <summary>
            Evaluate arguments conditionally. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldImport">
            <summary>
            Specifies Type as Import.
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldInclude">
            <summary>
            Specifies Type as Export.
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldIncludePicture">
            <summary>
            Insert a picture from a file. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldIncludeText">
            <summary>
            Insert text from a file. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldIndex">
            <summary>
            Create an index. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldIndexEntry">
            <summary>
              Mark an index entry. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldInfo">
            <summary>
            Data from Summary Info. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldKeyWord">
            <summary>
            The keywords from Summary Info. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldLastSavedBy">
            <summary>
            Name of user who last saved the document. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldLink">
            <summary>
            Linked OLE2 object.
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldListNum">
            <summary>
            Insert an element in a list. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldMacroButton">
            <summary>
            Run a macro. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldMergeField">
            <summary>
            Insert a mail merge field. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldMergeRec">
            <summary>
            The number of the current merge record.
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldMergeSeq">
            <summary>
            Merge record sequence number. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldNext">
            <summary>
            Go to the next record in a mail merge. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldNextIf">
            <summary>
            Conditionally go to the next record in a mail merge. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldNoteRef">
            <summary>
            Insert the number of a footnote or endnote.
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldNumChars">
            <summary>
            The number of characters in the document. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldNumPages">
            <summary>
             The number of pages in the document. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldNumWords">
            <summary>
            The number of words in the document. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldOCX">
            <summary>
            Represents an ActiveX control such as a command button etc.
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldPage">
            <summary>
            Insert the number of the current page. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldPageRef">
            <summary>
            Insert the number of the page containing the specified bookmark. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldPrint">
            <summary>
            Download commands to a printer. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldPrintDate">
            <summary>
            The date the document was last printed. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldPrivate">
            <summary>
            Stores data for documents converted from other file formats.
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldQuote">
            <summary>
            Insert literal text. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldRef">
            <summary>
            Insert the text marked by a bookmark. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldRefDoc">
            <summary>
            Create an index, table of contents, table of figures, and/or table of authorities by using multiple documents. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldRevisionNum">
            <summary>
            Insert the number of times the document has been saved. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldSaveDate">
            <summary>
            The date the document was last saved.
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldSection">
            <summary>
            Insert the number of the current section. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldSectionPages">
            <summary>
            Insert the total number of pages in the section. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldSequence">
            <summary>
            Insert an automatic sequence number. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldSet">
            <summary>
            Assign new text to a bookmark. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldSkipIf">
            <summary>
            Conditionally skip a record in a mail merge. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldStyleRef">
            <summary>
            Insert the text from a like-style paragraph. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldSubject">
            <summary>
             The document's subject from Summary Info. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldSubscriber">
            <summary>
             The document's Subscriber from Summary Info. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldSymbol">
            <summary>
             Insert a special character
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldTemplate">
            <summary>
            The name of the template attached to the document. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldTime">
            <summary>
             The current time. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldTitle">
            <summary>
            The document's title from Summary Info. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldTOA">
            <summary>
            Create a table of authorities. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldTOAEntry">
            <summary>
            Make a table of authorities entry. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldTOC">
            <summary>
            Create a table of contents. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldTOCEntry">
            <summary>
             Make a table of contents entry. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldUserAddress">
            <summary>
            Address from Tools Options User Info. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldUserInitials">
            <summary>
            Initials form Tools Options User Info. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldUserName">
            <summary>
             Name from Tools Options User Info. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldShape">
            <summary>
            Specifies Type as Shape.
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldBidiOutline">
            <summary>
            Specifies Type as BIDIOUTLINE.
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldAddressBlock">
            <summary>
            Specifies AddressBlock
            </summary>
        </member>
        <member name="F:Spire.Doc.FieldType.FieldUnknown">
            <summary>
             Specifies Type as Unknown.
            </summary>
        </member>
        <member name="T:Spire.Doc.CaptionNumberingFormat">
            <summary>
            Type of Caption Numbering
            </summary>
        </member>
        <member name="F:Spire.Doc.CaptionNumberingFormat.Number">
            <summary>
            caption format, Numbers 
            </summary>
        </member>
        <member name="F:Spire.Doc.CaptionNumberingFormat.Roman">
            <summary>
            Roman Numerals
            </summary>
        </member>
        <member name="F:Spire.Doc.CaptionNumberingFormat.Alphabetic">
            <summary>
            caption format, Alphabets
            </summary>
        </member>
        <member name="T:Spire.Doc.CaptionPosition">
            <summary>
            Position of Image Caption Numbering
            </summary>
        </member>
        <member name="F:Spire.Doc.CaptionPosition.AboveItem">
            <summary>
            Above the Item.
            </summary>
        </member>
        <member name="F:Spire.Doc.CaptionPosition.BelowItem">
            <summary>
            Below the Item.
            </summary>
        </member>
        <member name="T:Spire.Doc.DocumentViewType">
            <summary>
            Specifies view mode in Microsoft word.
            </summary>
        </member>
        <member name="F:Spire.Doc.DocumentViewType.None">
            <summary>
            Specifies that the document will be rendered in the default view of the application.
            </summary>
        </member>
        <member name="F:Spire.Doc.DocumentViewType.PrintLayout">
            <summary>
            Everything that will appear in the printed document appears on the screen.
            </summary>
        </member>
        <member name="F:Spire.Doc.DocumentViewType.OutlineLayout">
            <summary>
            Shows the headings and subheadings in the word document.
            </summary>
        </member>
        <member name="F:Spire.Doc.DocumentViewType.NormalLayout">
            <summary>
            Document appears with a dotted line separating the pages and/or document sections.
            Columns, drawings, headers/footers, footnotes/endnotes, and comments do not appear. 
            </summary>
        </member>
        <member name="F:Spire.Doc.DocumentViewType.WebLayout">
            <summary>
            Designed to show the word document will look as a web page.
            </summary>
        </member>
        <member name="T:Spire.Doc.ZoomType">
            <summary>
            Specifies zooming type in Microsoft Word.
            </summary>
        </member>
        <member name="F:Spire.Doc.ZoomType.None">
            <summary>
            Indicates to use the explicit zoom percentage. 
            </summary>
        </member>
        <member name="F:Spire.Doc.ZoomType.FullPage">
            <summary>
            Zoom percentage is automatically recalculated to fit one full page. 
            </summary>
        </member>
        <member name="F:Spire.Doc.ZoomType.PageWidth">
            <summary>
            Zoom percentage is automatically recalculated to fit page width. 
            </summary>
        </member>
        <member name="F:Spire.Doc.ZoomType.TextFit">
            <summary>
            Zoom percentage is automatically recalculated to fit text. 
            </summary>
        </member>
        <member name="T:Spire.Doc.LineNumberingRestartMode">
            <summary>
            Specifies when line numbering is restarted. 
            </summary>
        </member>
        <member name="F:Spire.Doc.LineNumberingRestartMode.RestartPage">
            <summary>
            Line numbering restarts at the start of every page
            </summary>
        </member>
        <member name="F:Spire.Doc.LineNumberingRestartMode.RestartSection">
            <summary>
            Line numbering restarts at the section start. 
            </summary>
        </member>
        <member name="F:Spire.Doc.LineNumberingRestartMode.Continuous">
            <summary>
            Line numbering continuous from the previous section. 
            </summary>
        </member>
        <member name="F:Spire.Doc.LineNumberingRestartMode.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="T:Spire.Doc.PageBordersApplyType">
            <summary>
            Specifies on which pages border is applied.
            </summary>
        </member>
        <member name="F:Spire.Doc.PageBordersApplyType.AllPages">
            <summary>
            Page border applies to all pages.
            </summary>
        </member>
        <member name="F:Spire.Doc.PageBordersApplyType.FirstPage">
            <summary>
            Page border applies only to first pages.
            </summary>
        </member>
        <member name="F:Spire.Doc.PageBordersApplyType.AllExceptFirstPage">
            <summary>
            Page border applies to all pages except the first.
            </summary>
        </member>
        <member name="T:Spire.Doc.PageBorderOffsetFrom">
            <summary>
            Specifies the position of page border.
            </summary>
        </member>
        <member name="F:Spire.Doc.PageBorderOffsetFrom.Text">
            <summary>
            Page border is measured from text.
            </summary>
        </member>
        <member name="F:Spire.Doc.PageBorderOffsetFrom.PageEdge">
            <summary>
            Page border is measured from the edge of the page.
            </summary>
        </member>
        <member name="T:Spire.Doc.TextEffect">
            <summary>
            Animation effect for text.
            </summary>
        </member>
        <member name="F:Spire.Doc.TextEffect.None">
            <summary>
            specifies no animation.
            </summary>
        </member>
        <member name="F:Spire.Doc.TextEffect.LasVegasLights">
            <summary>
            Specifies that this text shall be surrounded by a border consisting of a series of
            colored lights, which constantly change colors in sequence.
            </summary>
        </member>
        <member name="F:Spire.Doc.TextEffect.BlinkingBackground">
            <summary>
            Specifies that this text shall be surrounded by a background 
            color which alternates between black and white.
            </summary>
        </member>
        <member name="F:Spire.Doc.TextEffect.SparkleText">
            <summary>
            Specifies that this text shall have a background consisting of a random pattern of
            colored lights, which constantly change colors in sequence.
            </summary>
        </member>
        <member name="F:Spire.Doc.TextEffect.MarchingBlackAnts">
            <summary>
            Specifies that this text shall be surrounded by an animated black dashed line border.
            </summary>
        </member>
        <member name="F:Spire.Doc.TextEffect.MarchingRedAnts">
            <summary>
            Specifies that this text shall be surrounded by an animated red dashed line border.
            </summary>
        </member>
        <member name="F:Spire.Doc.TextEffect.Shimmer">
            <summary>
            Specifies that this text shall be animated by alternating between normal and blurry states.
            </summary>
        </member>
        <member name="T:Spire.Doc.OutlineLevel">
            <summary>
            The enum, which defines paragraph format's outline level
            </summary>
        </member>
        <member name="F:Spire.Doc.OutlineLevel.Level1">
            <summary>
            Outline level: "Level 1"
            </summary>
        </member>
        <member name="F:Spire.Doc.OutlineLevel.Level2">
            <summary>
            Outline level: "Level 2"
            </summary>
        </member>
        <member name="F:Spire.Doc.OutlineLevel.Level3">
            <summary>
            Outline level: "Level 3"
            </summary>
        </member>
        <member name="F:Spire.Doc.OutlineLevel.Level4">
            <summary>
            Outline level: "Level 4"
            </summary>
        </member>
        <member name="F:Spire.Doc.OutlineLevel.Level5">
            <summary>
            Outline level: "Level 5"
            </summary>
        </member>
        <member name="F:Spire.Doc.OutlineLevel.Level6">
            <summary>
            Outline level: "Level 6"
            </summary>
        </member>
        <member name="F:Spire.Doc.OutlineLevel.Level7">
            <summary>
            Outline level: "Level 7"
            </summary>
        </member>
        <member name="F:Spire.Doc.OutlineLevel.Level8">
            <summary>
            Outline level: "Level 8"
            </summary>
        </member>
        <member name="F:Spire.Doc.OutlineLevel.Level9">
            <summary>
            Outline level: "Level 9"
            </summary>
        </member>
        <member name="F:Spire.Doc.OutlineLevel.Body">
            <summary>
            Outline level: "Body"
            </summary>
        </member>
        <member name="T:Spire.Doc.HorizontalRelation">
            <summary>
            The enum defines the horizontal relation
            </summary>
        </member>
        <member name="F:Spire.Doc.HorizontalRelation.Column">
            <summary>
            The "Column" horizontal relation
            </summary>
        </member>
        <member name="F:Spire.Doc.HorizontalRelation.Margin">
            <summary>
            The "Margin" horizontal relation
            </summary>
        </member>
        <member name="F:Spire.Doc.HorizontalRelation.Page">
            <summary>
            The "Page" horizontal relation
            </summary>
        </member>
        <member name="T:Spire.Doc.VerticalRelation">
            <summary>
            The enum defines the vertical relation
            </summary>
        </member>
        <member name="F:Spire.Doc.VerticalRelation.Margin">
            <summary>
            The "Margin" vertical relation
            </summary>
        </member>
        <member name="F:Spire.Doc.VerticalRelation.Page">
            <summary>
            The "Page" vertical relation
            </summary>
        </member>
        <member name="F:Spire.Doc.VerticalRelation.Paragraph">
            <summary>
            The "Paragraph" vertical relation
            </summary>
        </member>
        <member name="T:Spire.Doc.HorizontalPosition">
            <summary>
            Specifies the absolute horizontal position.
            </summary>
        </member>
        <member name="F:Spire.Doc.HorizontalPosition.Left">
            <summary>
            The object is aligned to the left of the reference origin.
            </summary>
        </member>
        <member name="F:Spire.Doc.HorizontalPosition.Center">
            <summary>
            The object is centered to the reference origin.
            </summary>
        </member>
        <member name="F:Spire.Doc.HorizontalPosition.Right">
            <summary>
            The object is aligned to the right of the reference origin.
            </summary>
        </member>
        <member name="F:Spire.Doc.HorizontalPosition.Inside">
            <summary>
            "Inside" horizontal position.
            </summary>
        </member>
        <member name="F:Spire.Doc.HorizontalPosition.Outside">
            <summary>
            "Outside" horizontal position.
            </summary>
        </member>
        <member name="T:Spire.Doc.VerticalPosition">
            <summary>
            Specifies the absolute vertical position.
            </summary>
        </member>
        <member name="F:Spire.Doc.VerticalPosition.None">
            <summary>
            No vertical positioning
            </summary>
        </member>
        <member name="F:Spire.Doc.VerticalPosition.Top">
            <summary>
            "Top" vertical position
            </summary>
        </member>
        <member name="F:Spire.Doc.VerticalPosition.Center">
            <summary>
            "Center" vertical position
            </summary>
        </member>
        <member name="F:Spire.Doc.VerticalPosition.Bottom">
            <summary>
            "Bottom" vertical position
            </summary>
        </member>
        <member name="F:Spire.Doc.VerticalPosition.Inside">
            <summary>
            "Inside" vertical position
            </summary>
        </member>
        <member name="F:Spire.Doc.VerticalPosition.Outside">
            <summary>
            "Outside" vertical position.
            </summary>    
        </member>
        <member name="T:Spire.Doc.LineDashing">
            <summary>
            Line dashing.
            </summary>
        </member>
        <member name="F:Spire.Doc.LineDashing.Solid">
            <summary>
            Solid (continuous) pen.
            </summary>
        </member>
        <member name="F:Spire.Doc.LineDashing.Dash">
            <summary>
            PS_DASH system dash style.
            </summary>
        </member>
        <member name="F:Spire.Doc.LineDashing.Dot">
            <summary>
            PS_DOT system dash style.
            </summary>
        </member>
        <member name="F:Spire.Doc.LineDashing.DashDot">
            <summary>
            PS_DASHDOT system dash style.
            </summary>
        </member>
        <member name="F:Spire.Doc.LineDashing.DashDotDot">
            <summary>
            PS_DASHDOTDOT system dash style.
            </summary>
        </member>
        <member name="F:Spire.Doc.LineDashing.DotGEL">
            <summary>
            Square dot style.
            </summary>
        </member>
        <member name="F:Spire.Doc.LineDashing.DashGEL">
            <summary>
            Dash style.
            </summary>
        </member>
        <member name="F:Spire.Doc.LineDashing.LongDashGEL">
            <summary>
            Long dash style.
            </summary>
        </member>
        <member name="F:Spire.Doc.LineDashing.DashDotGEL">
            <summary>
            Dash short dash.
            </summary>
        </member>
        <member name="F:Spire.Doc.LineDashing.LongDashDotGEL">
            <summary>
            Long dash short dash.
            </summary>
        </member>
        <member name="F:Spire.Doc.LineDashing.LongDashDotDotGEL">
            <summary>
            Long dash short dash short dash.
            </summary>
        </member>
        <member name="T:Spire.Doc.WrapMode">
            <summary>
            Specifies Wrap mode.
            </summary>
        </member>
        <member name="F:Spire.Doc.WrapMode.Square">
            <summary>
            Square wrap mode.
            </summary>
        </member>
        <member name="F:Spire.Doc.WrapMode.ByPoints">
            <summary>
            ByPoints wrap mode.
            </summary>
        </member>
        <member name="F:Spire.Doc.WrapMode.None">
            <summary>
            No wrap mode.
            </summary>
        </member>
        <member name="F:Spire.Doc.WrapMode.TopBottom">
            <summary>
            TopBottom wrap mode.
            </summary>
        </member>
        <member name="F:Spire.Doc.WrapMode.Through">
            <summary>
            Through wrap mode.
            </summary>
        </member>
        <member name="T:Spire.Doc.PropertyValueType">
            <summary>
            Specifies PropertyValueType.
            </summary>
        </member>
        <member name="F:Spire.Doc.PropertyValueType.Boolean">
            <summary>
            Specifies Value type as boolean.
            </summary>
        </member>
        <member name="F:Spire.Doc.PropertyValueType.Date">
            <summary>
             Specifies Value type as date.
            </summary>
        </member>
        <member name="F:Spire.Doc.PropertyValueType.Float">
            <summary>
             Specifies Value type as float.
            </summary>
        </member>
        <member name="F:Spire.Doc.PropertyValueType.Double">
            <summary>
             Specifies Value type as double.
            </summary>
        </member>
        <member name="F:Spire.Doc.PropertyValueType.Int">
            <summary>
             Specifies Value type as integer.
            </summary>
        </member>
        <member name="F:Spire.Doc.PropertyValueType.String">
            <summary>
             Specifies Value type as String.
            </summary>
        </member>
        <member name="F:Spire.Doc.PropertyValueType.ByteArray">
            <summary>
             Specifies Value type as byte array.
            </summary>
        </member>
        <member name="F:Spire.Doc.PropertyValueType.ClipData">
            <summary>
             Specifies Value type as ClipData.
            </summary>
        </member>
        <member name="F:Spire.Doc.PropertyValueType.Other">
            <summary>
            The property is some other type.
            </summary>
        </member>
        <member name="T:Spire.Doc.PropertyType">
            <summary>
            Specifies Type of the Property.
            </summary>
        </member>
        <member name="F:Spire.Doc.PropertyType.Summary">
            <summary>
            Specifies Property Type as Summary.
            </summary>
        </member>
        <member name="F:Spire.Doc.PropertyType.DocumentSummary">
            <summary>
            Specifies Property Type as DocumentSummary.
            </summary>
        </member>
        <member name="F:Spire.Doc.PropertyType.Custom">
            <summary>
            Specifies Property Type as Custom.
            </summary>
        </member>
        <member name="T:Spire.Doc.LineSpacingRule">
            <summary>
            Paragraph line spacing rule
            </summary>
        </member>
        <member name="F:Spire.Doc.LineSpacingRule.AtLeast">
            <summary>
            The line spacing can be greater than or equal to, but never less than,
            the value specified in the LineSpacing property. 
            </summary>
        </member>
        <member name="F:Spire.Doc.LineSpacingRule.Exactly">
            <summary>
            The line spacing never changes from the value specified in the LineSpacing property, 
            even if a larger font is used within the paragraph. 
            </summary>
        </member>
        <member name="F:Spire.Doc.LineSpacingRule.Multiple">
            <summary>
            The line spacing is specified in the LineSpacing property as the number of lines. 
            One line equals 12 points. 
            </summary>
        </member>
        <member name="T:Spire.Doc.ShapeHorizontalAlignment">
            <summary>
            Specifies horizontal alignment of a floating shape.
            </summary>
        </member>
        <member name="F:Spire.Doc.ShapeHorizontalAlignment.None">
            <summary>
            The object is explicitly positioned using position properties.
            </summary>
        </member>
        <member name="F:Spire.Doc.ShapeHorizontalAlignment.Left">
            <summary>
            The object is aligned to the left of the reference origin.
            </summary>
        </member>
        <member name="F:Spire.Doc.ShapeHorizontalAlignment.Center">
            <summary>
            The object is centered to the reference origin.
            </summary>
        </member>
        <member name="F:Spire.Doc.ShapeHorizontalAlignment.Right">
            <summary>
            The object is aligned to the right of the reference origin.
            </summary>
        </member>
        <member name="F:Spire.Doc.ShapeHorizontalAlignment.Inside">
            <summary>
            Not documented.
            </summary>
        </member>
        <member name="F:Spire.Doc.ShapeHorizontalAlignment.Outside">
            <summary>
            Not documented.
            </summary>
        </member>
        <member name="T:Spire.Doc.ShapeVerticalAlignment">
            <summary>
            Specifies vertical alignment of a floating shape.
            </summary>
        </member>
        <member name="F:Spire.Doc.ShapeVerticalAlignment.Inline">
            <summary>
            Not documented.
            </summary>
        </member>
        <member name="F:Spire.Doc.ShapeVerticalAlignment.None">
            <summary>
            The object is explicitly positioned using position properties.
            </summary>
        </member>
        <member name="F:Spire.Doc.ShapeVerticalAlignment.Top">
            <summary>
            The object is aligned to the top of the reference origin.
            </summary>
        </member>
        <member name="F:Spire.Doc.ShapeVerticalAlignment.Center">
            <summary>
            The object is centered relative to the reference origin.
            </summary>
        </member>
        <member name="F:Spire.Doc.ShapeVerticalAlignment.Bottom">
            <summary>
            The object is aligned to the bottom of the reference origin.
            </summary>
        </member>
        <member name="F:Spire.Doc.ShapeVerticalAlignment.Inside">
            <summary>
            Not documented.
            </summary>
        </member>
        <member name="F:Spire.Doc.ShapeVerticalAlignment.Outside">
            <summary>
            Not documented.
            </summary>
        </member>
        <member name="T:Spire.Doc.TextAnchor">
            <summary>
            Specifies vertical alignment of a textbox.
            </summary>
        </member>
        <member name="F:Spire.Doc.TextAnchor.Top">
            <summary>
            The object is aligned to the top of the reference origin.
            </summary>
        </member>
        <member name="F:Spire.Doc.TextAnchor.Center">
            <summary>
            The object is centered relative to the reference origin.
            </summary>
        </member>
        <member name="F:Spire.Doc.TextAnchor.Bottom">
            <summary>
            The object is aligned to the bottom of the reference origin.
            </summary>
        </member>
        <member name="T:Spire.Doc.TextFormFieldType">
            <summary>
            Specifies the type of a text form field.
            </summary>
        </member>
        <member name="F:Spire.Doc.TextFormFieldType.RegularText">
            <summary>
            Text form field can contain any text. 
            </summary>
        </member>
        <member name="F:Spire.Doc.TextFormFieldType.NumberText">
            <summary>
            Text form field can contain only numbers.
            </summary>
        </member>
        <member name="F:Spire.Doc.TextFormFieldType.DateText">
            <summary>
            Text for field can contain only a valid date value. 
            </summary>
        </member>
        <member name="T:Spire.Doc.FootnotePosition">
            <summary>
            Specifies FootnotePosition.
            </summary>
        </member>
        <member name="F:Spire.Doc.FootnotePosition.PrintAsEndOfSection">
            <summary>
            Endnotes are output at the end of the section.
            </summary>
        </member>
        <member name="F:Spire.Doc.FootnotePosition.PrintAtBottomOfPage">
            <summary>
            Footnotes are output at the bottom of each page. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FootnotePosition.PrintImmediatelyBeneathText">
            <summary>
            Footnotes are output beneath text on each page. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FootnotePosition.PrintAsEndOfDocument">
            <summary>
            Endnotes are output at the end of the document. Valid for endnotes only.
            </summary>
        </member>
        <member name="T:Spire.Doc.FootnoteRestartRule">
            <summary>
            Specifies FootnoteRestartIndex.
            </summary>
        </member>
        <member name="F:Spire.Doc.FootnoteRestartRule.DoNotRestart">
            <summary>
            Numbering continuous throughout the document. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FootnoteRestartRule.RestartSection">
            <summary>
            Numbering restarts at each section.
            </summary>
        </member>
        <member name="F:Spire.Doc.FootnoteRestartRule.RestartPage">
            <summary>
            Numbering restarts at each page.
            </summary>
        </member>
        <member name="F:Spire.Doc.FootnoteRestartRule.Default">
            <summary>
            Equals <see cref="F:Spire.Doc.FootnoteRestartRule.DoNotRestart"/>.
            </summary>
        </member>
        <member name="T:Spire.Doc.EndnotePosition">
            <summary>
            Endnote position of the Document.
            </summary>
        </member>
        <member name="F:Spire.Doc.EndnotePosition.DisplayEndOfSection">
            <summary>
            Placed the Endnote on End of the section.
            </summary>
        </member>
        <member name="F:Spire.Doc.EndnotePosition.DisplayEndOfDocument">
            <summary>
            Placed the Endnote on End of the Document.
            </summary>
        </member>
        <member name="T:Spire.Doc.FootnoteNumberFormat">
            <summary>
            Specifies Numberformat of FootEndNote. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FootnoteNumberFormat.Arabic">
            <summary>
            Arabic format (1, 2, 3, ...).
            </summary>
        </member>
        <member name="F:Spire.Doc.FootnoteNumberFormat.DecimalFullWidth">
            <summary>
            Specifies that the sequence shall consist of full-width Arabic numbering.
            </summary>
        </member>
        <member name="F:Spire.Doc.FootnoteNumberFormat.Hebrew1">
            <summary>
            Specifies that the sequence shall consist of Hebrew letters from the set listed below.
            </summary>
        </member>
        <member name="F:Spire.Doc.FootnoteNumberFormat.Hebrew2">
            <summary>
            Specifies that the sequence shall consist of the Hebrew alphabet.
            </summary>
        </member>
        <member name="F:Spire.Doc.FootnoteNumberFormat.ArabicAlpha">
            <summary>
            Specifies that the sequence shall consist of one or more occurrences of 
            a single character int the Arabic alphabet from the set listed below. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FootnoteNumberFormat.ArabicAbjad">
            <summary>
            Specifies that the sequence shall consist of one or more occurrences of 
            a single ascending Abjad numerall from the set listed below. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FootnoteNumberFormat.UpperCaseRoman">
            <summary>
            Upper case Roman format (I, II, III, ...) .
            </summary>
        </member>
        <member name="F:Spire.Doc.FootnoteNumberFormat.LowerCaseRoman">
            <summary>
            Lower case Roman format (i, ii, iii, ...) .
            </summary>
        </member>
        <member name="F:Spire.Doc.FootnoteNumberFormat.UpperCaseLetter">
            <summary>
            Upper case letters format (A, B, C, ...) .
            </summary>
        </member>
        <member name="F:Spire.Doc.FootnoteNumberFormat.LowerCaseLetter">
            <summary>
            Lower case letters format (a, b, c, ...) .
            </summary>
        </member>
        <member name="F:Spire.Doc.FootnoteNumberFormat.Chicago">
            <summary>
            Chicago manual of style.
            </summary>
        </member>
        <member name="F:Spire.Doc.FootnoteNumberFormat.ChineseLegalSimplified">
            <summary>
            Specifies that the sequence shall consist of one or more occurrences of
            a single sequential number from the Chinese simplified legal format.
            </summary>
        </member>
        <member name="F:Spire.Doc.FootnoteNumberFormat.ChineseCountingThousand">
            <summary>
            Specifies that the sequence shall consist of one or more occurrences of
            a single sequential number from the Chinese counting thousand system.
            </summary>
        </member>
        <member name="F:Spire.Doc.FootnoteNumberFormat.IdeographTraditional">
            <summary>
            Specifies that the sequence shall consist of sequential numerical traditional ideographs.
            </summary>
        </member>
        <member name="F:Spire.Doc.FootnoteNumberFormat.IdeographZodiac">
            <summary>
             Specifies that the sequence shall consist of sequential numerical zodiac ideographs.
            </summary>
        </member>
        <member name="F:Spire.Doc.FootnoteNumberFormat.DecimalEnclosedCircleChinese">
            <summary>
            Identical to DecimalEnclosedCircle
            </summary>
        </member>
        <member name="F:Spire.Doc.FootnoteNumberFormat.IdeographEnclosedCircle">
            <summary>
            Specifies that the sequence shall consist of sequential numerical ideographs.
            </summary>
        </member>
        <member name="T:Spire.Doc.FootnoteType">
            <summary>
            Specifies the Type of the FootNote.
            </summary>
        </member>
        <member name="F:Spire.Doc.FootnoteType.Footnote">
            <summary>
            Specifies object is a footnote. 
            </summary>
        </member>
        <member name="F:Spire.Doc.FootnoteType.Endnote">
            <summary>
            Specifies object is a endnote. 
            </summary>
        </member>
        <member name="F:Spire.Doc.LocaleIDs.es_AR">
            <summary>
            Spanish (Argentina)
            </summary>
        </member>
        <member name="F:Spire.Doc.LocaleIDs.es_BO">
            <summary>
            Spanish (Bolivia)
            </summary>
        </member>
        <member name="F:Spire.Doc.LocaleIDs.es_CL">
            <summary>
            Spanish (Chile)
            </summary>
        </member>
        <member name="F:Spire.Doc.LocaleIDs.es_CO">
            <summary>
            Spanish (Colombia)
            </summary>
        </member>
        <member name="F:Spire.Doc.LocaleIDs.es_CR">
            <summary>
            Spanish (Costa Rica)
            </summary>
        </member>
        <member name="F:Spire.Doc.LocaleIDs.es_DO">
            <summary>
            Spanish (Dominican Republic)
            </summary>
        </member>
        <member name="F:Spire.Doc.LocaleIDs.es_EC">
            <summary>
            Spanish (Ecuador)
            </summary>
        </member>
        <member name="F:Spire.Doc.LocaleIDs.es_SV">
            <summary>
            Spanish (El Salvador)
            </summary>
        </member>
        <member name="F:Spire.Doc.LocaleIDs.es_GT">
            <summary>
            Spanish (Guatemala)
            </summary>
        </member>
        <member name="F:Spire.Doc.LocaleIDs.es_HN">
            <summary>
            Spanish (Honduras)
            </summary>
        </member>
        <member name="F:Spire.Doc.LocaleIDs.es_MX">
            <summary>
            Spanish (Mexico)
            </summary>
        </member>
        <member name="F:Spire.Doc.LocaleIDs.es_NI">
            <summary>
            Spanish (Nicaragua)
            </summary>
        </member>
        <member name="F:Spire.Doc.LocaleIDs.es_PA">
            <summary>
            Spanish (Panama)
            </summary>
        </member>
        <member name="F:Spire.Doc.LocaleIDs.es_PY">
            <summary>
            Spanish (Paraguay)
            </summary>
        </member>
        <member name="F:Spire.Doc.LocaleIDs.es_PE">
            <summary>
            Spanish (Paraguay
            </summary>
        </member>
        <member name="F:Spire.Doc.LocaleIDs.es_PR">
            <summary>
            Spanish (Puerto Rico)
            </summary>
        </member>
        <member name="F:Spire.Doc.LocaleIDs.es_ES">
            <summary>
            Spanish (International Sort)
            </summary>
        </member>
        <member name="F:Spire.Doc.LocaleIDs.syr_SY">
            <summary>
            Syriac
            </summary>
        </member>
        <member name="F:Spire.Doc.LocaleIDs.tg_Cyrl_TJ">
            <summary>
            Tajik
            </summary>
        </member>
        <member name="F:Spire.Doc.LocaleIDs.tzm_Arab_MA">
            <summary>
            Tamazight
            </summary>
        </member>
        <member name="F:Spire.Doc.LocaleIDs.tzm_Latn_DZ">
            <summary>
            Tamazight (Latin)
            </summary>
        </member>
        <member name="F:Spire.Doc.LocaleIDs.ta_IN">
            <summary>
            Tamil
            </summary>
        </member>
        <member name="F:Spire.Doc.LocaleIDs.tt_RU">
            <summary>
            Tatar
            </summary>
        </member>
        <member name="F:Spire.Doc.LocaleIDs.te_IN">
            <summary>
            Telugu
            </summary>
        </member>
        <member name="F:Spire.Doc.LocaleIDs.th_TH">
            <summary>
            Thai
            </summary>
        </member>
        <member name="F:Spire.Doc.LocaleIDs.bo_CN">
            <summary>
            Tibetan (PRC)
            </summary>
        </member>
        <member name="F:Spire.Doc.LocaleIDs.ti_ER">
            <summary>
            Tigrigna (Eritrea)
            </summary>
        </member>
        <member name="F:Spire.Doc.LocaleIDs.ti_ET">
            <summary>
            Tigrigna (Ethiopia)
            </summary>
        </member>
        <member name="F:Spire.Doc.LocaleIDs.ts_ZA">
            <summary>
            Tsonga
            </summary>
        </member>
        <member name="F:Spire.Doc.LocaleIDs.tr_TR">
            <summary>
            Turkish
            </summary>
        </member>
        <member name="F:Spire.Doc.LocaleIDs.tk_TM">
            <summary>
            Turkmen
            </summary>
        </member>
        <member name="F:Spire.Doc.LocaleIDs.uk_UA">
            <summary>
            Ukrainian
            </summary>
        </member>
        <member name="F:Spire.Doc.LocaleIDs.ur_PK">
            <summary>
            Urdu
            </summary>
        </member>
        <member name="F:Spire.Doc.LocaleIDs.uz_Cyrl_UZ">
            <summary>
            Uzbek (Cyrillic)
            </summary>
        </member>
        <member name="F:Spire.Doc.LocaleIDs.uz_Latn_UZ">
            <summary>
            Uzbek (Latin)
            </summary>
        </member>
        <member name="F:Spire.Doc.LocaleIDs.ve_ZA">
            <summary>
            Venda
            </summary>
        </member>
        <member name="F:Spire.Doc.LocaleIDs.vi_VN">
            <summary>
            Vietnamese
            </summary>
        </member>
        <member name="F:Spire.Doc.LocaleIDs.cy_GB">
            <summary>
            Welsh
            </summary>
        </member>
        <member name="F:Spire.Doc.LocaleIDs.ii_CN">
            <summary>
            Yi
            </summary>
        </member>
        <member name="F:Spire.Doc.LocaleIDs.yi_Hebr">
            <summary>
            Yiddish
            </summary>
        </member>
        <member name="F:Spire.Doc.LocaleIDs.yo_NG">
            <summary>
            Yoruba
            </summary>
        </member>
        <member name="F:Spire.Doc.LocaleIDs.ja_JP">
            <summary>
            Japanese
            </summary>
        </member>
        <member name="F:Spire.Doc.LocaleIDs.nl">
            <summary>
            Dutch
            </summary>
        </member>
        <member name="T:Spire.Doc.FtsWidth">
            <summary>
            Specifies preferred width type
            </summary>
        </member>
        <member name="F:Spire.Doc.FtsWidth.None">
            <summary>
            No Preffered Width
            </summary>
        </member>
        <member name="F:Spire.Doc.FtsWidth.Auto">
            <summary>
            No preferred width is specified.
            The width is derived from other table measurements where a preferred size is specified, 
            as well as from the size of the table contents, and the constraining size of the
            container of the table.
            </summary>
        </member>
        <member name="F:Spire.Doc.FtsWidth.Percentage">
            <summary>
            Preferred table width specified in percentage.
            The preferred width is measured in units of 1/50th of a percent.
            </summary>
        </member>
        <member name="F:Spire.Doc.FtsWidth.Point">
            <summary>
            The preferred width of the table,indent,cell,cell margin,
            or cell spacing is an absolute width measured in twips.
            </summary>
        </member>
        <member name="F:Spire.Doc.FtsWidth.ftsDxaSys">
            <summary>
            The preferred cell spacing is an absoute width measured in twips.
            </summary>
        </member>
        <member name="T:Spire.Doc.CellWidthType">
            <summary>
            Specifies preferred width type
            </summary>
        </member>
        <member name="F:Spire.Doc.CellWidthType.Auto">
            <summary>
            No preferred width is specified.
            The width is derived from other table measurements where a preferred size is specified, 
            as well as from the size of the table contents, and the constraining size of the
            container of the table.
            </summary>
        </member>
        <member name="F:Spire.Doc.CellWidthType.Percentage">
            <summary>
            Preferred table width specified in percentage
            </summary>
        </member>
        <member name="F:Spire.Doc.CellWidthType.Point">
            <summary>
            Preferred table width specified in points
            </summary>
        </member>
        <member name="T:Spire.Doc.LayoutType">
            <summary>
            This simple type defines the possible type of layout algorthms which can be used
            to layout a table within a WordprocessingML document.
            </summary>
        </member>
        <member name="F:Spire.Doc.LayoutType.Fixed">
            <summary>
            Specifies that this table shall use the fixed width table layout algorithm 
            described above.
            </summary>
        </member>
        <member name="F:Spire.Doc.LayoutType.AutoFit">
            <summary>
            Specifies that this table shall use an AutoFit table layout algorithm.
            </summary>
        </member>
        <member name="T:Spire.Doc.LineBreaksPunctuation">
            <summary>
            Line Breaks Punctuation
            </summary>
        </member>
        <member name="F:Spire.Doc.LineBreaksPunctuation.LineBreaksAfter">
            <summary>
            lead punctuation
            </summary>
        </member>
        <member name="F:Spire.Doc.LineBreaksPunctuation.LineBreaksBefore">
            <summary>
            rear punctuation
            </summary>
        </member>
        <member name="F:Spire.Doc.LineBreaksPunctuation.None">
            <summary>
            Punctuation is not
            </summary>
        </member>
        <member name="T:Spire.Doc.CharacterSpacing">
            <summary>
            Character Spacing Control enum.
            </summary>
        </member>
        <member name="F:Spire.Doc.CharacterSpacing.doNotCompress">
            <summary>
            Don't compress punctuation.
            </summary>
        </member>
        <member name="F:Spire.Doc.CharacterSpacing.compressPunctuation">
            <summary>
            Compress punctuation.
            </summary>
        </member>
        <member name="F:Spire.Doc.CharacterSpacing.compressPunctuationAndJapaneseKana">
            <summary>
            Compress punctuation and japanese kana.
            </summary>
        </member>
        <member name="T:Spire.Doc.FrameTextWrap">
            <summary>
            Text wrapping around text frame type.
            </summary>
        </member>
        <member name="F:Spire.Doc.FrameTextWrap.Auto">
            <summary>
            Default Text Wrapping Around Frame.
            </summary>
        </member>
        <member name="F:Spire.Doc.FrameTextWrap.NotBeside">
            <summary>
            No text wrapping around frame.
            </summary>
        </member>
        <member name="F:Spire.Doc.FrameTextWrap.Around">
            <summary>
            Allow text wraping around frame.
            </summary>
        </member>
        <member name="F:Spire.Doc.FrameTextWrap.None">
            <summary>
            No text Wrapping around frame.
            </summary>
        </member>
        <member name="F:Spire.Doc.FrameTextWrap.Tight">
            <summary>
            Tight text wrapping around frame.
            </summary>
        </member>
        <member name="F:Spire.Doc.FrameTextWrap.Through">
            <summary>
            Through text Wraping around frame.
            </summary>
        </member>
        <member name="T:Spire.Doc.FrameSizeRule">
            <summary>
            Frame size rule.
            </summary>
        </member>
        <member name="F:Spire.Doc.FrameSizeRule.AtLeast">
            <summary>
            Frame's height should be at least the value of the h attribute.
            </summary>
        </member>
        <member name="F:Spire.Doc.FrameSizeRule.Exact">
            <summary>
            Frame's width or height should be exactly the value of the w or h attribute.
            </summary>
        </member>
        <member name="F:Spire.Doc.FrameSizeRule.Auto">
            <summary>
             Frame's width or height should be automatically.The w or h value is ignored.
            </summary>
        </member>
        <member name="F:Spire.Doc.StrokeArrowLength.Short">
            <summary>
            Short length.
            </summary>
        </member>
        <member name="F:Spire.Doc.StrokeArrowLength.Medium">
            <summary>
            Medium length.
            </summary>
        </member>
        <member name="F:Spire.Doc.StrokeArrowLength.Long">
            <summary>
            Long length.
            </summary>
        </member>
        <member name="T:Spire.Doc.StrokeArrowWidth">
            <summary>
            This simple type specifies the widths of a stroke arrowhead.
            </summary>
        </member>
        <member name="F:Spire.Doc.StrokeArrowWidth.Narrow">
            <summary>
            Narrow width.
            </summary>
        </member>
        <member name="F:Spire.Doc.StrokeArrowWidth.Medium">
            <summary>
            Medium width.
            </summary>
        </member>
        <member name="F:Spire.Doc.StrokeArrowWidth.Wide">
            <summary>
            Wide width.
            </summary>
        </member>
        <member name="T:Spire.Doc.StrokeEndCap">
            <summary>
            this simple type specifies the styles for the end of a stroke.
            </summary>
        </member>
        <member name="F:Spire.Doc.StrokeEndCap.Flat">
            <summary>
            Flat end.
            </summary>
        </member>
        <member name="F:Spire.Doc.StrokeEndCap.Round">
            <summary>
            Round end.
            </summary>
        </member>
        <member name="F:Spire.Doc.StrokeEndCap.Square">
            <summary>
            Square end.
            </summary>
        </member>
        <member name="T:Spire.Doc.StrokeJoinStyle">
            <summary>
            This simple type specifies the join styles for a polyline.
            </summary>
        </member>
        <member name="F:Spire.Doc.StrokeJoinStyle.Bevel">
            <summary>
            Bevel joint.
            </summary>
        </member>
        <member name="F:Spire.Doc.StrokeJoinStyle.Miter">
            <summary>
            Miter joint.
            </summary>
        </member>
        <member name="F:Spire.Doc.StrokeJoinStyle.Round">
            <summary>
            Round joint.
            </summary>
        </member>
        <member name="T:Spire.Doc.StrokeLineStyle">
            <summary>
            This simple type specifies the line styles for a stroke.
            </summary>
        </member>
        <member name="F:Spire.Doc.StrokeLineStyle.Single">
            <summary>
            Single line.
            </summary>
        </member>
        <member name="F:Spire.Doc.StrokeLineStyle.ThickBetweenThin">
            <summary>
            Thick line between thin lines.
            </summary>
        </member>
        <member name="F:Spire.Doc.StrokeLineStyle.ThickThin">
            <summary>
            Thick line outside thin line.
            </summary>
        </member>
        <member name="F:Spire.Doc.StrokeLineStyle.ThinThick">
            <summary>
            Thin line outside thick line.
            </summary>
        </member>
        <member name="F:Spire.Doc.StrokeLineStyle.ThinThin">
            <summary>
            Two thin lines.
            </summary>
        </member>
        <member name="T:Spire.Doc.EditAs">
            <summary>
            This simple type specifies the different meanings of a group of shapes.
            </summary>
        </member>
        <member name="F:Spire.Doc.EditAs.Group">
            <summary>
            The group shape is a normal group of shapes.
            </summary>
        </member>
        <member name="F:Spire.Doc.EditAs.Canvas">
            <summary>
            Specifies that the group is a regular group and does not represent a diagram.
            </summary>
        </member>
        <member name="F:Spire.Doc.EditAs.OrgChart">
            <summary>
            Specifies that the group represents an organization chart.
            </summary>
        </member>
        <member name="F:Spire.Doc.EditAs.Radial">
            <summary>
            Specifies that the group represents a radial diagram.
            </summary>
        </member>
        <member name="F:Spire.Doc.EditAs.Cycle">
            <summary>
            Specifies that the group represents a cycle diagram.
            </summary>
        </member>
        <member name="F:Spire.Doc.EditAs.stacked">
            <summary>
            Specifies that the group represents a pyramid diagram.
            </summary>
        </member>
        <member name="F:Spire.Doc.EditAs.Venn">
            <summary>
            Specifies that the group represents a Venn diagram.
            </summary>
        </member>
        <member name="F:Spire.Doc.EditAs.BullSeye">
            <summary>
            Specifies that the group represents a bulls-eye diagram Target.
            </summary>
        </member>
        <member name="T:Spire.Doc.Unit">
            <summary>
            Unit conversion between.
            </summary>
        </member>
        <member name="T:Spire.Doc.BookmarkTextStyle">
            <summary>
            Allows to choose outline text style.
            </summary>
        </member>
        <member name="F:Spire.Doc.BookmarkTextStyle.Regular">
            <summary>
            Regular text style.
            </summary>
        </member>
        <member name="F:Spire.Doc.BookmarkTextStyle.Italic">
            <summary>
            Italic text style.
            </summary>
        </member>
        <member name="F:Spire.Doc.BookmarkTextStyle.Bold">
            <summary>
            Bold text style.
            </summary>
        </member>
    </members>
</doc>
